2023-03-18 10:28:43,409:INFO:Initializing load_model()
2023-03-18 10:28:43,410:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:30:23,663:INFO:Initializing load_model()
2023-03-18 10:30:23,665:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:31:05,514:INFO:Initializing load_model()
2023-03-18 10:31:05,515:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:31:05,615:INFO:Initializing predict_model()
2023-03-18 10:31:05,616:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:31:05,619:INFO:Checking exceptions
2023-03-18 10:31:05,620:INFO:Preloading libraries
2023-03-18 10:41:04,577:INFO:Initializing load_model()
2023-03-18 10:41:04,577:INFO:Initializing load_model()
2023-03-18 10:41:04,578:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:41:04,578:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:41:08,071:INFO:Initializing load_model()
2023-03-18 10:41:08,072:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:41:08,176:INFO:Initializing predict_model()
2023-03-18 10:41:08,177:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:41:08,180:INFO:Checking exceptions
2023-03-18 10:41:08,180:INFO:Preloading libraries
2023-03-18 10:42:12,346:INFO:Initializing load_model()
2023-03-18 10:42:12,347:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:42:16,005:INFO:Initializing load_model()
2023-03-18 10:42:16,006:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:42:16,102:INFO:Initializing predict_model()
2023-03-18 10:42:16,103:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:42:16,107:INFO:Checking exceptions
2023-03-18 10:42:16,107:INFO:Preloading libraries
2023-03-18 10:47:58,173:INFO:Initializing load_model()
2023-03-18 10:47:58,174:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:48:05,547:INFO:Initializing load_model()
2023-03-18 10:48:05,548:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:48:10,661:INFO:Initializing load_model()
2023-03-18 10:48:10,664:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:48:22,182:INFO:Initializing load_model()
2023-03-18 10:48:22,184:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:48:22,282:INFO:Initializing predict_model()
2023-03-18 10:48:22,283:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:48:22,286:INFO:Checking exceptions
2023-03-18 10:48:22,286:INFO:Preloading libraries
2023-03-18 10:51:27,502:INFO:Initializing load_model()
2023-03-18 10:51:27,503:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:51:35,311:INFO:Initializing load_model()
2023-03-18 10:51:35,314:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:51:36,893:INFO:Initializing load_model()
2023-03-18 10:51:36,894:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:51:36,988:INFO:Initializing predict_model()
2023-03-18 10:51:36,993:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:51:36,996:INFO:Checking exceptions
2023-03-18 10:51:36,996:INFO:Preloading libraries
2023-03-18 10:58:06,784:INFO:Initializing load_model()
2023-03-18 10:58:06,785:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:58:06,864:INFO:Initializing predict_model()
2023-03-18 10:58:06,865:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:58:06,869:INFO:Checking exceptions
2023-03-18 10:58:06,869:INFO:Preloading libraries
2023-03-18 10:58:07,981:INFO:Initializing load_model()
2023-03-18 10:58:07,981:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:58:08,067:INFO:Initializing predict_model()
2023-03-18 10:58:08,067:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:58:08,070:INFO:Checking exceptions
2023-03-18 10:58:08,071:INFO:Preloading libraries
2023-03-18 10:58:08,158:INFO:Initializing load_model()
2023-03-18 10:58:08,159:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:58:08,244:INFO:Initializing predict_model()
2023-03-18 10:58:08,245:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:58:08,247:INFO:Checking exceptions
2023-03-18 10:58:08,247:INFO:Preloading libraries
2023-03-18 10:58:08,335:INFO:Initializing load_model()
2023-03-18 10:58:08,335:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:58:08,417:INFO:Initializing predict_model()
2023-03-18 10:58:08,417:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:58:08,420:INFO:Checking exceptions
2023-03-18 10:58:08,420:INFO:Preloading libraries
2023-03-18 10:58:08,514:INFO:Initializing load_model()
2023-03-18 10:58:08,514:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:58:08,603:INFO:Initializing predict_model()
2023-03-18 10:58:08,604:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:58:08,606:INFO:Checking exceptions
2023-03-18 10:58:08,606:INFO:Preloading libraries
2023-03-18 10:58:08,692:INFO:Initializing load_model()
2023-03-18 10:58:08,692:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:58:08,774:INFO:Initializing predict_model()
2023-03-18 10:58:08,775:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:58:08,777:INFO:Checking exceptions
2023-03-18 10:58:08,777:INFO:Preloading libraries
2023-03-18 10:58:08,862:INFO:Initializing load_model()
2023-03-18 10:58:08,863:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:58:08,952:INFO:Initializing predict_model()
2023-03-18 10:58:08,953:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:58:08,955:INFO:Checking exceptions
2023-03-18 10:58:08,956:INFO:Preloading libraries
2023-03-18 10:58:09,043:INFO:Initializing load_model()
2023-03-18 10:58:09,043:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:58:09,126:INFO:Initializing predict_model()
2023-03-18 10:58:09,126:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:58:09,129:INFO:Checking exceptions
2023-03-18 10:58:09,129:INFO:Preloading libraries
2023-03-18 10:58:09,216:INFO:Initializing load_model()
2023-03-18 10:58:09,217:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-18 10:58:09,298:INFO:Initializing predict_model()
2023-03-18 10:58:09,299:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-18 10:58:09,301:INFO:Checking exceptions
2023-03-18 10:58:09,302:INFO:Preloading libraries
2023-03-18 15:05:27,542:INFO:PyCaret NLP Module
2023-03-18 15:05:27,553:INFO:version 2.3.10
2023-03-18 15:05:27,553:INFO:Initializing setup()
2023-03-18 15:05:27,553:INFO:USI: 1122
2023-03-18 15:05:27,554:INFO:setup(data=(568454, 10), target=Score, custom_stopwords=None, html=True, session_id=123, log_experiment=False,
                    experiment_name=None, log_plots=False, log_data=False, verbose=True)
2023-03-18 15:05:27,554:INFO:Checking environment
2023-03-18 15:05:27,554:INFO:python_version: 3.8.16
2023-03-18 15:05:27,554:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 15:05:27,554:INFO:machine: AMD64
2023-03-18 15:05:27,554:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 15:05:27,572:INFO:Memory: svmem(total=17092505600, available=9612812288, percent=43.8, used=7479693312, free=9612812288)
2023-03-18 15:05:27,572:INFO:Physical Core: 6
2023-03-18 15:05:27,572:INFO:Logical Core: 6
2023-03-18 15:05:27,572:INFO:Checking libraries
2023-03-18 15:05:27,572:INFO:pd==1.5.3
2023-03-18 15:05:27,572:INFO:numpy==1.20.3
2023-03-18 15:05:28,060:INFO:gensim==3.8.3
2023-03-18 15:05:29,925:INFO:spacy==2.3.9
2023-03-18 15:05:32,055:INFO:nltk==3.8.1
2023-03-18 15:05:32,121:INFO:textblob==0.17.1
2023-03-18 15:05:32,247:INFO:pyLDAvis==3.3.1
2023-03-18 15:05:32,372:INFO:wordcloud==1.8.2.2
2023-03-18 15:05:32,373:INFO:mlflow==2.1.1
2023-03-18 15:05:32,373:INFO:Checking Exceptions
2023-03-18 15:08:58,877:INFO:PyCaret NLP Module
2023-03-18 15:08:58,878:INFO:version 2.3.10
2023-03-18 15:08:58,878:INFO:Initializing setup()
2023-03-18 15:08:58,878:INFO:USI: b292
2023-03-18 15:08:58,878:INFO:setup(data=(568454, 10), target=Score, custom_stopwords=None, html=True, session_id=123, log_experiment=False,
                    experiment_name=None, log_plots=False, log_data=False, verbose=True)
2023-03-18 15:08:58,878:INFO:Checking environment
2023-03-18 15:08:58,878:INFO:python_version: 3.8.16
2023-03-18 15:08:58,878:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 15:08:58,878:INFO:machine: AMD64
2023-03-18 15:08:58,878:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 15:08:58,880:INFO:Memory: svmem(total=17092505600, available=9652559872, percent=43.5, used=7439945728, free=9652559872)
2023-03-18 15:08:58,881:INFO:Physical Core: 6
2023-03-18 15:08:58,881:INFO:Logical Core: 6
2023-03-18 15:08:58,881:INFO:Checking libraries
2023-03-18 15:08:58,881:INFO:pd==1.5.3
2023-03-18 15:08:58,881:INFO:numpy==1.20.3
2023-03-18 15:08:58,881:INFO:gensim==3.8.3
2023-03-18 15:08:58,881:INFO:spacy==2.3.9
2023-03-18 15:08:58,881:INFO:nltk==3.8.1
2023-03-18 15:08:58,881:INFO:textblob==0.17.1
2023-03-18 15:08:58,881:INFO:pyLDAvis==3.3.1
2023-03-18 15:08:58,881:INFO:wordcloud==1.8.2.2
2023-03-18 15:08:58,881:INFO:mlflow==2.1.1
2023-03-18 15:08:58,881:INFO:Checking Exceptions
2023-03-18 15:14:33,864:INFO:PyCaret Supervised Module
2023-03-18 15:14:33,865:INFO:ML Usecase: classification
2023-03-18 15:14:33,865:INFO:version 2.3.10
2023-03-18 15:14:33,865:INFO:Initializing setup()
2023-03-18 15:14:33,865:INFO:setup(target=rating, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=False, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-18 15:14:33,865:INFO:Checking environment
2023-03-18 15:14:33,865:INFO:python_version: 3.8.16
2023-03-18 15:14:33,865:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 15:14:33,865:INFO:machine: AMD64
2023-03-18 15:14:33,865:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 15:14:33,868:INFO:Memory: svmem(total=17092505600, available=9483415552, percent=44.5, used=7609090048, free=9483415552)
2023-03-18 15:14:33,868:INFO:Physical Core: 6
2023-03-18 15:14:33,868:INFO:Logical Core: 6
2023-03-18 15:14:33,868:INFO:Checking libraries
2023-03-18 15:14:33,868:INFO:pd==1.5.3
2023-03-18 15:14:33,868:INFO:numpy==1.20.3
2023-03-18 15:14:33,868:INFO:sklearn==0.23.2
2023-03-18 15:14:33,868:INFO:lightgbm==3.3.5
2023-03-18 15:14:33,869:WARNING:catboost not found
2023-03-18 15:14:33,870:WARNING:xgboost not found
2023-03-18 15:14:33,870:INFO:mlflow==2.1.1
2023-03-18 15:14:33,870:INFO:Checking Exceptions
2023-03-18 15:15:19,711:INFO:PyCaret Supervised Module
2023-03-18 15:15:19,711:INFO:ML Usecase: classification
2023-03-18 15:15:19,711:INFO:version 2.3.10
2023-03-18 15:15:19,711:INFO:Initializing setup()
2023-03-18 15:15:19,711:INFO:setup(target=Score, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=False, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-18 15:15:19,712:INFO:Checking environment
2023-03-18 15:15:19,712:INFO:python_version: 3.8.16
2023-03-18 15:15:19,712:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 15:15:19,712:INFO:machine: AMD64
2023-03-18 15:15:19,712:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 15:15:19,715:INFO:Memory: svmem(total=17092505600, available=9551044608, percent=44.1, used=7541460992, free=9551044608)
2023-03-18 15:15:19,715:INFO:Physical Core: 6
2023-03-18 15:15:19,715:INFO:Logical Core: 6
2023-03-18 15:15:19,715:INFO:Checking libraries
2023-03-18 15:15:19,715:INFO:pd==1.5.3
2023-03-18 15:15:19,715:INFO:numpy==1.20.3
2023-03-18 15:15:19,715:INFO:sklearn==0.23.2
2023-03-18 15:15:19,715:INFO:lightgbm==3.3.5
2023-03-18 15:15:19,716:WARNING:catboost not found
2023-03-18 15:15:19,717:WARNING:xgboost not found
2023-03-18 15:15:19,717:INFO:mlflow==2.1.1
2023-03-18 15:15:19,717:INFO:Checking Exceptions
2023-03-18 15:15:19,717:INFO:Declaring global variables
2023-03-18 15:15:19,717:INFO:USI: d7e4
2023-03-18 15:15:19,718:INFO:pycaret_globals: {'fold_generator', 'gpu_param', 'transform_target_method_param', 'fold_param', 'USI', '_gpu_n_jobs_param', 'prep_pipe', 'data_before_preprocess', 'exp_name_log', 'stratify_param', 'fold_shuffle_param', 'fold_groups_param_full', 'y', '_all_models_internal', 'master_model_container', 'imputation_regressor', 'fix_imbalance_param', 'X_test', '_all_models', 'imputation_classifier', 'iterative_imputation_iters_param', 'display_container', 'X', 'X_train', 'y_test', 'log_plots_param', 'target_param', 'pycaret_globals', 'seed', 'y_train', 'n_jobs_param', 'create_model_container', 'experiment__', 'fix_imbalance_method_param', '_available_plots', '_all_metrics', 'dashboard_logger', '_internal_pipeline', 'html_param', 'logging_param', 'transform_target_param', 'fold_groups_param', '_ml_usecase'}
2023-03-18 15:15:19,718:INFO:Preparing display monitor
2023-03-18 15:15:19,718:INFO:Preparing display monitor
2023-03-18 15:15:19,718:INFO:Importing libraries
2023-03-18 15:15:19,718:INFO:Copying data for preprocessing
2023-03-18 15:15:19,767:INFO:Declaring preprocessing parameters
2023-03-18 15:15:19,872:INFO:Creating preprocessing pipeline
2023-03-18 15:15:20,600:INFO:Preprocessing pipeline created successfully
2023-03-18 15:15:20,601:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-18 15:15:20,601:INFO:Creating global containers
2023-03-18 15:15:20,620:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-18 15:41:51,761:INFO:PyCaret Supervised Module
2023-03-18 15:41:51,761:INFO:ML Usecase: regression
2023-03-18 15:41:51,761:INFO:version 2.3.10
2023-03-18 15:41:51,761:INFO:Initializing setup()
2023-03-18 15:41:51,761:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-18 15:41:51,761:INFO:Checking environment
2023-03-18 15:41:51,761:INFO:python_version: 3.8.16
2023-03-18 15:41:51,762:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 15:41:51,762:INFO:machine: AMD64
2023-03-18 15:41:51,762:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 15:41:51,764:INFO:Memory: svmem(total=17092505600, available=8815935488, percent=48.4, used=8276570112, free=8815935488)
2023-03-18 15:41:51,764:INFO:Physical Core: 6
2023-03-18 15:41:51,764:INFO:Logical Core: 6
2023-03-18 15:41:51,764:INFO:Checking libraries
2023-03-18 15:41:51,764:INFO:pd==1.5.3
2023-03-18 15:41:51,764:INFO:numpy==1.20.3
2023-03-18 15:41:51,764:INFO:sklearn==0.23.2
2023-03-18 15:41:51,764:INFO:lightgbm==3.3.5
2023-03-18 15:41:51,765:WARNING:catboost not found
2023-03-18 15:41:51,766:WARNING:xgboost not found
2023-03-18 15:41:51,766:INFO:mlflow==2.1.1
2023-03-18 15:41:51,766:INFO:Checking Exceptions
2023-03-18 15:41:51,767:INFO:Declaring global variables
2023-03-18 15:41:51,767:INFO:USI: d5d9
2023-03-18 15:41:51,767:INFO:pycaret_globals: {'fold_generator', 'gpu_param', 'transform_target_method_param', 'fold_param', 'USI', '_gpu_n_jobs_param', 'prep_pipe', 'data_before_preprocess', 'exp_name_log', 'stratify_param', 'fold_shuffle_param', 'fold_groups_param_full', 'y', '_all_models_internal', 'master_model_container', 'imputation_regressor', 'fix_imbalance_param', 'X_test', '_all_models', 'imputation_classifier', 'iterative_imputation_iters_param', 'display_container', 'X', 'X_train', 'y_test', 'log_plots_param', 'target_param', 'pycaret_globals', 'seed', 'y_train', 'n_jobs_param', 'create_model_container', 'experiment__', 'fix_imbalance_method_param', '_available_plots', '_all_metrics', 'dashboard_logger', '_internal_pipeline', 'html_param', 'logging_param', 'transform_target_param', 'fold_groups_param', '_ml_usecase'}
2023-03-18 15:41:51,767:INFO:Preparing display monitor
2023-03-18 15:41:51,767:INFO:Preparing display monitor
2023-03-18 15:41:51,775:INFO:Importing libraries
2023-03-18 15:41:51,775:INFO:Copying data for preprocessing
2023-03-18 15:41:51,826:INFO:Declaring preprocessing parameters
2023-03-18 15:41:51,828:WARNING:cuML not found
2023-03-18 15:41:51,828:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.5
2023-03-18 15:41:51,836:INFO:Creating preprocessing pipeline
2023-03-18 15:41:51,938:INFO:Preprocessing pipeline created successfully
2023-03-18 15:41:51,938:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-18 15:41:51,938:INFO:Creating global containers
2023-03-18 15:41:51,938:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-18 15:43:07,339:INFO:PyCaret Supervised Module
2023-03-18 15:43:07,347:INFO:ML Usecase: regression
2023-03-18 15:43:07,347:INFO:version 2.3.10
2023-03-18 15:43:07,347:INFO:Initializing setup()
2023-03-18 15:43:07,347:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-18 15:43:07,347:INFO:Checking environment
2023-03-18 15:43:07,347:INFO:python_version: 3.8.16
2023-03-18 15:43:07,347:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 15:43:07,348:INFO:machine: AMD64
2023-03-18 15:43:07,348:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 15:43:07,394:INFO:Memory: svmem(total=17092505600, available=5341818880, percent=68.7, used=11750686720, free=5341818880)
2023-03-18 15:43:07,406:INFO:Physical Core: 6
2023-03-18 15:43:07,407:INFO:Logical Core: 6
2023-03-18 15:43:07,407:INFO:Checking libraries
2023-03-18 15:43:07,407:INFO:pd==1.5.3
2023-03-18 15:43:07,407:INFO:numpy==1.20.3
2023-03-18 15:43:07,407:INFO:sklearn==0.23.2
2023-03-18 15:43:07,417:INFO:lightgbm==3.3.5
2023-03-18 15:43:07,499:WARNING:catboost not found
2023-03-18 15:43:07,500:WARNING:xgboost not found
2023-03-18 15:43:07,501:INFO:mlflow==2.1.1
2023-03-18 15:43:07,501:INFO:Checking Exceptions
2023-03-18 15:43:07,502:INFO:Declaring global variables
2023-03-18 15:43:07,502:INFO:USI: 3156
2023-03-18 15:43:07,502:INFO:pycaret_globals: {'fold_generator', 'gpu_param', 'transform_target_method_param', 'fold_param', 'USI', '_gpu_n_jobs_param', 'prep_pipe', 'data_before_preprocess', 'exp_name_log', 'stratify_param', 'fold_shuffle_param', 'fold_groups_param_full', 'y', '_all_models_internal', 'master_model_container', 'imputation_regressor', 'fix_imbalance_param', 'X_test', '_all_models', 'imputation_classifier', 'iterative_imputation_iters_param', 'display_container', 'X', 'X_train', 'y_test', 'log_plots_param', 'target_param', 'pycaret_globals', 'seed', 'y_train', 'n_jobs_param', 'create_model_container', 'experiment__', 'fix_imbalance_method_param', '_available_plots', '_all_metrics', 'dashboard_logger', '_internal_pipeline', 'html_param', 'logging_param', 'transform_target_param', 'fold_groups_param', '_ml_usecase'}
2023-03-18 15:43:07,512:INFO:Preparing display monitor
2023-03-18 15:43:07,513:INFO:Preparing display monitor
2023-03-18 15:43:07,550:INFO:Importing libraries
2023-03-18 15:43:07,551:INFO:Copying data for preprocessing
2023-03-18 15:43:07,609:INFO:Declaring preprocessing parameters
2023-03-18 15:43:07,611:WARNING:cuML not found
2023-03-18 15:43:07,611:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.5
2023-03-18 15:43:07,621:INFO:Creating preprocessing pipeline
2023-03-18 15:43:07,811:INFO:Preprocessing pipeline created successfully
2023-03-18 15:43:07,811:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-18 15:43:07,811:INFO:Creating global containers
2023-03-18 15:43:07,818:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-18 15:44:14,918:INFO:PyCaret Supervised Module
2023-03-18 15:44:14,918:INFO:ML Usecase: regression
2023-03-18 15:44:14,918:INFO:version 2.3.10
2023-03-18 15:44:14,918:INFO:Initializing setup()
2023-03-18 15:44:14,918:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-18 15:44:14,919:INFO:Checking environment
2023-03-18 15:44:14,919:INFO:python_version: 3.8.16
2023-03-18 15:44:14,919:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 15:44:14,919:INFO:machine: AMD64
2023-03-18 15:44:14,919:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 15:44:14,921:INFO:Memory: svmem(total=17092505600, available=5253599232, percent=69.3, used=11838906368, free=5253599232)
2023-03-18 15:44:14,921:INFO:Physical Core: 6
2023-03-18 15:44:14,921:INFO:Logical Core: 6
2023-03-18 15:44:14,921:INFO:Checking libraries
2023-03-18 15:44:14,922:INFO:pd==1.5.3
2023-03-18 15:44:14,922:INFO:numpy==1.20.3
2023-03-18 15:44:14,922:INFO:sklearn==0.23.2
2023-03-18 15:44:14,922:INFO:lightgbm==3.3.5
2023-03-18 15:44:14,923:WARNING:catboost not found
2023-03-18 15:44:14,924:WARNING:xgboost not found
2023-03-18 15:44:14,924:INFO:mlflow==2.1.1
2023-03-18 15:44:14,924:INFO:Checking Exceptions
2023-03-18 15:44:14,924:INFO:Declaring global variables
2023-03-18 15:44:14,924:INFO:USI: 05e1
2023-03-18 15:44:14,924:INFO:pycaret_globals: {'fold_generator', 'gpu_param', 'transform_target_method_param', 'fold_param', 'USI', '_gpu_n_jobs_param', 'prep_pipe', 'data_before_preprocess', 'exp_name_log', 'stratify_param', 'fold_shuffle_param', 'fold_groups_param_full', 'y', '_all_models_internal', 'master_model_container', 'imputation_regressor', 'fix_imbalance_param', 'X_test', '_all_models', 'imputation_classifier', 'iterative_imputation_iters_param', 'display_container', 'X', 'X_train', 'y_test', 'log_plots_param', 'target_param', 'pycaret_globals', 'seed', 'y_train', 'n_jobs_param', 'create_model_container', 'experiment__', 'fix_imbalance_method_param', '_available_plots', '_all_metrics', 'dashboard_logger', '_internal_pipeline', 'html_param', 'logging_param', 'transform_target_param', 'fold_groups_param', '_ml_usecase'}
2023-03-18 15:44:14,924:INFO:Preparing display monitor
2023-03-18 15:44:14,924:INFO:Preparing display monitor
2023-03-18 15:44:14,934:INFO:Importing libraries
2023-03-18 15:44:14,934:INFO:Copying data for preprocessing
2023-03-18 15:44:14,946:INFO:Declaring preprocessing parameters
2023-03-18 15:44:14,947:WARNING:cuML not found
2023-03-18 15:44:14,947:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.5
2023-03-18 15:44:14,951:INFO:Creating preprocessing pipeline
2023-03-18 15:44:15,006:INFO:Preprocessing pipeline created successfully
2023-03-18 15:44:15,006:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-18 15:44:15,006:INFO:Creating global containers
2023-03-18 15:44:15,007:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-18 16:04:14,608:INFO:PyCaret Supervised Module
2023-03-18 16:04:14,608:INFO:ML Usecase: classification
2023-03-18 16:04:14,608:INFO:version 2.3.10
2023-03-18 16:04:14,608:INFO:Initializing setup()
2023-03-18 16:04:14,608:INFO:setup(target=price, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-18 16:04:14,609:INFO:Checking environment
2023-03-18 16:04:14,609:INFO:python_version: 3.8.16
2023-03-18 16:04:14,609:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 16:04:14,609:INFO:machine: AMD64
2023-03-18 16:04:14,609:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 16:04:14,611:INFO:Memory: svmem(total=17092505600, available=12652617728, percent=26.0, used=4439887872, free=12652617728)
2023-03-18 16:04:14,611:INFO:Physical Core: 6
2023-03-18 16:04:14,611:INFO:Logical Core: 6
2023-03-18 16:04:14,611:INFO:Checking libraries
2023-03-18 16:04:14,611:INFO:pd==1.5.3
2023-03-18 16:04:14,611:INFO:numpy==1.20.3
2023-03-18 16:04:14,611:INFO:sklearn==0.23.2
2023-03-18 16:04:14,611:INFO:lightgbm==3.3.5
2023-03-18 16:04:14,612:WARNING:catboost not found
2023-03-18 16:04:14,613:WARNING:xgboost not found
2023-03-18 16:04:14,613:INFO:mlflow==2.1.1
2023-03-18 16:04:14,613:INFO:Checking Exceptions
2023-03-18 16:04:14,613:INFO:Declaring global variables
2023-03-18 16:04:14,613:INFO:USI: 18a2
2023-03-18 16:04:14,614:INFO:pycaret_globals: {'_available_plots', 'stratify_param', 'exp_name_log', 'data_before_preprocess', 'fix_imbalance_method_param', 'logging_param', '_internal_pipeline', 'y_test', '_all_metrics', 'display_container', 'X_test', 'X_train', '_ml_usecase', 'log_plots_param', 'iterative_imputation_iters_param', 'target_param', 'fold_param', 'y', 'n_jobs_param', 'fold_groups_param_full', 'imputation_regressor', '_all_models', 'y_train', 'imputation_classifier', 'fix_imbalance_param', 'experiment__', 'fold_generator', 'transform_target_param', '_all_models_internal', 'fold_shuffle_param', 'master_model_container', 'transform_target_method_param', 'pycaret_globals', 'gpu_param', 'seed', 'create_model_container', 'USI', 'prep_pipe', '_gpu_n_jobs_param', 'html_param', 'dashboard_logger', 'X', 'fold_groups_param'}
2023-03-18 16:04:14,614:INFO:Preparing display monitor
2023-03-18 16:04:14,614:INFO:Preparing display monitor
2023-03-18 16:04:14,624:INFO:Importing libraries
2023-03-18 16:04:14,624:INFO:Copying data for preprocessing
2023-03-18 16:04:14,649:INFO:Declaring preprocessing parameters
2023-03-18 16:04:14,650:WARNING:cuML not found
2023-03-18 16:04:14,650:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.5
2023-03-18 16:04:14,656:INFO:Creating preprocessing pipeline
2023-03-18 16:04:14,730:INFO:Preprocessing pipeline created successfully
2023-03-18 16:04:14,730:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-18 16:04:14,730:INFO:Creating global containers
2023-03-18 16:04:14,737:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-18 16:10:02,012:INFO:PyCaret Supervised Module
2023-03-18 16:10:02,029:INFO:ML Usecase: regression
2023-03-18 16:10:02,029:INFO:version 2.3.10
2023-03-18 16:10:02,029:INFO:Initializing setup()
2023-03-18 16:10:02,029:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-18 16:10:02,053:INFO:Checking environment
2023-03-18 16:10:02,053:INFO:python_version: 3.8.16
2023-03-18 16:10:02,053:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 16:10:02,053:INFO:machine: AMD64
2023-03-18 16:10:02,053:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 16:10:02,071:INFO:Memory: svmem(total=17092505600, available=3929792512, percent=77.0, used=13162713088, free=3929792512)
2023-03-18 16:10:02,072:INFO:Physical Core: 6
2023-03-18 16:10:02,072:INFO:Logical Core: 6
2023-03-18 16:10:02,072:INFO:Checking libraries
2023-03-18 16:10:02,072:INFO:pd==1.5.3
2023-03-18 16:10:02,072:INFO:numpy==1.20.3
2023-03-18 16:10:02,072:INFO:sklearn==0.23.2
2023-03-18 16:10:02,072:INFO:lightgbm==3.3.5
2023-03-18 16:10:02,085:WARNING:catboost not found
2023-03-18 16:10:02,086:WARNING:xgboost not found
2023-03-18 16:10:02,086:INFO:mlflow==2.1.1
2023-03-18 16:10:02,086:INFO:Checking Exceptions
2023-03-18 16:10:02,087:INFO:Declaring global variables
2023-03-18 16:10:02,100:INFO:USI: ab57
2023-03-18 16:10:02,100:INFO:pycaret_globals: {'_available_plots', 'stratify_param', 'exp_name_log', 'data_before_preprocess', 'fix_imbalance_method_param', 'logging_param', '_internal_pipeline', 'y_test', '_all_metrics', 'display_container', 'X_test', 'X_train', '_ml_usecase', 'log_plots_param', 'iterative_imputation_iters_param', 'target_param', 'fold_param', 'y', 'n_jobs_param', 'fold_groups_param_full', 'imputation_regressor', '_all_models', 'y_train', 'imputation_classifier', 'fix_imbalance_param', 'experiment__', 'fold_generator', 'transform_target_param', '_all_models_internal', 'fold_shuffle_param', 'master_model_container', 'transform_target_method_param', 'pycaret_globals', 'gpu_param', 'seed', 'create_model_container', 'USI', 'prep_pipe', '_gpu_n_jobs_param', 'html_param', 'dashboard_logger', 'X', 'fold_groups_param'}
2023-03-18 16:10:02,100:INFO:Preparing display monitor
2023-03-18 16:10:02,100:INFO:Preparing display monitor
2023-03-18 16:10:02,156:INFO:Importing libraries
2023-03-18 16:10:02,157:INFO:Copying data for preprocessing
2023-03-18 16:10:02,269:INFO:Declaring preprocessing parameters
2023-03-18 16:10:02,317:INFO:Creating preprocessing pipeline
2023-03-18 16:10:02,397:INFO:Preprocessing pipeline created successfully
2023-03-18 16:10:02,397:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-18 16:10:02,397:INFO:Creating global containers
2023-03-18 16:10:02,398:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-18 16:11:53,262:INFO:PyCaret Supervised Module
2023-03-18 16:11:53,262:INFO:ML Usecase: regression
2023-03-18 16:11:53,262:INFO:version 2.3.10
2023-03-18 16:11:53,262:INFO:Initializing setup()
2023-03-18 16:11:53,262:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-18 16:11:53,262:INFO:Checking environment
2023-03-18 16:11:53,262:INFO:python_version: 3.8.16
2023-03-18 16:11:53,262:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 16:11:53,262:INFO:machine: AMD64
2023-03-18 16:11:53,263:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 16:11:53,265:INFO:Memory: svmem(total=17092505600, available=12978270208, percent=24.1, used=4114235392, free=12978270208)
2023-03-18 16:11:53,265:INFO:Physical Core: 6
2023-03-18 16:11:53,265:INFO:Logical Core: 6
2023-03-18 16:11:53,265:INFO:Checking libraries
2023-03-18 16:11:53,265:INFO:pd==1.5.3
2023-03-18 16:11:53,265:INFO:numpy==1.20.3
2023-03-18 16:11:53,265:INFO:sklearn==0.23.2
2023-03-18 16:11:53,265:INFO:lightgbm==3.3.5
2023-03-18 16:11:53,266:WARNING:catboost not found
2023-03-18 16:11:53,267:WARNING:xgboost not found
2023-03-18 16:11:53,267:INFO:mlflow==2.1.1
2023-03-18 16:11:53,267:INFO:Checking Exceptions
2023-03-18 16:11:53,268:INFO:Declaring global variables
2023-03-18 16:11:53,268:INFO:USI: ecce
2023-03-18 16:11:53,268:INFO:pycaret_globals: {'pycaret_globals', 'prep_pipe', 'experiment__', '_all_models', '_all_models_internal', 'imputation_classifier', 'dashboard_logger', 'X', 'log_plots_param', 'exp_name_log', 'imputation_regressor', 'transform_target_method_param', 'fix_imbalance_param', 'fold_groups_param', 'gpu_param', '_ml_usecase', 'transform_target_param', '_gpu_n_jobs_param', 'display_container', 'y_train', 'fold_generator', 'X_train', 'stratify_param', 'USI', '_all_metrics', 'y_test', '_available_plots', 'n_jobs_param', 'X_test', 'target_param', 'fold_shuffle_param', 'logging_param', 'y', 'html_param', 'master_model_container', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'seed', 'fold_param', 'create_model_container', 'data_before_preprocess', '_internal_pipeline', 'fold_groups_param_full'}
2023-03-18 16:11:53,268:INFO:Preparing display monitor
2023-03-18 16:11:53,268:INFO:Preparing display monitor
2023-03-18 16:11:53,278:INFO:Importing libraries
2023-03-18 16:11:53,278:INFO:Copying data for preprocessing
2023-03-18 16:11:53,288:INFO:Declaring preprocessing parameters
2023-03-18 16:11:53,293:INFO:Creating preprocessing pipeline
2023-03-18 16:11:53,354:INFO:Preprocessing pipeline created successfully
2023-03-18 16:11:53,354:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-18 16:11:53,354:INFO:Creating global containers
2023-03-18 16:11:53,371:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-18 16:18:35,428:INFO:PyCaret Supervised Module
2023-03-18 16:18:35,429:INFO:ML Usecase: regression
2023-03-18 16:18:35,429:INFO:version 2.3.10
2023-03-18 16:18:35,429:INFO:Initializing setup()
2023-03-18 16:18:35,429:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-18 16:18:35,429:INFO:Checking environment
2023-03-18 16:18:35,429:INFO:python_version: 3.8.16
2023-03-18 16:18:35,429:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-18 16:18:35,429:INFO:machine: AMD64
2023-03-18 16:18:35,429:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-18 16:18:35,432:INFO:Memory: svmem(total=17092505600, available=12798173184, percent=25.1, used=4294332416, free=12798173184)
2023-03-18 16:18:35,432:INFO:Physical Core: 6
2023-03-18 16:18:35,432:INFO:Logical Core: 6
2023-03-18 16:18:35,432:INFO:Checking libraries
2023-03-18 16:18:35,433:INFO:pd==1.5.3
2023-03-18 16:18:35,433:INFO:numpy==1.20.3
2023-03-18 16:18:35,433:INFO:sklearn==0.23.2
2023-03-18 16:18:35,433:INFO:lightgbm==3.3.5
2023-03-18 16:18:35,434:WARNING:catboost not found
2023-03-18 16:18:35,435:WARNING:xgboost not found
2023-03-18 16:18:35,435:INFO:mlflow==2.1.1
2023-03-18 16:18:35,435:INFO:Checking Exceptions
2023-03-18 16:18:35,435:INFO:Declaring global variables
2023-03-18 16:18:35,435:INFO:USI: 554d
2023-03-18 16:18:35,435:INFO:pycaret_globals: {'_internal_pipeline', 'fold_shuffle_param', 'X_test', 'y_test', '_all_models', 'fold_generator', 'fold_groups_param_full', 'fix_imbalance_method_param', 'dashboard_logger', 'display_container', 'create_model_container', 'data_before_preprocess', 'y', '_gpu_n_jobs_param', '_available_plots', 'experiment__', 'imputation_classifier', 'html_param', 'n_jobs_param', 'target_param', '_all_models_internal', 'master_model_container', 'logging_param', 'X', 'pycaret_globals', 'fix_imbalance_param', 'fold_param', 'log_plots_param', 'USI', 'seed', 'prep_pipe', 'imputation_regressor', 'exp_name_log', 'iterative_imputation_iters_param', 'transform_target_method_param', 'stratify_param', '_all_metrics', 'fold_groups_param', 'gpu_param', '_ml_usecase', 'X_train', 'transform_target_param', 'y_train'}
2023-03-18 16:18:35,435:INFO:Preparing display monitor
2023-03-18 16:18:35,435:INFO:Preparing display monitor
2023-03-18 16:18:35,444:INFO:Importing libraries
2023-03-18 16:18:35,445:INFO:Copying data for preprocessing
2023-03-18 16:18:35,454:INFO:Declaring preprocessing parameters
2023-03-18 16:18:35,457:INFO:Creating preprocessing pipeline
2023-03-18 16:18:35,525:INFO:Preprocessing pipeline created successfully
2023-03-18 16:18:35,525:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-18 16:18:35,525:INFO:Creating global containers
2023-03-18 16:18:35,532:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-18 16:18:41,536:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-18 16:18:41,537:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-18 16:18:41,645:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-18 16:18:41,646:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-18 16:18:41,646:INFO:Creating grid variables
2023-03-18 16:18:41,676:INFO:create_model_container: 0
2023-03-18 16:18:41,677:INFO:master_model_container: 0
2023-03-18 16:18:41,677:INFO:display_container: 1
2023-03-18 16:18:41,682:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-18 16:18:41,682:INFO:setup() succesfully completed......................................
2023-03-18 16:19:09,908:INFO:Initializing compare_models()
2023-03-18 16:19:09,908:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-18 16:19:09,908:INFO:Checking exceptions
2023-03-18 16:19:09,909:INFO:Preparing display monitor
2023-03-18 16:19:09,909:INFO:Preparing display monitor
2023-03-18 16:19:09,930:INFO:Initializing Linear Regression
2023-03-18 16:19:09,931:INFO:Total runtime is 1.6629695892333984e-05 minutes
2023-03-18 16:19:09,939:INFO:SubProcess create_model() called ==================================
2023-03-18 16:19:09,939:INFO:Initializing create_model()
2023-03-18 16:19:09,939:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:19:09,939:INFO:Checking exceptions
2023-03-18 16:19:09,940:INFO:Importing libraries
2023-03-18 16:19:09,940:INFO:Copying training dataset
2023-03-18 16:19:10,081:INFO:Defining folds
2023-03-18 16:19:10,081:INFO:Declaring metric variables
2023-03-18 16:19:10,089:INFO:Importing untrained model
2023-03-18 16:19:10,097:INFO:Linear Regression Imported succesfully
2023-03-18 16:19:10,112:INFO:Starting cross validation
2023-03-18 16:19:10,159:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:19:30,145:INFO:Calculating mean and std
2023-03-18 16:19:30,146:INFO:Creating metrics dataframe
2023-03-18 16:19:30,154:INFO:Uploading results into container
2023-03-18 16:19:30,155:INFO:Uploading model into container now
2023-03-18 16:19:30,155:INFO:create_model_container: 1
2023-03-18 16:19:30,155:INFO:master_model_container: 1
2023-03-18 16:19:30,155:INFO:display_container: 2
2023-03-18 16:19:30,155:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2023-03-18 16:19:30,156:INFO:create_model() succesfully completed......................................
2023-03-18 16:19:30,275:INFO:SubProcess create_model() end ==================================
2023-03-18 16:19:30,275:INFO:Creating metrics dataframe
2023-03-18 16:19:30,285:INFO:Initializing Lasso Regression
2023-03-18 16:19:30,285:INFO:Total runtime is 0.33924104770024616 minutes
2023-03-18 16:19:30,293:INFO:SubProcess create_model() called ==================================
2023-03-18 16:19:30,293:INFO:Initializing create_model()
2023-03-18 16:19:30,293:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:19:30,293:INFO:Checking exceptions
2023-03-18 16:19:30,293:INFO:Importing libraries
2023-03-18 16:19:30,294:INFO:Copying training dataset
2023-03-18 16:19:30,413:INFO:Defining folds
2023-03-18 16:19:30,413:INFO:Declaring metric variables
2023-03-18 16:19:30,420:INFO:Importing untrained model
2023-03-18 16:19:30,427:INFO:Lasso Regression Imported succesfully
2023-03-18 16:19:30,442:INFO:Starting cross validation
2023-03-18 16:19:30,442:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:21:08,572:INFO:Calculating mean and std
2023-03-18 16:21:08,574:INFO:Creating metrics dataframe
2023-03-18 16:21:08,578:INFO:Uploading results into container
2023-03-18 16:21:08,579:INFO:Uploading model into container now
2023-03-18 16:21:08,579:INFO:create_model_container: 2
2023-03-18 16:21:08,579:INFO:master_model_container: 2
2023-03-18 16:21:08,579:INFO:display_container: 2
2023-03-18 16:21:08,579:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=3033,
      selection='cyclic', tol=0.0001, warm_start=False)
2023-03-18 16:21:08,579:INFO:create_model() succesfully completed......................................
2023-03-18 16:21:08,687:INFO:SubProcess create_model() end ==================================
2023-03-18 16:21:08,688:INFO:Creating metrics dataframe
2023-03-18 16:21:08,697:INFO:Initializing Ridge Regression
2023-03-18 16:21:08,697:INFO:Total runtime is 1.979445219039917 minutes
2023-03-18 16:21:08,704:INFO:SubProcess create_model() called ==================================
2023-03-18 16:21:08,705:INFO:Initializing create_model()
2023-03-18 16:21:08,705:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:21:08,705:INFO:Checking exceptions
2023-03-18 16:21:08,705:INFO:Importing libraries
2023-03-18 16:21:08,705:INFO:Copying training dataset
2023-03-18 16:21:08,818:INFO:Defining folds
2023-03-18 16:21:08,818:INFO:Declaring metric variables
2023-03-18 16:21:08,825:INFO:Importing untrained model
2023-03-18 16:21:08,832:INFO:Ridge Regression Imported succesfully
2023-03-18 16:21:08,846:INFO:Starting cross validation
2023-03-18 16:21:08,846:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:21:11,601:INFO:Calculating mean and std
2023-03-18 16:21:11,602:INFO:Creating metrics dataframe
2023-03-18 16:21:11,609:INFO:Uploading results into container
2023-03-18 16:21:11,609:INFO:Uploading model into container now
2023-03-18 16:21:11,609:INFO:create_model_container: 3
2023-03-18 16:21:11,609:INFO:master_model_container: 3
2023-03-18 16:21:11,610:INFO:display_container: 2
2023-03-18 16:21:11,610:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=3033, solver='auto', tol=0.001)
2023-03-18 16:21:11,610:INFO:create_model() succesfully completed......................................
2023-03-18 16:21:11,708:INFO:SubProcess create_model() end ==================================
2023-03-18 16:21:11,708:INFO:Creating metrics dataframe
2023-03-18 16:21:11,718:INFO:Initializing Elastic Net
2023-03-18 16:21:11,719:INFO:Total runtime is 2.0298113346099855 minutes
2023-03-18 16:21:11,726:INFO:SubProcess create_model() called ==================================
2023-03-18 16:21:11,727:INFO:Initializing create_model()
2023-03-18 16:21:11,727:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:21:11,727:INFO:Checking exceptions
2023-03-18 16:21:11,727:INFO:Importing libraries
2023-03-18 16:21:11,727:INFO:Copying training dataset
2023-03-18 16:21:11,841:INFO:Defining folds
2023-03-18 16:21:11,842:INFO:Declaring metric variables
2023-03-18 16:21:11,849:INFO:Importing untrained model
2023-03-18 16:21:11,855:INFO:Elastic Net Imported succesfully
2023-03-18 16:21:11,869:INFO:Starting cross validation
2023-03-18 16:21:11,870:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:22:32,134:INFO:Calculating mean and std
2023-03-18 16:22:32,135:INFO:Creating metrics dataframe
2023-03-18 16:22:32,139:INFO:Uploading results into container
2023-03-18 16:22:32,139:INFO:Uploading model into container now
2023-03-18 16:22:32,139:INFO:create_model_container: 4
2023-03-18 16:22:32,139:INFO:master_model_container: 4
2023-03-18 16:22:32,139:INFO:display_container: 2
2023-03-18 16:22:32,140:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=3033, selection='cyclic', tol=0.0001, warm_start=False)
2023-03-18 16:22:32,140:INFO:create_model() succesfully completed......................................
2023-03-18 16:22:32,238:INFO:SubProcess create_model() end ==================================
2023-03-18 16:22:32,239:INFO:Creating metrics dataframe
2023-03-18 16:22:32,249:INFO:Initializing Least Angle Regression
2023-03-18 16:22:32,249:INFO:Total runtime is 3.3719810644785566 minutes
2023-03-18 16:22:32,256:INFO:SubProcess create_model() called ==================================
2023-03-18 16:22:32,257:INFO:Initializing create_model()
2023-03-18 16:22:32,257:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:22:32,257:INFO:Checking exceptions
2023-03-18 16:22:32,257:INFO:Importing libraries
2023-03-18 16:22:32,257:INFO:Copying training dataset
2023-03-18 16:22:32,370:INFO:Defining folds
2023-03-18 16:22:32,370:INFO:Declaring metric variables
2023-03-18 16:22:32,378:INFO:Importing untrained model
2023-03-18 16:22:32,385:INFO:Least Angle Regression Imported succesfully
2023-03-18 16:22:32,400:INFO:Starting cross validation
2023-03-18 16:22:32,401:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:22:37,445:INFO:Calculating mean and std
2023-03-18 16:22:37,446:INFO:Creating metrics dataframe
2023-03-18 16:22:37,449:INFO:Uploading results into container
2023-03-18 16:22:37,449:INFO:Uploading model into container now
2023-03-18 16:22:37,449:INFO:create_model_container: 5
2023-03-18 16:22:37,449:INFO:master_model_container: 5
2023-03-18 16:22:37,449:INFO:display_container: 2
2023-03-18 16:22:37,450:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=3033, verbose=False)
2023-03-18 16:22:37,450:INFO:create_model() succesfully completed......................................
2023-03-18 16:22:37,553:INFO:SubProcess create_model() end ==================================
2023-03-18 16:22:37,554:INFO:Creating metrics dataframe
2023-03-18 16:22:37,564:INFO:Initializing Lasso Least Angle Regression
2023-03-18 16:22:37,565:INFO:Total runtime is 3.46057890256246 minutes
2023-03-18 16:22:37,572:INFO:SubProcess create_model() called ==================================
2023-03-18 16:22:37,573:INFO:Initializing create_model()
2023-03-18 16:22:37,573:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:22:37,573:INFO:Checking exceptions
2023-03-18 16:22:37,573:INFO:Importing libraries
2023-03-18 16:22:37,573:INFO:Copying training dataset
2023-03-18 16:22:37,685:INFO:Defining folds
2023-03-18 16:22:37,685:INFO:Declaring metric variables
2023-03-18 16:22:37,692:INFO:Importing untrained model
2023-03-18 16:22:37,698:INFO:Lasso Least Angle Regression Imported succesfully
2023-03-18 16:22:37,711:INFO:Starting cross validation
2023-03-18 16:22:37,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:22:42,597:INFO:Calculating mean and std
2023-03-18 16:22:42,600:INFO:Creating metrics dataframe
2023-03-18 16:22:42,604:INFO:Uploading results into container
2023-03-18 16:22:42,604:INFO:Uploading model into container now
2023-03-18 16:22:42,605:INFO:create_model_container: 6
2023-03-18 16:22:42,605:INFO:master_model_container: 6
2023-03-18 16:22:42,605:INFO:display_container: 2
2023-03-18 16:22:42,605:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=3033, verbose=False)
2023-03-18 16:22:42,605:INFO:create_model() succesfully completed......................................
2023-03-18 16:22:42,701:INFO:SubProcess create_model() end ==================================
2023-03-18 16:22:42,701:INFO:Creating metrics dataframe
2023-03-18 16:22:42,712:INFO:Initializing Orthogonal Matching Pursuit
2023-03-18 16:22:42,712:INFO:Total runtime is 3.546362960338593 minutes
2023-03-18 16:22:42,719:INFO:SubProcess create_model() called ==================================
2023-03-18 16:22:42,719:INFO:Initializing create_model()
2023-03-18 16:22:42,720:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:22:42,720:INFO:Checking exceptions
2023-03-18 16:22:42,720:INFO:Importing libraries
2023-03-18 16:22:42,720:INFO:Copying training dataset
2023-03-18 16:22:42,838:INFO:Defining folds
2023-03-18 16:22:42,838:INFO:Declaring metric variables
2023-03-18 16:22:42,845:INFO:Importing untrained model
2023-03-18 16:22:42,852:INFO:Orthogonal Matching Pursuit Imported succesfully
2023-03-18 16:22:42,866:INFO:Starting cross validation
2023-03-18 16:22:42,866:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:22:45,724:INFO:Calculating mean and std
2023-03-18 16:22:45,724:INFO:Creating metrics dataframe
2023-03-18 16:22:45,728:INFO:Uploading results into container
2023-03-18 16:22:45,728:INFO:Uploading model into container now
2023-03-18 16:22:45,728:INFO:create_model_container: 7
2023-03-18 16:22:45,728:INFO:master_model_container: 7
2023-03-18 16:22:45,728:INFO:display_container: 2
2023-03-18 16:22:45,728:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2023-03-18 16:22:45,728:INFO:create_model() succesfully completed......................................
2023-03-18 16:22:45,824:INFO:SubProcess create_model() end ==================================
2023-03-18 16:22:45,824:INFO:Creating metrics dataframe
2023-03-18 16:22:45,835:INFO:Initializing Bayesian Ridge
2023-03-18 16:22:45,836:INFO:Total runtime is 3.5984211961428327 minutes
2023-03-18 16:22:45,843:INFO:SubProcess create_model() called ==================================
2023-03-18 16:22:45,843:INFO:Initializing create_model()
2023-03-18 16:22:45,843:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:22:45,844:INFO:Checking exceptions
2023-03-18 16:22:45,844:INFO:Importing libraries
2023-03-18 16:22:45,844:INFO:Copying training dataset
2023-03-18 16:22:45,950:INFO:Defining folds
2023-03-18 16:22:45,951:INFO:Declaring metric variables
2023-03-18 16:22:45,958:INFO:Importing untrained model
2023-03-18 16:22:45,964:INFO:Bayesian Ridge Imported succesfully
2023-03-18 16:22:45,978:INFO:Starting cross validation
2023-03-18 16:22:45,978:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:24:01,307:INFO:Calculating mean and std
2023-03-18 16:24:01,309:INFO:Creating metrics dataframe
2023-03-18 16:24:01,314:INFO:Uploading results into container
2023-03-18 16:24:01,314:INFO:Uploading model into container now
2023-03-18 16:24:01,315:INFO:create_model_container: 8
2023-03-18 16:24:01,315:INFO:master_model_container: 8
2023-03-18 16:24:01,315:INFO:display_container: 2
2023-03-18 16:24:01,315:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2023-03-18 16:24:01,316:INFO:create_model() succesfully completed......................................
2023-03-18 16:24:01,425:INFO:SubProcess create_model() end ==================================
2023-03-18 16:24:01,425:INFO:Creating metrics dataframe
2023-03-18 16:24:01,437:INFO:Initializing Passive Aggressive Regressor
2023-03-18 16:24:01,437:INFO:Total runtime is 4.858446407318116 minutes
2023-03-18 16:24:01,444:INFO:SubProcess create_model() called ==================================
2023-03-18 16:24:01,445:INFO:Initializing create_model()
2023-03-18 16:24:01,445:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:24:01,446:INFO:Checking exceptions
2023-03-18 16:24:01,446:INFO:Importing libraries
2023-03-18 16:24:01,446:INFO:Copying training dataset
2023-03-18 16:24:01,566:INFO:Defining folds
2023-03-18 16:24:01,567:INFO:Declaring metric variables
2023-03-18 16:24:01,574:INFO:Importing untrained model
2023-03-18 16:24:01,581:INFO:Passive Aggressive Regressor Imported succesfully
2023-03-18 16:24:01,595:INFO:Starting cross validation
2023-03-18 16:24:01,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:24:06,510:INFO:Calculating mean and std
2023-03-18 16:24:06,511:INFO:Creating metrics dataframe
2023-03-18 16:24:06,516:INFO:Uploading results into container
2023-03-18 16:24:06,517:INFO:Uploading model into container now
2023-03-18 16:24:06,517:INFO:create_model_container: 9
2023-03-18 16:24:06,517:INFO:master_model_container: 9
2023-03-18 16:24:06,517:INFO:display_container: 2
2023-03-18 16:24:06,517:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=3033, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-18 16:24:06,517:INFO:create_model() succesfully completed......................................
2023-03-18 16:24:06,619:INFO:SubProcess create_model() end ==================================
2023-03-18 16:24:06,620:INFO:Creating metrics dataframe
2023-03-18 16:24:06,632:INFO:Initializing Huber Regressor
2023-03-18 16:24:06,632:INFO:Total runtime is 4.945025451978048 minutes
2023-03-18 16:24:06,640:INFO:SubProcess create_model() called ==================================
2023-03-18 16:24:06,640:INFO:Initializing create_model()
2023-03-18 16:24:06,640:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:24:06,654:INFO:Checking exceptions
2023-03-18 16:24:06,655:INFO:Importing libraries
2023-03-18 16:24:06,655:INFO:Copying training dataset
2023-03-18 16:24:06,764:INFO:Defining folds
2023-03-18 16:24:06,765:INFO:Declaring metric variables
2023-03-18 16:24:06,772:INFO:Importing untrained model
2023-03-18 16:24:06,779:INFO:Huber Regressor Imported succesfully
2023-03-18 16:24:06,794:INFO:Starting cross validation
2023-03-18 16:24:06,795:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:27:37,131:INFO:Calculating mean and std
2023-03-18 16:27:37,133:INFO:Creating metrics dataframe
2023-03-18 16:27:37,137:INFO:Uploading results into container
2023-03-18 16:27:37,138:INFO:Uploading model into container now
2023-03-18 16:27:37,138:INFO:create_model_container: 10
2023-03-18 16:27:37,138:INFO:master_model_container: 10
2023-03-18 16:27:37,138:INFO:display_container: 2
2023-03-18 16:27:37,138:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-03-18 16:27:37,138:INFO:create_model() succesfully completed......................................
2023-03-18 16:27:37,246:INFO:SubProcess create_model() end ==================================
2023-03-18 16:27:37,246:INFO:Creating metrics dataframe
2023-03-18 16:27:37,258:INFO:Initializing K Neighbors Regressor
2023-03-18 16:27:37,259:INFO:Total runtime is 8.455481171607971 minutes
2023-03-18 16:27:37,266:INFO:SubProcess create_model() called ==================================
2023-03-18 16:27:37,266:INFO:Initializing create_model()
2023-03-18 16:27:37,267:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:27:37,267:INFO:Checking exceptions
2023-03-18 16:27:37,267:INFO:Importing libraries
2023-03-18 16:27:37,267:INFO:Copying training dataset
2023-03-18 16:27:37,387:INFO:Defining folds
2023-03-18 16:27:37,387:INFO:Declaring metric variables
2023-03-18 16:27:37,394:INFO:Importing untrained model
2023-03-18 16:27:37,401:INFO:K Neighbors Regressor Imported succesfully
2023-03-18 16:27:37,415:INFO:Starting cross validation
2023-03-18 16:27:37,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:28:07,929:INFO:Calculating mean and std
2023-03-18 16:28:07,933:INFO:Creating metrics dataframe
2023-03-18 16:28:07,946:INFO:Uploading results into container
2023-03-18 16:28:07,947:INFO:Uploading model into container now
2023-03-18 16:28:07,947:INFO:create_model_container: 11
2023-03-18 16:28:07,947:INFO:master_model_container: 11
2023-03-18 16:28:07,947:INFO:display_container: 2
2023-03-18 16:28:07,948:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-03-18 16:28:07,948:INFO:create_model() succesfully completed......................................
2023-03-18 16:28:08,052:INFO:SubProcess create_model() end ==================================
2023-03-18 16:28:08,052:INFO:Creating metrics dataframe
2023-03-18 16:28:08,064:INFO:Initializing Decision Tree Regressor
2023-03-18 16:28:08,064:INFO:Total runtime is 8.968899027506511 minutes
2023-03-18 16:28:08,071:INFO:SubProcess create_model() called ==================================
2023-03-18 16:28:08,072:INFO:Initializing create_model()
2023-03-18 16:28:08,072:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:28:08,072:INFO:Checking exceptions
2023-03-18 16:28:08,072:INFO:Importing libraries
2023-03-18 16:28:08,073:INFO:Copying training dataset
2023-03-18 16:28:08,226:INFO:Defining folds
2023-03-18 16:28:08,226:INFO:Declaring metric variables
2023-03-18 16:28:08,233:INFO:Importing untrained model
2023-03-18 16:28:08,240:INFO:Decision Tree Regressor Imported succesfully
2023-03-18 16:28:08,254:INFO:Starting cross validation
2023-03-18 16:28:08,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:28:20,833:INFO:Calculating mean and std
2023-03-18 16:28:20,834:INFO:Creating metrics dataframe
2023-03-18 16:28:20,838:INFO:Uploading results into container
2023-03-18 16:28:20,839:INFO:Uploading model into container now
2023-03-18 16:28:20,839:INFO:create_model_container: 12
2023-03-18 16:28:20,839:INFO:master_model_container: 12
2023-03-18 16:28:20,839:INFO:display_container: 2
2023-03-18 16:28:20,839:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=3033, splitter='best')
2023-03-18 16:28:20,839:INFO:create_model() succesfully completed......................................
2023-03-18 16:28:20,940:INFO:SubProcess create_model() end ==================================
2023-03-18 16:28:20,940:INFO:Creating metrics dataframe
2023-03-18 16:28:20,953:INFO:Initializing Random Forest Regressor
2023-03-18 16:28:20,954:INFO:Total runtime is 9.18372433980306 minutes
2023-03-18 16:28:20,961:INFO:SubProcess create_model() called ==================================
2023-03-18 16:28:20,961:INFO:Initializing create_model()
2023-03-18 16:28:20,961:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:28:20,961:INFO:Checking exceptions
2023-03-18 16:28:20,962:INFO:Importing libraries
2023-03-18 16:28:20,962:INFO:Copying training dataset
2023-03-18 16:28:21,074:INFO:Defining folds
2023-03-18 16:28:21,074:INFO:Declaring metric variables
2023-03-18 16:28:21,081:INFO:Importing untrained model
2023-03-18 16:28:21,088:INFO:Random Forest Regressor Imported succesfully
2023-03-18 16:28:21,103:INFO:Starting cross validation
2023-03-18 16:28:21,103:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-18 16:38:35,581:INFO:Calculating mean and std
2023-03-18 16:38:35,582:INFO:Creating metrics dataframe
2023-03-18 16:38:35,586:INFO:Uploading results into container
2023-03-18 16:38:35,586:INFO:Uploading model into container now
2023-03-18 16:38:35,586:INFO:create_model_container: 13
2023-03-18 16:38:35,586:INFO:master_model_container: 13
2023-03-18 16:38:35,587:INFO:display_container: 2
2023-03-18 16:38:35,587:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=3033, verbose=0, warm_start=False)
2023-03-18 16:38:35,587:INFO:create_model() succesfully completed......................................
2023-03-18 16:38:35,694:INFO:SubProcess create_model() end ==================================
2023-03-18 16:38:35,694:INFO:Creating metrics dataframe
2023-03-18 16:38:35,707:INFO:Initializing Extra Trees Regressor
2023-03-18 16:38:35,707:INFO:Total runtime is 19.42960093021393 minutes
2023-03-18 16:38:35,715:INFO:SubProcess create_model() called ==================================
2023-03-18 16:38:35,715:INFO:Initializing create_model()
2023-03-18 16:38:35,715:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000249B0E7BF10>, return_train_score=False, kwargs={})
2023-03-18 16:38:35,716:INFO:Checking exceptions
2023-03-18 16:38:35,716:INFO:Importing libraries
2023-03-18 16:38:35,716:INFO:Copying training dataset
2023-03-18 16:38:35,826:INFO:Defining folds
2023-03-18 16:38:35,826:INFO:Declaring metric variables
2023-03-18 16:38:35,833:INFO:Importing untrained model
2023-03-18 16:38:35,841:INFO:Extra Trees Regressor Imported succesfully
2023-03-18 16:38:35,857:INFO:Starting cross validation
2023-03-18 16:38:35,858:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:21:35,821:INFO:PyCaret Supervised Module
2023-03-19 10:21:35,821:INFO:ML Usecase: regression
2023-03-19 10:21:35,821:INFO:version 2.3.10
2023-03-19 10:21:35,822:INFO:Initializing setup()
2023-03-19 10:21:35,822:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 10:21:35,822:INFO:Checking environment
2023-03-19 10:21:35,822:INFO:python_version: 3.8.16
2023-03-19 10:21:35,822:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 10:21:35,822:INFO:machine: AMD64
2023-03-19 10:21:35,822:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 10:21:35,824:INFO:Memory: svmem(total=17092505600, available=10726002688, percent=37.2, used=6366502912, free=10726002688)
2023-03-19 10:21:35,824:INFO:Physical Core: 6
2023-03-19 10:21:35,824:INFO:Logical Core: 6
2023-03-19 10:21:35,824:INFO:Checking libraries
2023-03-19 10:21:35,824:INFO:pd==1.5.3
2023-03-19 10:21:35,825:INFO:numpy==1.20.3
2023-03-19 10:21:35,825:INFO:sklearn==0.23.2
2023-03-19 10:21:35,825:INFO:lightgbm==3.3.5
2023-03-19 10:21:35,826:WARNING:catboost not found
2023-03-19 10:21:35,827:WARNING:xgboost not found
2023-03-19 10:21:35,827:INFO:mlflow==2.1.1
2023-03-19 10:21:35,827:INFO:Checking Exceptions
2023-03-19 10:21:35,827:INFO:Declaring global variables
2023-03-19 10:21:35,828:INFO:USI: 398f
2023-03-19 10:21:35,828:INFO:pycaret_globals: {'_all_models_internal', 'dashboard_logger', 'exp_name_log', 'fold_groups_param_full', '_all_models', '_ml_usecase', 'y', 'create_model_container', 'y_test', 'master_model_container', '_gpu_n_jobs_param', 'experiment__', '_all_metrics', 'X', 'gpu_param', 'y_train', 'data_before_preprocess', 'imputation_regressor', '_available_plots', 'n_jobs_param', 'html_param', 'fix_imbalance_method_param', 'display_container', 'transform_target_method_param', 'fix_imbalance_param', 'imputation_classifier', 'fold_param', 'X_test', 'pycaret_globals', 'transform_target_param', 'stratify_param', 'USI', 'target_param', 'fold_shuffle_param', 'X_train', 'fold_groups_param', '_internal_pipeline', 'iterative_imputation_iters_param', 'logging_param', 'fold_generator', 'log_plots_param', 'seed', 'prep_pipe'}
2023-03-19 10:21:35,828:INFO:Preparing display monitor
2023-03-19 10:21:35,828:INFO:Preparing display monitor
2023-03-19 10:21:35,837:INFO:Importing libraries
2023-03-19 10:21:35,837:INFO:Copying data for preprocessing
2023-03-19 10:21:35,845:INFO:Declaring preprocessing parameters
2023-03-19 10:21:35,848:INFO:Creating preprocessing pipeline
2023-03-19 10:21:35,909:INFO:Preprocessing pipeline created successfully
2023-03-19 10:21:35,909:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-19 10:21:35,909:INFO:Creating global containers
2023-03-19 10:21:35,914:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-19 10:21:40,698:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 10:21:40,699:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 10:21:40,808:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 10:21:40,809:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 10:21:40,810:INFO:Creating grid variables
2023-03-19 10:21:40,827:INFO:create_model_container: 0
2023-03-19 10:21:40,827:INFO:master_model_container: 0
2023-03-19 10:21:40,827:INFO:display_container: 1
2023-03-19 10:21:40,832:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-19 10:21:40,833:INFO:setup() succesfully completed......................................
2023-03-19 10:22:36,521:INFO:Initializing compare_models()
2023-03-19 10:22:36,521:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 10:22:36,521:INFO:Checking exceptions
2023-03-19 10:22:36,521:INFO:Preparing display monitor
2023-03-19 10:22:36,521:INFO:Preparing display monitor
2023-03-19 10:22:36,545:INFO:Initializing Linear Regression
2023-03-19 10:22:36,545:INFO:Total runtime is 0.0 minutes
2023-03-19 10:22:36,553:INFO:SubProcess create_model() called ==================================
2023-03-19 10:22:36,553:INFO:Initializing create_model()
2023-03-19 10:22:36,553:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:22:36,553:INFO:Checking exceptions
2023-03-19 10:22:36,554:INFO:Importing libraries
2023-03-19 10:22:36,554:INFO:Copying training dataset
2023-03-19 10:22:36,603:INFO:Defining folds
2023-03-19 10:22:36,603:INFO:Declaring metric variables
2023-03-19 10:22:36,611:INFO:Importing untrained model
2023-03-19 10:22:36,620:INFO:Linear Regression Imported succesfully
2023-03-19 10:22:36,635:INFO:Starting cross validation
2023-03-19 10:22:36,683:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:22:45,273:INFO:Calculating mean and std
2023-03-19 10:22:45,275:INFO:Creating metrics dataframe
2023-03-19 10:22:45,282:INFO:Uploading results into container
2023-03-19 10:22:45,283:INFO:Uploading model into container now
2023-03-19 10:22:45,283:INFO:create_model_container: 1
2023-03-19 10:22:45,283:INFO:master_model_container: 1
2023-03-19 10:22:45,283:INFO:display_container: 2
2023-03-19 10:22:45,284:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2023-03-19 10:22:45,284:INFO:create_model() succesfully completed......................................
2023-03-19 10:22:45,364:INFO:SubProcess create_model() end ==================================
2023-03-19 10:22:45,365:INFO:Creating metrics dataframe
2023-03-19 10:22:45,374:INFO:Initializing Lasso Regression
2023-03-19 10:22:45,374:INFO:Total runtime is 0.1471546212832133 minutes
2023-03-19 10:22:45,381:INFO:SubProcess create_model() called ==================================
2023-03-19 10:22:45,381:INFO:Initializing create_model()
2023-03-19 10:22:45,381:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:22:45,381:INFO:Checking exceptions
2023-03-19 10:22:45,382:INFO:Importing libraries
2023-03-19 10:22:45,382:INFO:Copying training dataset
2023-03-19 10:22:45,426:INFO:Defining folds
2023-03-19 10:22:45,427:INFO:Declaring metric variables
2023-03-19 10:22:45,434:INFO:Importing untrained model
2023-03-19 10:22:45,442:INFO:Lasso Regression Imported succesfully
2023-03-19 10:22:45,456:INFO:Starting cross validation
2023-03-19 10:22:45,457:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:23:19,041:INFO:Calculating mean and std
2023-03-19 10:23:19,043:INFO:Creating metrics dataframe
2023-03-19 10:23:19,051:INFO:Uploading results into container
2023-03-19 10:23:19,051:INFO:Uploading model into container now
2023-03-19 10:23:19,051:INFO:create_model_container: 2
2023-03-19 10:23:19,052:INFO:master_model_container: 2
2023-03-19 10:23:19,052:INFO:display_container: 2
2023-03-19 10:23:19,052:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=2851,
      selection='cyclic', tol=0.0001, warm_start=False)
2023-03-19 10:23:19,052:INFO:create_model() succesfully completed......................................
2023-03-19 10:23:19,120:INFO:SubProcess create_model() end ==================================
2023-03-19 10:23:19,120:INFO:Creating metrics dataframe
2023-03-19 10:23:19,130:INFO:Initializing Ridge Regression
2023-03-19 10:23:19,130:INFO:Total runtime is 0.7097497502962749 minutes
2023-03-19 10:23:19,137:INFO:SubProcess create_model() called ==================================
2023-03-19 10:23:19,137:INFO:Initializing create_model()
2023-03-19 10:23:19,138:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:23:19,138:INFO:Checking exceptions
2023-03-19 10:23:19,138:INFO:Importing libraries
2023-03-19 10:23:19,138:INFO:Copying training dataset
2023-03-19 10:23:19,179:INFO:Defining folds
2023-03-19 10:23:19,180:INFO:Declaring metric variables
2023-03-19 10:23:19,187:INFO:Importing untrained model
2023-03-19 10:23:19,194:INFO:Ridge Regression Imported succesfully
2023-03-19 10:23:19,208:INFO:Starting cross validation
2023-03-19 10:23:19,209:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:23:20,287:INFO:Calculating mean and std
2023-03-19 10:23:20,288:INFO:Creating metrics dataframe
2023-03-19 10:23:20,292:INFO:Uploading results into container
2023-03-19 10:23:20,293:INFO:Uploading model into container now
2023-03-19 10:23:20,293:INFO:create_model_container: 3
2023-03-19 10:23:20,293:INFO:master_model_container: 3
2023-03-19 10:23:20,293:INFO:display_container: 2
2023-03-19 10:23:20,293:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=2851, solver='auto', tol=0.001)
2023-03-19 10:23:20,293:INFO:create_model() succesfully completed......................................
2023-03-19 10:23:20,361:INFO:SubProcess create_model() end ==================================
2023-03-19 10:23:20,362:INFO:Creating metrics dataframe
2023-03-19 10:23:20,372:INFO:Initializing Elastic Net
2023-03-19 10:23:20,373:INFO:Total runtime is 0.7304657181104025 minutes
2023-03-19 10:23:20,381:INFO:SubProcess create_model() called ==================================
2023-03-19 10:23:20,382:INFO:Initializing create_model()
2023-03-19 10:23:20,382:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:23:20,382:INFO:Checking exceptions
2023-03-19 10:23:20,382:INFO:Importing libraries
2023-03-19 10:23:20,382:INFO:Copying training dataset
2023-03-19 10:23:20,426:INFO:Defining folds
2023-03-19 10:23:20,427:INFO:Declaring metric variables
2023-03-19 10:23:20,435:INFO:Importing untrained model
2023-03-19 10:23:20,443:INFO:Elastic Net Imported succesfully
2023-03-19 10:23:20,460:INFO:Starting cross validation
2023-03-19 10:23:20,461:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:23:49,130:INFO:Calculating mean and std
2023-03-19 10:23:49,133:INFO:Creating metrics dataframe
2023-03-19 10:23:49,140:INFO:Uploading results into container
2023-03-19 10:23:49,141:INFO:Uploading model into container now
2023-03-19 10:23:49,141:INFO:create_model_container: 4
2023-03-19 10:23:49,141:INFO:master_model_container: 4
2023-03-19 10:23:49,141:INFO:display_container: 2
2023-03-19 10:23:49,141:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=2851, selection='cyclic', tol=0.0001, warm_start=False)
2023-03-19 10:23:49,141:INFO:create_model() succesfully completed......................................
2023-03-19 10:23:49,210:INFO:SubProcess create_model() end ==================================
2023-03-19 10:23:49,210:INFO:Creating metrics dataframe
2023-03-19 10:23:49,220:INFO:Initializing Least Angle Regression
2023-03-19 10:23:49,220:INFO:Total runtime is 1.211248024304708 minutes
2023-03-19 10:23:49,227:INFO:SubProcess create_model() called ==================================
2023-03-19 10:23:49,228:INFO:Initializing create_model()
2023-03-19 10:23:49,228:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:23:49,228:INFO:Checking exceptions
2023-03-19 10:23:49,228:INFO:Importing libraries
2023-03-19 10:23:49,228:INFO:Copying training dataset
2023-03-19 10:23:49,268:INFO:Defining folds
2023-03-19 10:23:49,268:INFO:Declaring metric variables
2023-03-19 10:23:49,275:INFO:Importing untrained model
2023-03-19 10:23:49,283:INFO:Least Angle Regression Imported succesfully
2023-03-19 10:23:49,297:INFO:Starting cross validation
2023-03-19 10:23:49,298:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:23:52,147:INFO:Calculating mean and std
2023-03-19 10:23:52,149:INFO:Creating metrics dataframe
2023-03-19 10:23:52,159:INFO:Uploading results into container
2023-03-19 10:23:52,159:INFO:Uploading model into container now
2023-03-19 10:23:52,160:INFO:create_model_container: 5
2023-03-19 10:23:52,160:INFO:master_model_container: 5
2023-03-19 10:23:52,160:INFO:display_container: 2
2023-03-19 10:23:52,161:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=2851, verbose=False)
2023-03-19 10:23:52,162:INFO:create_model() succesfully completed......................................
2023-03-19 10:23:52,231:INFO:SubProcess create_model() end ==================================
2023-03-19 10:23:52,231:INFO:Creating metrics dataframe
2023-03-19 10:23:52,241:INFO:Initializing Lasso Least Angle Regression
2023-03-19 10:23:52,241:INFO:Total runtime is 1.2615995128949484 minutes
2023-03-19 10:23:52,249:INFO:SubProcess create_model() called ==================================
2023-03-19 10:23:52,249:INFO:Initializing create_model()
2023-03-19 10:23:52,249:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:23:52,250:INFO:Checking exceptions
2023-03-19 10:23:52,250:INFO:Importing libraries
2023-03-19 10:23:52,250:INFO:Copying training dataset
2023-03-19 10:23:52,290:INFO:Defining folds
2023-03-19 10:23:52,291:INFO:Declaring metric variables
2023-03-19 10:23:52,298:INFO:Importing untrained model
2023-03-19 10:23:52,305:INFO:Lasso Least Angle Regression Imported succesfully
2023-03-19 10:23:52,319:INFO:Starting cross validation
2023-03-19 10:23:52,319:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:23:54,961:INFO:Calculating mean and std
2023-03-19 10:23:54,963:INFO:Creating metrics dataframe
2023-03-19 10:23:54,971:INFO:Uploading results into container
2023-03-19 10:23:54,972:INFO:Uploading model into container now
2023-03-19 10:23:54,972:INFO:create_model_container: 6
2023-03-19 10:23:54,972:INFO:master_model_container: 6
2023-03-19 10:23:54,972:INFO:display_container: 2
2023-03-19 10:23:54,973:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=2851, verbose=False)
2023-03-19 10:23:54,973:INFO:create_model() succesfully completed......................................
2023-03-19 10:23:55,044:INFO:SubProcess create_model() end ==================================
2023-03-19 10:23:55,044:INFO:Creating metrics dataframe
2023-03-19 10:23:55,054:INFO:Initializing Orthogonal Matching Pursuit
2023-03-19 10:23:55,054:INFO:Total runtime is 1.308479936917623 minutes
2023-03-19 10:23:55,061:INFO:SubProcess create_model() called ==================================
2023-03-19 10:23:55,062:INFO:Initializing create_model()
2023-03-19 10:23:55,062:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:23:55,062:INFO:Checking exceptions
2023-03-19 10:23:55,062:INFO:Importing libraries
2023-03-19 10:23:55,062:INFO:Copying training dataset
2023-03-19 10:23:55,102:INFO:Defining folds
2023-03-19 10:23:55,103:INFO:Declaring metric variables
2023-03-19 10:23:55,109:INFO:Importing untrained model
2023-03-19 10:23:55,116:INFO:Orthogonal Matching Pursuit Imported succesfully
2023-03-19 10:23:55,131:INFO:Starting cross validation
2023-03-19 10:23:55,131:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:23:56,320:INFO:Calculating mean and std
2023-03-19 10:23:56,322:INFO:Creating metrics dataframe
2023-03-19 10:23:56,330:INFO:Uploading results into container
2023-03-19 10:23:56,330:INFO:Uploading model into container now
2023-03-19 10:23:56,331:INFO:create_model_container: 7
2023-03-19 10:23:56,331:INFO:master_model_container: 7
2023-03-19 10:23:56,331:INFO:display_container: 2
2023-03-19 10:23:56,331:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2023-03-19 10:23:56,331:INFO:create_model() succesfully completed......................................
2023-03-19 10:23:56,401:INFO:SubProcess create_model() end ==================================
2023-03-19 10:23:56,401:INFO:Creating metrics dataframe
2023-03-19 10:23:56,412:INFO:Initializing Bayesian Ridge
2023-03-19 10:23:56,412:INFO:Total runtime is 1.331125036875407 minutes
2023-03-19 10:23:56,419:INFO:SubProcess create_model() called ==================================
2023-03-19 10:23:56,419:INFO:Initializing create_model()
2023-03-19 10:23:56,419:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:23:56,428:INFO:Checking exceptions
2023-03-19 10:23:56,428:INFO:Importing libraries
2023-03-19 10:23:56,428:INFO:Copying training dataset
2023-03-19 10:23:56,467:INFO:Defining folds
2023-03-19 10:23:56,467:INFO:Declaring metric variables
2023-03-19 10:23:56,474:INFO:Importing untrained model
2023-03-19 10:23:56,482:INFO:Bayesian Ridge Imported succesfully
2023-03-19 10:23:56,495:INFO:Starting cross validation
2023-03-19 10:23:56,496:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:24:23,459:INFO:Calculating mean and std
2023-03-19 10:24:23,462:INFO:Creating metrics dataframe
2023-03-19 10:24:23,477:INFO:Uploading results into container
2023-03-19 10:24:23,478:INFO:Uploading model into container now
2023-03-19 10:24:23,479:INFO:create_model_container: 8
2023-03-19 10:24:23,479:INFO:master_model_container: 8
2023-03-19 10:24:23,479:INFO:display_container: 2
2023-03-19 10:24:23,481:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2023-03-19 10:24:23,481:INFO:create_model() succesfully completed......................................
2023-03-19 10:24:23,560:INFO:SubProcess create_model() end ==================================
2023-03-19 10:24:23,560:INFO:Creating metrics dataframe
2023-03-19 10:24:23,571:INFO:Initializing Passive Aggressive Regressor
2023-03-19 10:24:23,572:INFO:Total runtime is 1.7837803324063621 minutes
2023-03-19 10:24:23,579:INFO:SubProcess create_model() called ==================================
2023-03-19 10:24:23,579:INFO:Initializing create_model()
2023-03-19 10:24:23,579:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:24:23,579:INFO:Checking exceptions
2023-03-19 10:24:23,579:INFO:Importing libraries
2023-03-19 10:24:23,580:INFO:Copying training dataset
2023-03-19 10:24:23,622:INFO:Defining folds
2023-03-19 10:24:23,622:INFO:Declaring metric variables
2023-03-19 10:24:23,629:INFO:Importing untrained model
2023-03-19 10:24:23,636:INFO:Passive Aggressive Regressor Imported succesfully
2023-03-19 10:24:23,651:INFO:Starting cross validation
2023-03-19 10:24:23,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:24:25,571:INFO:Calculating mean and std
2023-03-19 10:24:25,572:INFO:Creating metrics dataframe
2023-03-19 10:24:25,580:INFO:Uploading results into container
2023-03-19 10:24:25,581:INFO:Uploading model into container now
2023-03-19 10:24:25,581:INFO:create_model_container: 9
2023-03-19 10:24:25,581:INFO:master_model_container: 9
2023-03-19 10:24:25,581:INFO:display_container: 2
2023-03-19 10:24:25,582:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=2851, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-19 10:24:25,582:INFO:create_model() succesfully completed......................................
2023-03-19 10:24:25,651:INFO:SubProcess create_model() end ==================================
2023-03-19 10:24:25,651:INFO:Creating metrics dataframe
2023-03-19 10:24:25,661:INFO:Initializing Huber Regressor
2023-03-19 10:24:25,661:INFO:Total runtime is 1.818610227108002 minutes
2023-03-19 10:24:25,668:INFO:SubProcess create_model() called ==================================
2023-03-19 10:24:25,669:INFO:Initializing create_model()
2023-03-19 10:24:25,669:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:24:25,669:INFO:Checking exceptions
2023-03-19 10:24:25,669:INFO:Importing libraries
2023-03-19 10:24:25,669:INFO:Copying training dataset
2023-03-19 10:24:25,710:INFO:Defining folds
2023-03-19 10:24:25,711:INFO:Declaring metric variables
2023-03-19 10:24:25,718:INFO:Importing untrained model
2023-03-19 10:24:25,725:INFO:Huber Regressor Imported succesfully
2023-03-19 10:24:25,739:INFO:Starting cross validation
2023-03-19 10:24:25,739:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:25:36,754:INFO:Calculating mean and std
2023-03-19 10:25:36,758:INFO:Creating metrics dataframe
2023-03-19 10:25:36,769:INFO:Uploading results into container
2023-03-19 10:25:36,770:INFO:Uploading model into container now
2023-03-19 10:25:36,771:INFO:create_model_container: 10
2023-03-19 10:25:36,771:INFO:master_model_container: 10
2023-03-19 10:25:36,771:INFO:display_container: 2
2023-03-19 10:25:36,771:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-03-19 10:25:36,772:INFO:create_model() succesfully completed......................................
2023-03-19 10:25:36,844:INFO:SubProcess create_model() end ==================================
2023-03-19 10:25:36,844:INFO:Creating metrics dataframe
2023-03-19 10:25:36,856:INFO:Initializing K Neighbors Regressor
2023-03-19 10:25:36,856:INFO:Total runtime is 3.0051831126213076 minutes
2023-03-19 10:25:36,863:INFO:SubProcess create_model() called ==================================
2023-03-19 10:25:36,863:INFO:Initializing create_model()
2023-03-19 10:25:36,863:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:25:36,863:INFO:Checking exceptions
2023-03-19 10:25:36,863:INFO:Importing libraries
2023-03-19 10:25:36,863:INFO:Copying training dataset
2023-03-19 10:25:36,905:INFO:Defining folds
2023-03-19 10:25:36,906:INFO:Declaring metric variables
2023-03-19 10:25:36,912:INFO:Importing untrained model
2023-03-19 10:25:36,919:INFO:K Neighbors Regressor Imported succesfully
2023-03-19 10:25:36,933:INFO:Starting cross validation
2023-03-19 10:25:36,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:25:45,112:INFO:Calculating mean and std
2023-03-19 10:25:45,116:INFO:Creating metrics dataframe
2023-03-19 10:25:45,127:INFO:Uploading results into container
2023-03-19 10:25:45,127:INFO:Uploading model into container now
2023-03-19 10:25:45,128:INFO:create_model_container: 11
2023-03-19 10:25:45,128:INFO:master_model_container: 11
2023-03-19 10:25:45,128:INFO:display_container: 2
2023-03-19 10:25:45,129:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-03-19 10:25:45,129:INFO:create_model() succesfully completed......................................
2023-03-19 10:25:45,200:INFO:SubProcess create_model() end ==================================
2023-03-19 10:25:45,201:INFO:Creating metrics dataframe
2023-03-19 10:25:45,213:INFO:Initializing Decision Tree Regressor
2023-03-19 10:25:45,213:INFO:Total runtime is 3.1444622238477073 minutes
2023-03-19 10:25:45,220:INFO:SubProcess create_model() called ==================================
2023-03-19 10:25:45,220:INFO:Initializing create_model()
2023-03-19 10:25:45,220:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:25:45,221:INFO:Checking exceptions
2023-03-19 10:25:45,221:INFO:Importing libraries
2023-03-19 10:25:45,221:INFO:Copying training dataset
2023-03-19 10:25:45,260:INFO:Defining folds
2023-03-19 10:25:45,261:INFO:Declaring metric variables
2023-03-19 10:25:45,267:INFO:Importing untrained model
2023-03-19 10:25:45,275:INFO:Decision Tree Regressor Imported succesfully
2023-03-19 10:25:45,290:INFO:Starting cross validation
2023-03-19 10:25:45,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:25:48,876:INFO:Calculating mean and std
2023-03-19 10:25:48,878:INFO:Creating metrics dataframe
2023-03-19 10:25:48,886:INFO:Uploading results into container
2023-03-19 10:25:48,886:INFO:Uploading model into container now
2023-03-19 10:25:48,886:INFO:create_model_container: 12
2023-03-19 10:25:48,886:INFO:master_model_container: 12
2023-03-19 10:25:48,886:INFO:display_container: 2
2023-03-19 10:25:48,886:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=2851, splitter='best')
2023-03-19 10:25:48,887:INFO:create_model() succesfully completed......................................
2023-03-19 10:25:48,955:INFO:SubProcess create_model() end ==================================
2023-03-19 10:25:48,955:INFO:Creating metrics dataframe
2023-03-19 10:25:48,967:INFO:Initializing Random Forest Regressor
2023-03-19 10:25:48,967:INFO:Total runtime is 3.2070412397384644 minutes
2023-03-19 10:25:48,974:INFO:SubProcess create_model() called ==================================
2023-03-19 10:25:48,975:INFO:Initializing create_model()
2023-03-19 10:25:48,975:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:25:48,975:INFO:Checking exceptions
2023-03-19 10:25:48,975:INFO:Importing libraries
2023-03-19 10:25:48,975:INFO:Copying training dataset
2023-03-19 10:25:49,016:INFO:Defining folds
2023-03-19 10:25:49,017:INFO:Declaring metric variables
2023-03-19 10:25:49,023:INFO:Importing untrained model
2023-03-19 10:25:49,031:INFO:Random Forest Regressor Imported succesfully
2023-03-19 10:25:49,045:INFO:Starting cross validation
2023-03-19 10:25:49,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:27:29,317:WARNING:create_model() for rf raised an exception or returned all 0.0, trying without fit_kwargs:
2023-03-19 10:27:29,394:WARNING:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 439, in result
    self._condition.wait(timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\threading.py", line 302, in wait
    waiter.acquire()
KeyboardInterrupt

2023-03-19 10:27:29,395:INFO:Initializing create_model()
2023-03-19 10:27:29,395:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:27:29,395:INFO:Checking exceptions
2023-03-19 10:27:29,395:INFO:Importing libraries
2023-03-19 10:27:29,395:INFO:Copying training dataset
2023-03-19 10:27:29,448:INFO:Defining folds
2023-03-19 10:27:29,448:INFO:Declaring metric variables
2023-03-19 10:27:29,455:INFO:Importing untrained model
2023-03-19 10:27:29,463:INFO:Random Forest Regressor Imported succesfully
2023-03-19 10:27:29,480:INFO:Starting cross validation
2023-03-19 10:27:29,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:28:40,187:ERROR:create_model() for rf raised an exception or returned all 0.0:
2023-03-19 10:28:40,188:ERROR:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 439, in result
    self._condition.wait(timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\threading.py", line 302, in wait
    waiter.acquire()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-03-19 10:28:40,188:INFO:Initializing Extra Trees Regressor
2023-03-19 10:28:40,188:INFO:Total runtime is 6.060712905724843 minutes
2023-03-19 10:28:40,198:INFO:SubProcess create_model() called ==================================
2023-03-19 10:28:40,198:INFO:Initializing create_model()
2023-03-19 10:28:40,198:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:28:40,198:INFO:Checking exceptions
2023-03-19 10:28:40,198:INFO:Importing libraries
2023-03-19 10:28:40,198:INFO:Copying training dataset
2023-03-19 10:28:40,249:INFO:Defining folds
2023-03-19 10:28:40,250:INFO:Declaring metric variables
2023-03-19 10:28:40,257:INFO:Importing untrained model
2023-03-19 10:28:40,265:INFO:Extra Trees Regressor Imported succesfully
2023-03-19 10:28:40,281:INFO:Starting cross validation
2023-03-19 10:28:40,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:28:41,816:WARNING:create_model() for et raised an exception or returned all 0.0, trying without fit_kwargs:
2023-03-19 10:28:41,816:WARNING:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-03-19 10:28:41,817:INFO:Initializing create_model()
2023-03-19 10:28:41,817:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:28:41,817:INFO:Checking exceptions
2023-03-19 10:28:41,817:INFO:Importing libraries
2023-03-19 10:28:41,817:INFO:Copying training dataset
2023-03-19 10:28:41,879:INFO:Defining folds
2023-03-19 10:28:41,879:INFO:Declaring metric variables
2023-03-19 10:28:41,888:INFO:Importing untrained model
2023-03-19 10:28:41,899:INFO:Extra Trees Regressor Imported succesfully
2023-03-19 10:28:41,916:INFO:Starting cross validation
2023-03-19 10:28:41,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:28:43,355:ERROR:create_model() for et raised an exception or returned all 0.0:
2023-03-19 10:28:43,356:ERROR:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-03-19 10:28:43,356:INFO:Initializing AdaBoost Regressor
2023-03-19 10:28:43,356:INFO:Total runtime is 6.113521683216095 minutes
2023-03-19 10:28:43,363:INFO:SubProcess create_model() called ==================================
2023-03-19 10:28:43,363:INFO:Initializing create_model()
2023-03-19 10:28:43,364:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000028AE4334CA0>, return_train_score=False, kwargs={})
2023-03-19 10:28:43,364:INFO:Checking exceptions
2023-03-19 10:28:43,364:INFO:Importing libraries
2023-03-19 10:28:43,364:INFO:Copying training dataset
2023-03-19 10:28:43,409:INFO:Defining folds
2023-03-19 10:28:43,409:INFO:Declaring metric variables
2023-03-19 10:28:43,417:INFO:Importing untrained model
2023-03-19 10:28:43,425:INFO:AdaBoost Regressor Imported succesfully
2023-03-19 10:28:43,440:INFO:Starting cross validation
2023-03-19 10:28:43,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:36:57,447:INFO:Initializing load_model()
2023-03-19 10:36:57,447:INFO:load_model(model_name=gbr, platform=None, authentication=None, verbose=True)
2023-03-19 10:37:37,835:INFO:PyCaret Supervised Module
2023-03-19 10:37:37,836:INFO:ML Usecase: regression
2023-03-19 10:37:37,836:INFO:version 2.3.10
2023-03-19 10:37:37,836:INFO:Initializing setup()
2023-03-19 10:37:37,836:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 10:37:37,836:INFO:Checking environment
2023-03-19 10:37:37,836:INFO:python_version: 3.8.16
2023-03-19 10:37:37,836:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 10:37:37,836:INFO:machine: AMD64
2023-03-19 10:37:37,836:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 10:37:37,839:INFO:Memory: svmem(total=17092505600, available=10455592960, percent=38.8, used=6636912640, free=10455592960)
2023-03-19 10:37:37,839:INFO:Physical Core: 6
2023-03-19 10:37:37,839:INFO:Logical Core: 6
2023-03-19 10:37:37,839:INFO:Checking libraries
2023-03-19 10:37:37,839:INFO:pd==1.5.3
2023-03-19 10:37:37,839:INFO:numpy==1.20.3
2023-03-19 10:37:37,839:INFO:sklearn==0.23.2
2023-03-19 10:37:37,839:INFO:lightgbm==3.3.5
2023-03-19 10:37:37,840:WARNING:catboost not found
2023-03-19 10:37:37,841:WARNING:xgboost not found
2023-03-19 10:37:37,841:INFO:mlflow==2.1.1
2023-03-19 10:37:37,841:INFO:Checking Exceptions
2023-03-19 10:37:37,841:INFO:Declaring global variables
2023-03-19 10:37:37,841:INFO:USI: fda7
2023-03-19 10:37:37,841:INFO:pycaret_globals: {'_all_models_internal', '_all_models', 'master_model_container', 'X', 'USI', 'gpu_param', 'transform_target_method_param', 'fold_generator', '_ml_usecase', 'fold_groups_param_full', '_all_metrics', 'seed', 'X_test', 'fold_groups_param', 'log_plots_param', 'fold_param', 'experiment__', 'imputation_classifier', 'dashboard_logger', 'stratify_param', 'prep_pipe', 'n_jobs_param', 'logging_param', 'exp_name_log', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'fold_shuffle_param', '_available_plots', '_gpu_n_jobs_param', 'pycaret_globals', 'target_param', 'data_before_preprocess', 'fix_imbalance_param', 'y_train', 'y', 'X_train', 'display_container', 'imputation_regressor', '_internal_pipeline', 'html_param', 'y_test', 'transform_target_param', 'create_model_container'}
2023-03-19 10:37:37,841:INFO:Preparing display monitor
2023-03-19 10:37:37,841:INFO:Preparing display monitor
2023-03-19 10:37:37,851:INFO:Importing libraries
2023-03-19 10:37:37,851:INFO:Copying data for preprocessing
2023-03-19 10:37:37,858:INFO:Declaring preprocessing parameters
2023-03-19 10:37:37,861:INFO:Creating preprocessing pipeline
2023-03-19 10:37:37,877:INFO:Preprocessing pipeline created successfully
2023-03-19 10:37:37,877:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-19 10:37:37,877:INFO:Creating global containers
2023-03-19 10:37:37,878:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-19 10:37:41,193:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 10:37:41,194:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 10:37:41,302:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 10:37:41,303:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 10:37:41,303:INFO:Creating grid variables
2023-03-19 10:37:41,319:INFO:create_model_container: 0
2023-03-19 10:37:41,319:INFO:master_model_container: 0
2023-03-19 10:37:41,319:INFO:display_container: 1
2023-03-19 10:37:41,323:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-19 10:37:41,324:INFO:setup() succesfully completed......................................
2023-03-19 10:41:57,109:INFO:PyCaret Supervised Module
2023-03-19 10:41:57,109:INFO:ML Usecase: regression
2023-03-19 10:41:57,109:INFO:version 2.3.10
2023-03-19 10:41:57,109:INFO:Initializing setup()
2023-03-19 10:41:57,109:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['dev_name', 'locality', 'type'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['area', 'bathroom_num', 'bedroom_num', 'floor_num', 'price'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 10:41:57,109:INFO:Checking environment
2023-03-19 10:41:57,109:INFO:python_version: 3.8.16
2023-03-19 10:41:57,109:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 10:41:57,109:INFO:machine: AMD64
2023-03-19 10:41:57,109:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 10:41:57,112:INFO:Memory: svmem(total=17092505600, available=10378113024, percent=39.3, used=6714392576, free=10378113024)
2023-03-19 10:41:57,112:INFO:Physical Core: 6
2023-03-19 10:41:57,112:INFO:Logical Core: 6
2023-03-19 10:41:57,112:INFO:Checking libraries
2023-03-19 10:41:57,112:INFO:pd==1.5.3
2023-03-19 10:41:57,112:INFO:numpy==1.20.3
2023-03-19 10:41:57,112:INFO:sklearn==0.23.2
2023-03-19 10:41:57,113:INFO:lightgbm==3.3.5
2023-03-19 10:41:57,114:WARNING:catboost not found
2023-03-19 10:41:57,115:WARNING:xgboost not found
2023-03-19 10:41:57,115:INFO:mlflow==2.1.1
2023-03-19 10:41:57,115:INFO:Checking Exceptions
2023-03-19 10:42:19,967:INFO:PyCaret Supervised Module
2023-03-19 10:42:19,967:INFO:ML Usecase: regression
2023-03-19 10:42:19,967:INFO:version 2.3.10
2023-03-19 10:42:19,967:INFO:Initializing setup()
2023-03-19 10:42:19,967:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['dev_name', 'locality', 'type'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['area', 'bathroom_num', 'bedroom_num', 'floor_num'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 10:42:19,968:INFO:Checking environment
2023-03-19 10:42:19,968:INFO:python_version: 3.8.16
2023-03-19 10:42:19,968:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 10:42:19,968:INFO:machine: AMD64
2023-03-19 10:42:19,968:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 10:42:19,970:INFO:Memory: svmem(total=17092505600, available=10434928640, percent=39.0, used=6657576960, free=10434928640)
2023-03-19 10:42:19,970:INFO:Physical Core: 6
2023-03-19 10:42:19,970:INFO:Logical Core: 6
2023-03-19 10:42:19,970:INFO:Checking libraries
2023-03-19 10:42:19,970:INFO:pd==1.5.3
2023-03-19 10:42:19,970:INFO:numpy==1.20.3
2023-03-19 10:42:19,971:INFO:sklearn==0.23.2
2023-03-19 10:42:19,971:INFO:lightgbm==3.3.5
2023-03-19 10:42:19,972:WARNING:catboost not found
2023-03-19 10:42:19,972:WARNING:xgboost not found
2023-03-19 10:42:19,973:INFO:mlflow==2.1.1
2023-03-19 10:42:19,973:INFO:Checking Exceptions
2023-03-19 10:42:19,973:INFO:Declaring global variables
2023-03-19 10:42:19,973:INFO:USI: 8cf0
2023-03-19 10:42:19,973:INFO:pycaret_globals: {'_all_models_internal', '_all_models', 'master_model_container', 'X', 'USI', 'gpu_param', 'transform_target_method_param', 'fold_generator', '_ml_usecase', 'fold_groups_param_full', '_all_metrics', 'seed', 'X_test', 'fold_groups_param', 'log_plots_param', 'fold_param', 'experiment__', 'imputation_classifier', 'dashboard_logger', 'stratify_param', 'prep_pipe', 'n_jobs_param', 'logging_param', 'exp_name_log', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'fold_shuffle_param', '_available_plots', '_gpu_n_jobs_param', 'pycaret_globals', 'target_param', 'data_before_preprocess', 'fix_imbalance_param', 'y_train', 'y', 'X_train', 'display_container', 'imputation_regressor', '_internal_pipeline', 'html_param', 'y_test', 'transform_target_param', 'create_model_container'}
2023-03-19 10:42:19,973:INFO:Preparing display monitor
2023-03-19 10:42:19,973:INFO:Preparing display monitor
2023-03-19 10:42:19,982:INFO:Importing libraries
2023-03-19 10:42:19,982:INFO:Copying data for preprocessing
2023-03-19 10:42:19,990:INFO:Declaring preprocessing parameters
2023-03-19 10:42:19,991:INFO:Creating preprocessing pipeline
2023-03-19 10:42:20,000:INFO:Preprocessing pipeline created successfully
2023-03-19 10:42:20,000:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-19 10:42:20,000:INFO:Creating global containers
2023-03-19 10:42:20,000:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-19 10:42:24,017:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 10:42:24,018:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 10:42:24,123:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 10:42:24,124:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 10:42:24,125:INFO:Creating grid variables
2023-03-19 10:42:24,140:INFO:create_model_container: 0
2023-03-19 10:42:24,141:INFO:master_model_container: 0
2023-03-19 10:42:24,141:INFO:display_container: 1
2023-03-19 10:42:24,145:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['dev_name',
                                                            'locality',
                                                            'type'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num',
                                                          'floor_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_availabl...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-19 10:42:24,145:INFO:setup() succesfully completed......................................
2023-03-19 10:43:00,503:INFO:Initializing compare_models()
2023-03-19 10:43:00,503:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 10:43:00,504:INFO:Checking exceptions
2023-03-19 10:43:00,504:INFO:Preparing display monitor
2023-03-19 10:43:00,504:INFO:Preparing display monitor
2023-03-19 10:43:00,528:INFO:Initializing Linear Regression
2023-03-19 10:43:00,528:INFO:Total runtime is 0.0 minutes
2023-03-19 10:43:00,536:INFO:SubProcess create_model() called ==================================
2023-03-19 10:43:00,537:INFO:Initializing create_model()
2023-03-19 10:43:00,537:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:43:00,537:INFO:Checking exceptions
2023-03-19 10:43:00,537:INFO:Importing libraries
2023-03-19 10:43:00,537:INFO:Copying training dataset
2023-03-19 10:43:00,583:INFO:Defining folds
2023-03-19 10:43:00,584:INFO:Declaring metric variables
2023-03-19 10:43:00,594:INFO:Importing untrained model
2023-03-19 10:43:00,604:INFO:Linear Regression Imported succesfully
2023-03-19 10:43:00,622:INFO:Starting cross validation
2023-03-19 10:43:00,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:43:08,696:INFO:Calculating mean and std
2023-03-19 10:43:08,697:INFO:Creating metrics dataframe
2023-03-19 10:43:08,708:INFO:Uploading results into container
2023-03-19 10:43:08,709:INFO:Uploading model into container now
2023-03-19 10:43:08,709:INFO:create_model_container: 1
2023-03-19 10:43:08,709:INFO:master_model_container: 1
2023-03-19 10:43:08,709:INFO:display_container: 2
2023-03-19 10:43:08,710:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2023-03-19 10:43:08,710:INFO:create_model() succesfully completed......................................
2023-03-19 10:43:08,816:INFO:SubProcess create_model() end ==================================
2023-03-19 10:43:08,816:INFO:Creating metrics dataframe
2023-03-19 10:43:08,825:INFO:Initializing Lasso Regression
2023-03-19 10:43:08,825:INFO:Total runtime is 0.13829328219095866 minutes
2023-03-19 10:43:08,833:INFO:SubProcess create_model() called ==================================
2023-03-19 10:43:08,833:INFO:Initializing create_model()
2023-03-19 10:43:08,834:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:43:08,834:INFO:Checking exceptions
2023-03-19 10:43:08,834:INFO:Importing libraries
2023-03-19 10:43:08,834:INFO:Copying training dataset
2023-03-19 10:43:08,881:INFO:Defining folds
2023-03-19 10:43:08,882:INFO:Declaring metric variables
2023-03-19 10:43:08,890:INFO:Importing untrained model
2023-03-19 10:43:08,898:INFO:Lasso Regression Imported succesfully
2023-03-19 10:43:08,913:INFO:Starting cross validation
2023-03-19 10:43:08,914:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:43:18,059:INFO:Calculating mean and std
2023-03-19 10:43:18,061:INFO:Creating metrics dataframe
2023-03-19 10:43:18,069:INFO:Uploading results into container
2023-03-19 10:43:18,069:INFO:Uploading model into container now
2023-03-19 10:43:18,069:INFO:create_model_container: 2
2023-03-19 10:43:18,069:INFO:master_model_container: 2
2023-03-19 10:43:18,070:INFO:display_container: 2
2023-03-19 10:43:18,070:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=4075,
      selection='cyclic', tol=0.0001, warm_start=False)
2023-03-19 10:43:18,070:INFO:create_model() succesfully completed......................................
2023-03-19 10:43:18,164:INFO:SubProcess create_model() end ==================================
2023-03-19 10:43:18,164:INFO:Creating metrics dataframe
2023-03-19 10:43:18,174:INFO:Initializing Ridge Regression
2023-03-19 10:43:18,174:INFO:Total runtime is 0.2941006779670715 minutes
2023-03-19 10:43:18,182:INFO:SubProcess create_model() called ==================================
2023-03-19 10:43:18,182:INFO:Initializing create_model()
2023-03-19 10:43:18,182:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:43:18,182:INFO:Checking exceptions
2023-03-19 10:43:18,183:INFO:Importing libraries
2023-03-19 10:43:18,183:INFO:Copying training dataset
2023-03-19 10:43:18,224:INFO:Defining folds
2023-03-19 10:43:18,224:INFO:Declaring metric variables
2023-03-19 10:43:18,232:INFO:Importing untrained model
2023-03-19 10:43:18,239:INFO:Ridge Regression Imported succesfully
2023-03-19 10:43:18,254:INFO:Starting cross validation
2023-03-19 10:43:18,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:43:19,349:INFO:Calculating mean and std
2023-03-19 10:43:19,350:INFO:Creating metrics dataframe
2023-03-19 10:43:19,354:INFO:Uploading results into container
2023-03-19 10:43:19,355:INFO:Uploading model into container now
2023-03-19 10:43:19,355:INFO:create_model_container: 3
2023-03-19 10:43:19,355:INFO:master_model_container: 3
2023-03-19 10:43:19,355:INFO:display_container: 2
2023-03-19 10:43:19,355:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=4075, solver='auto', tol=0.001)
2023-03-19 10:43:19,355:INFO:create_model() succesfully completed......................................
2023-03-19 10:43:19,442:INFO:SubProcess create_model() end ==================================
2023-03-19 10:43:19,442:INFO:Creating metrics dataframe
2023-03-19 10:43:19,452:INFO:Initializing Elastic Net
2023-03-19 10:43:19,452:INFO:Total runtime is 0.3154061158498128 minutes
2023-03-19 10:43:19,460:INFO:SubProcess create_model() called ==================================
2023-03-19 10:43:19,460:INFO:Initializing create_model()
2023-03-19 10:43:19,460:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:43:19,460:INFO:Checking exceptions
2023-03-19 10:43:19,460:INFO:Importing libraries
2023-03-19 10:43:19,460:INFO:Copying training dataset
2023-03-19 10:43:19,503:INFO:Defining folds
2023-03-19 10:43:19,503:INFO:Declaring metric variables
2023-03-19 10:43:19,511:INFO:Importing untrained model
2023-03-19 10:43:19,518:INFO:Elastic Net Imported succesfully
2023-03-19 10:43:19,533:INFO:Starting cross validation
2023-03-19 10:43:19,534:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:43:34,426:INFO:Calculating mean and std
2023-03-19 10:43:34,428:INFO:Creating metrics dataframe
2023-03-19 10:43:34,437:INFO:Uploading results into container
2023-03-19 10:43:34,437:INFO:Uploading model into container now
2023-03-19 10:43:34,437:INFO:create_model_container: 4
2023-03-19 10:43:34,438:INFO:master_model_container: 4
2023-03-19 10:43:34,438:INFO:display_container: 2
2023-03-19 10:43:34,438:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=4075, selection='cyclic', tol=0.0001, warm_start=False)
2023-03-19 10:43:34,438:INFO:create_model() succesfully completed......................................
2023-03-19 10:43:34,527:INFO:SubProcess create_model() end ==================================
2023-03-19 10:43:34,527:INFO:Creating metrics dataframe
2023-03-19 10:43:34,537:INFO:Initializing Least Angle Regression
2023-03-19 10:43:34,538:INFO:Total runtime is 0.5668374220530192 minutes
2023-03-19 10:43:34,545:INFO:SubProcess create_model() called ==================================
2023-03-19 10:43:34,546:INFO:Initializing create_model()
2023-03-19 10:43:34,546:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:43:34,546:INFO:Checking exceptions
2023-03-19 10:43:34,546:INFO:Importing libraries
2023-03-19 10:43:34,546:INFO:Copying training dataset
2023-03-19 10:43:34,588:INFO:Defining folds
2023-03-19 10:43:34,588:INFO:Declaring metric variables
2023-03-19 10:43:34,595:INFO:Importing untrained model
2023-03-19 10:43:34,603:INFO:Least Angle Regression Imported succesfully
2023-03-19 10:43:34,619:INFO:Starting cross validation
2023-03-19 10:43:34,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:43:37,566:INFO:Calculating mean and std
2023-03-19 10:43:37,567:INFO:Creating metrics dataframe
2023-03-19 10:43:37,572:INFO:Uploading results into container
2023-03-19 10:43:37,572:INFO:Uploading model into container now
2023-03-19 10:43:37,572:INFO:create_model_container: 5
2023-03-19 10:43:37,572:INFO:master_model_container: 5
2023-03-19 10:43:37,572:INFO:display_container: 2
2023-03-19 10:43:37,573:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=4075, verbose=False)
2023-03-19 10:43:37,573:INFO:create_model() succesfully completed......................................
2023-03-19 10:43:37,659:INFO:SubProcess create_model() end ==================================
2023-03-19 10:43:37,659:INFO:Creating metrics dataframe
2023-03-19 10:43:37,669:INFO:Initializing Lasso Least Angle Regression
2023-03-19 10:43:37,669:INFO:Total runtime is 0.6190261205037435 minutes
2023-03-19 10:43:37,677:INFO:SubProcess create_model() called ==================================
2023-03-19 10:43:37,678:INFO:Initializing create_model()
2023-03-19 10:43:37,678:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:43:37,678:INFO:Checking exceptions
2023-03-19 10:43:37,678:INFO:Importing libraries
2023-03-19 10:43:37,678:INFO:Copying training dataset
2023-03-19 10:43:37,720:INFO:Defining folds
2023-03-19 10:43:37,720:INFO:Declaring metric variables
2023-03-19 10:43:37,727:INFO:Importing untrained model
2023-03-19 10:43:37,735:INFO:Lasso Least Angle Regression Imported succesfully
2023-03-19 10:43:37,767:INFO:Starting cross validation
2023-03-19 10:43:37,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:43:40,350:INFO:Calculating mean and std
2023-03-19 10:43:40,352:INFO:Creating metrics dataframe
2023-03-19 10:43:40,360:INFO:Uploading results into container
2023-03-19 10:43:40,360:INFO:Uploading model into container now
2023-03-19 10:43:40,360:INFO:create_model_container: 6
2023-03-19 10:43:40,360:INFO:master_model_container: 6
2023-03-19 10:43:40,360:INFO:display_container: 2
2023-03-19 10:43:40,361:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=4075, verbose=False)
2023-03-19 10:43:40,361:INFO:create_model() succesfully completed......................................
2023-03-19 10:43:40,448:INFO:SubProcess create_model() end ==================================
2023-03-19 10:43:40,448:INFO:Creating metrics dataframe
2023-03-19 10:43:40,458:INFO:Initializing Orthogonal Matching Pursuit
2023-03-19 10:43:40,458:INFO:Total runtime is 0.6655126372973125 minutes
2023-03-19 10:43:40,466:INFO:SubProcess create_model() called ==================================
2023-03-19 10:43:40,466:INFO:Initializing create_model()
2023-03-19 10:43:40,466:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:43:40,466:INFO:Checking exceptions
2023-03-19 10:43:40,466:INFO:Importing libraries
2023-03-19 10:43:40,467:INFO:Copying training dataset
2023-03-19 10:43:40,511:INFO:Defining folds
2023-03-19 10:43:40,511:INFO:Declaring metric variables
2023-03-19 10:43:40,518:INFO:Importing untrained model
2023-03-19 10:43:40,525:INFO:Orthogonal Matching Pursuit Imported succesfully
2023-03-19 10:43:40,541:INFO:Starting cross validation
2023-03-19 10:43:40,541:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:43:41,693:INFO:Calculating mean and std
2023-03-19 10:43:41,696:INFO:Creating metrics dataframe
2023-03-19 10:43:41,704:INFO:Uploading results into container
2023-03-19 10:43:41,705:INFO:Uploading model into container now
2023-03-19 10:43:41,705:INFO:create_model_container: 7
2023-03-19 10:43:41,705:INFO:master_model_container: 7
2023-03-19 10:43:41,705:INFO:display_container: 2
2023-03-19 10:43:41,706:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2023-03-19 10:43:41,706:INFO:create_model() succesfully completed......................................
2023-03-19 10:43:41,795:INFO:SubProcess create_model() end ==================================
2023-03-19 10:43:41,795:INFO:Creating metrics dataframe
2023-03-19 10:43:41,806:INFO:Initializing Bayesian Ridge
2023-03-19 10:43:41,806:INFO:Total runtime is 0.6879688143730164 minutes
2023-03-19 10:43:41,814:INFO:SubProcess create_model() called ==================================
2023-03-19 10:43:41,815:INFO:Initializing create_model()
2023-03-19 10:43:41,815:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:43:41,815:INFO:Checking exceptions
2023-03-19 10:43:41,815:INFO:Importing libraries
2023-03-19 10:43:41,815:INFO:Copying training dataset
2023-03-19 10:43:41,857:INFO:Defining folds
2023-03-19 10:43:41,857:INFO:Declaring metric variables
2023-03-19 10:43:41,863:INFO:Importing untrained model
2023-03-19 10:43:41,871:INFO:Bayesian Ridge Imported succesfully
2023-03-19 10:43:41,886:INFO:Starting cross validation
2023-03-19 10:43:41,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:44:08,395:INFO:Calculating mean and std
2023-03-19 10:44:08,396:INFO:Creating metrics dataframe
2023-03-19 10:44:08,400:INFO:Uploading results into container
2023-03-19 10:44:08,400:INFO:Uploading model into container now
2023-03-19 10:44:08,400:INFO:create_model_container: 8
2023-03-19 10:44:08,400:INFO:master_model_container: 8
2023-03-19 10:44:08,400:INFO:display_container: 2
2023-03-19 10:44:08,400:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2023-03-19 10:44:08,401:INFO:create_model() succesfully completed......................................
2023-03-19 10:44:08,488:INFO:SubProcess create_model() end ==================================
2023-03-19 10:44:08,488:INFO:Creating metrics dataframe
2023-03-19 10:44:08,499:INFO:Initializing Passive Aggressive Regressor
2023-03-19 10:44:08,500:INFO:Total runtime is 1.1328744649887086 minutes
2023-03-19 10:44:08,507:INFO:SubProcess create_model() called ==================================
2023-03-19 10:44:08,507:INFO:Initializing create_model()
2023-03-19 10:44:08,507:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:44:08,507:INFO:Checking exceptions
2023-03-19 10:44:08,508:INFO:Importing libraries
2023-03-19 10:44:08,508:INFO:Copying training dataset
2023-03-19 10:44:08,547:INFO:Defining folds
2023-03-19 10:44:08,547:INFO:Declaring metric variables
2023-03-19 10:44:08,555:INFO:Importing untrained model
2023-03-19 10:44:08,562:INFO:Passive Aggressive Regressor Imported succesfully
2023-03-19 10:44:08,578:INFO:Starting cross validation
2023-03-19 10:44:08,579:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:44:10,145:INFO:Calculating mean and std
2023-03-19 10:44:10,146:INFO:Creating metrics dataframe
2023-03-19 10:44:10,150:INFO:Uploading results into container
2023-03-19 10:44:10,150:INFO:Uploading model into container now
2023-03-19 10:44:10,150:INFO:create_model_container: 9
2023-03-19 10:44:10,150:INFO:master_model_container: 9
2023-03-19 10:44:10,150:INFO:display_container: 2
2023-03-19 10:44:10,150:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=4075, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-19 10:44:10,150:INFO:create_model() succesfully completed......................................
2023-03-19 10:44:10,238:INFO:SubProcess create_model() end ==================================
2023-03-19 10:44:10,239:INFO:Creating metrics dataframe
2023-03-19 10:44:10,251:INFO:Initializing Huber Regressor
2023-03-19 10:44:10,251:INFO:Total runtime is 1.1620519081751506 minutes
2023-03-19 10:44:10,260:INFO:SubProcess create_model() called ==================================
2023-03-19 10:44:10,260:INFO:Initializing create_model()
2023-03-19 10:44:10,260:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:44:10,260:INFO:Checking exceptions
2023-03-19 10:44:10,260:INFO:Importing libraries
2023-03-19 10:44:10,260:INFO:Copying training dataset
2023-03-19 10:44:10,300:INFO:Defining folds
2023-03-19 10:44:10,300:INFO:Declaring metric variables
2023-03-19 10:44:10,307:INFO:Importing untrained model
2023-03-19 10:44:10,314:INFO:Huber Regressor Imported succesfully
2023-03-19 10:44:10,330:INFO:Starting cross validation
2023-03-19 10:44:10,331:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:45:17,084:INFO:Calculating mean and std
2023-03-19 10:45:17,085:INFO:Creating metrics dataframe
2023-03-19 10:45:17,090:INFO:Uploading results into container
2023-03-19 10:45:17,090:INFO:Uploading model into container now
2023-03-19 10:45:17,090:INFO:create_model_container: 10
2023-03-19 10:45:17,090:INFO:master_model_container: 10
2023-03-19 10:45:17,090:INFO:display_container: 2
2023-03-19 10:45:17,090:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-03-19 10:45:17,091:INFO:create_model() succesfully completed......................................
2023-03-19 10:45:17,188:INFO:SubProcess create_model() end ==================================
2023-03-19 10:45:17,188:INFO:Creating metrics dataframe
2023-03-19 10:45:17,202:INFO:Initializing K Neighbors Regressor
2023-03-19 10:45:17,202:INFO:Total runtime is 2.277905368804932 minutes
2023-03-19 10:45:17,211:INFO:SubProcess create_model() called ==================================
2023-03-19 10:45:17,212:INFO:Initializing create_model()
2023-03-19 10:45:17,212:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:45:17,212:INFO:Checking exceptions
2023-03-19 10:45:17,212:INFO:Importing libraries
2023-03-19 10:45:17,212:INFO:Copying training dataset
2023-03-19 10:45:17,257:INFO:Defining folds
2023-03-19 10:45:17,257:INFO:Declaring metric variables
2023-03-19 10:45:17,265:INFO:Importing untrained model
2023-03-19 10:45:17,273:INFO:K Neighbors Regressor Imported succesfully
2023-03-19 10:45:17,289:INFO:Starting cross validation
2023-03-19 10:45:17,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:45:25,602:INFO:Calculating mean and std
2023-03-19 10:45:25,606:INFO:Creating metrics dataframe
2023-03-19 10:45:25,620:INFO:Uploading results into container
2023-03-19 10:45:25,621:INFO:Uploading model into container now
2023-03-19 10:45:25,621:INFO:create_model_container: 11
2023-03-19 10:45:25,621:INFO:master_model_container: 11
2023-03-19 10:45:25,622:INFO:display_container: 2
2023-03-19 10:45:25,622:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-03-19 10:45:25,622:INFO:create_model() succesfully completed......................................
2023-03-19 10:45:25,715:INFO:SubProcess create_model() end ==================================
2023-03-19 10:45:25,715:INFO:Creating metrics dataframe
2023-03-19 10:45:25,727:INFO:Initializing Decision Tree Regressor
2023-03-19 10:45:25,727:INFO:Total runtime is 2.419990380605062 minutes
2023-03-19 10:45:25,734:INFO:SubProcess create_model() called ==================================
2023-03-19 10:45:25,735:INFO:Initializing create_model()
2023-03-19 10:45:25,735:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:45:25,735:INFO:Checking exceptions
2023-03-19 10:45:25,735:INFO:Importing libraries
2023-03-19 10:45:25,735:INFO:Copying training dataset
2023-03-19 10:45:25,775:INFO:Defining folds
2023-03-19 10:45:25,776:INFO:Declaring metric variables
2023-03-19 10:45:25,783:INFO:Importing untrained model
2023-03-19 10:45:25,790:INFO:Decision Tree Regressor Imported succesfully
2023-03-19 10:45:25,806:INFO:Starting cross validation
2023-03-19 10:45:25,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:45:29,338:INFO:Calculating mean and std
2023-03-19 10:45:29,341:INFO:Creating metrics dataframe
2023-03-19 10:45:29,359:INFO:Uploading results into container
2023-03-19 10:45:29,360:INFO:Uploading model into container now
2023-03-19 10:45:29,360:INFO:create_model_container: 12
2023-03-19 10:45:29,361:INFO:master_model_container: 12
2023-03-19 10:45:29,361:INFO:display_container: 2
2023-03-19 10:45:29,363:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=4075, splitter='best')
2023-03-19 10:45:29,363:INFO:create_model() succesfully completed......................................
2023-03-19 10:45:29,460:INFO:SubProcess create_model() end ==================================
2023-03-19 10:45:29,460:INFO:Creating metrics dataframe
2023-03-19 10:45:29,473:INFO:Initializing Random Forest Regressor
2023-03-19 10:45:29,473:INFO:Total runtime is 2.4824273506800334 minutes
2023-03-19 10:45:29,481:INFO:SubProcess create_model() called ==================================
2023-03-19 10:45:29,481:INFO:Initializing create_model()
2023-03-19 10:45:29,481:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:45:29,481:INFO:Checking exceptions
2023-03-19 10:45:29,481:INFO:Importing libraries
2023-03-19 10:45:29,481:INFO:Copying training dataset
2023-03-19 10:45:29,523:INFO:Defining folds
2023-03-19 10:45:29,523:INFO:Declaring metric variables
2023-03-19 10:45:29,530:INFO:Importing untrained model
2023-03-19 10:45:29,537:INFO:Random Forest Regressor Imported succesfully
2023-03-19 10:45:29,552:INFO:Starting cross validation
2023-03-19 10:45:29,552:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:48:04,790:INFO:Calculating mean and std
2023-03-19 10:48:04,792:INFO:Creating metrics dataframe
2023-03-19 10:48:04,800:INFO:Uploading results into container
2023-03-19 10:48:04,801:INFO:Uploading model into container now
2023-03-19 10:48:04,801:INFO:create_model_container: 13
2023-03-19 10:48:04,801:INFO:master_model_container: 13
2023-03-19 10:48:04,801:INFO:display_container: 2
2023-03-19 10:48:04,802:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=4075, verbose=0, warm_start=False)
2023-03-19 10:48:04,802:INFO:create_model() succesfully completed......................................
2023-03-19 10:48:04,890:INFO:SubProcess create_model() end ==================================
2023-03-19 10:48:04,890:INFO:Creating metrics dataframe
2023-03-19 10:48:04,903:INFO:Initializing Extra Trees Regressor
2023-03-19 10:48:04,903:INFO:Total runtime is 5.072919726371765 minutes
2023-03-19 10:48:04,911:INFO:SubProcess create_model() called ==================================
2023-03-19 10:48:04,911:INFO:Initializing create_model()
2023-03-19 10:48:04,911:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:48:04,911:INFO:Checking exceptions
2023-03-19 10:48:04,911:INFO:Importing libraries
2023-03-19 10:48:04,911:INFO:Copying training dataset
2023-03-19 10:48:04,954:INFO:Defining folds
2023-03-19 10:48:04,954:INFO:Declaring metric variables
2023-03-19 10:48:04,961:INFO:Importing untrained model
2023-03-19 10:48:04,969:INFO:Extra Trees Regressor Imported succesfully
2023-03-19 10:48:04,983:INFO:Starting cross validation
2023-03-19 10:48:04,984:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:50:47,334:WARNING:create_model() for et raised an exception or returned all 0.0, trying without fit_kwargs:
2023-03-19 10:50:47,337:WARNING:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 439, in result
    self._condition.wait(timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\threading.py", line 302, in wait
    waiter.acquire()
KeyboardInterrupt

2023-03-19 10:50:47,337:INFO:Initializing create_model()
2023-03-19 10:50:47,337:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001A624C18D00>, return_train_score=False, kwargs={})
2023-03-19 10:50:47,337:INFO:Checking exceptions
2023-03-19 10:50:47,337:INFO:Importing libraries
2023-03-19 10:50:47,337:INFO:Copying training dataset
2023-03-19 10:50:47,388:INFO:Defining folds
2023-03-19 10:50:47,388:INFO:Declaring metric variables
2023-03-19 10:50:47,397:INFO:Importing untrained model
2023-03-19 10:50:47,406:INFO:Extra Trees Regressor Imported succesfully
2023-03-19 10:50:47,424:INFO:Starting cross validation
2023-03-19 10:50:47,425:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:55:39,678:INFO:PyCaret Supervised Module
2023-03-19 10:55:39,679:INFO:ML Usecase: regression
2023-03-19 10:55:39,679:INFO:version 2.3.10
2023-03-19 10:55:39,679:INFO:Initializing setup()
2023-03-19 10:55:39,679:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['locality'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['area', 'bathroom_num', 'bedroom_num'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 10:55:39,679:INFO:Checking environment
2023-03-19 10:55:39,679:INFO:python_version: 3.8.16
2023-03-19 10:55:39,680:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 10:55:39,680:INFO:machine: AMD64
2023-03-19 10:55:39,680:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 10:55:39,682:INFO:Memory: svmem(total=17092505600, available=10743242752, percent=37.1, used=6349262848, free=10743242752)
2023-03-19 10:55:39,682:INFO:Physical Core: 6
2023-03-19 10:55:39,682:INFO:Logical Core: 6
2023-03-19 10:55:39,682:INFO:Checking libraries
2023-03-19 10:55:39,682:INFO:pd==1.5.3
2023-03-19 10:55:39,682:INFO:numpy==1.20.3
2023-03-19 10:55:39,683:INFO:sklearn==0.23.2
2023-03-19 10:55:39,683:INFO:lightgbm==3.3.5
2023-03-19 10:55:39,684:WARNING:catboost not found
2023-03-19 10:55:39,685:WARNING:xgboost not found
2023-03-19 10:55:39,685:INFO:mlflow==2.1.1
2023-03-19 10:55:39,686:INFO:Checking Exceptions
2023-03-19 10:55:39,686:INFO:Declaring global variables
2023-03-19 10:55:39,686:INFO:USI: 526e
2023-03-19 10:55:39,686:INFO:pycaret_globals: {'seed', 'data_before_preprocess', '_all_models', 'prep_pipe', 'display_container', 'fold_groups_param_full', 'y', '_gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance_param', 'X_train', 'X', 'target_param', 'imputation_classifier', 'X_test', 'exp_name_log', 'y_test', 'gpu_param', 'transform_target_param', '_available_plots', 'create_model_container', 'y_train', '_internal_pipeline', 'log_plots_param', 'fix_imbalance_method_param', 'fold_param', 'fold_groups_param', 'transform_target_method_param', '_all_models_internal', 'html_param', 'experiment__', 'fold_shuffle_param', 'pycaret_globals', 'USI', 'fold_generator', 'logging_param', 'dashboard_logger', 'master_model_container', 'stratify_param', 'imputation_regressor', 'iterative_imputation_iters_param', '_all_metrics', '_ml_usecase'}
2023-03-19 10:55:39,686:INFO:Preparing display monitor
2023-03-19 10:55:39,686:INFO:Preparing display monitor
2023-03-19 10:55:39,696:INFO:Importing libraries
2023-03-19 10:55:39,696:INFO:Copying data for preprocessing
2023-03-19 10:55:39,705:INFO:Declaring preprocessing parameters
2023-03-19 10:55:39,707:INFO:Creating preprocessing pipeline
2023-03-19 10:55:39,716:INFO:Preprocessing pipeline created successfully
2023-03-19 10:55:39,716:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-19 10:55:39,716:INFO:Creating global containers
2023-03-19 10:55:39,717:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-19 10:55:44,239:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 10:55:44,240:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 10:55:44,348:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 10:55:44,349:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 10:55:44,350:INFO:Creating grid variables
2023-03-19 10:55:44,364:INFO:create_model_container: 0
2023-03-19 10:55:44,365:INFO:master_model_container: 0
2023-03-19 10:55:44,365:INFO:display_container: 1
2023-03-19 10:55:44,369:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-19 10:55:44,370:INFO:setup() succesfully completed......................................
2023-03-19 10:57:57,694:INFO:Initializing compare_models()
2023-03-19 10:57:57,694:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 10:57:57,695:INFO:Checking exceptions
2023-03-19 10:57:57,695:INFO:Preparing display monitor
2023-03-19 10:57:57,695:INFO:Preparing display monitor
2023-03-19 10:57:57,717:INFO:Initializing Linear Regression
2023-03-19 10:57:57,717:INFO:Total runtime is 0.0 minutes
2023-03-19 10:57:57,725:INFO:SubProcess create_model() called ==================================
2023-03-19 10:57:57,725:INFO:Initializing create_model()
2023-03-19 10:57:57,725:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:57:57,725:INFO:Checking exceptions
2023-03-19 10:57:57,725:INFO:Importing libraries
2023-03-19 10:57:57,726:INFO:Copying training dataset
2023-03-19 10:57:57,784:INFO:Defining folds
2023-03-19 10:57:57,785:INFO:Declaring metric variables
2023-03-19 10:57:57,793:INFO:Importing untrained model
2023-03-19 10:57:57,801:INFO:Linear Regression Imported succesfully
2023-03-19 10:57:57,817:INFO:Starting cross validation
2023-03-19 10:57:57,821:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:58:04,806:INFO:Calculating mean and std
2023-03-19 10:58:04,807:INFO:Creating metrics dataframe
2023-03-19 10:58:04,812:INFO:Uploading results into container
2023-03-19 10:58:04,812:INFO:Uploading model into container now
2023-03-19 10:58:04,813:INFO:create_model_container: 1
2023-03-19 10:58:04,813:INFO:master_model_container: 1
2023-03-19 10:58:04,813:INFO:display_container: 2
2023-03-19 10:58:04,813:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2023-03-19 10:58:04,813:INFO:create_model() succesfully completed......................................
2023-03-19 10:58:04,888:INFO:SubProcess create_model() end ==================================
2023-03-19 10:58:04,888:INFO:Creating metrics dataframe
2023-03-19 10:58:04,897:INFO:Initializing Lasso Regression
2023-03-19 10:58:04,897:INFO:Total runtime is 0.11967403093973795 minutes
2023-03-19 10:58:04,906:INFO:SubProcess create_model() called ==================================
2023-03-19 10:58:04,906:INFO:Initializing create_model()
2023-03-19 10:58:04,906:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:58:04,906:INFO:Checking exceptions
2023-03-19 10:58:04,906:INFO:Importing libraries
2023-03-19 10:58:04,906:INFO:Copying training dataset
2023-03-19 10:58:04,963:INFO:Defining folds
2023-03-19 10:58:04,964:INFO:Declaring metric variables
2023-03-19 10:58:04,971:INFO:Importing untrained model
2023-03-19 10:58:04,978:INFO:Lasso Regression Imported succesfully
2023-03-19 10:58:04,994:INFO:Starting cross validation
2023-03-19 10:58:04,994:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:58:11,724:INFO:Calculating mean and std
2023-03-19 10:58:11,726:INFO:Creating metrics dataframe
2023-03-19 10:58:11,731:INFO:Uploading results into container
2023-03-19 10:58:11,732:INFO:Uploading model into container now
2023-03-19 10:58:11,732:INFO:create_model_container: 2
2023-03-19 10:58:11,732:INFO:master_model_container: 2
2023-03-19 10:58:11,734:INFO:display_container: 2
2023-03-19 10:58:11,734:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=1678,
      selection='cyclic', tol=0.0001, warm_start=False)
2023-03-19 10:58:11,734:INFO:create_model() succesfully completed......................................
2023-03-19 10:58:11,805:INFO:SubProcess create_model() end ==================================
2023-03-19 10:58:11,805:INFO:Creating metrics dataframe
2023-03-19 10:58:11,815:INFO:Initializing Ridge Regression
2023-03-19 10:58:11,815:INFO:Total runtime is 0.2349789301554362 minutes
2023-03-19 10:58:11,823:INFO:SubProcess create_model() called ==================================
2023-03-19 10:58:11,824:INFO:Initializing create_model()
2023-03-19 10:58:11,824:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:58:11,824:INFO:Checking exceptions
2023-03-19 10:58:11,824:INFO:Importing libraries
2023-03-19 10:58:11,824:INFO:Copying training dataset
2023-03-19 10:58:11,880:INFO:Defining folds
2023-03-19 10:58:11,881:INFO:Declaring metric variables
2023-03-19 10:58:11,887:INFO:Importing untrained model
2023-03-19 10:58:11,895:INFO:Ridge Regression Imported succesfully
2023-03-19 10:58:11,910:INFO:Starting cross validation
2023-03-19 10:58:11,911:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:58:13,103:INFO:Calculating mean and std
2023-03-19 10:58:13,106:INFO:Creating metrics dataframe
2023-03-19 10:58:13,117:INFO:Uploading results into container
2023-03-19 10:58:13,117:INFO:Uploading model into container now
2023-03-19 10:58:13,117:INFO:create_model_container: 3
2023-03-19 10:58:13,117:INFO:master_model_container: 3
2023-03-19 10:58:13,117:INFO:display_container: 2
2023-03-19 10:58:13,118:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=1678, solver='auto', tol=0.001)
2023-03-19 10:58:13,118:INFO:create_model() succesfully completed......................................
2023-03-19 10:58:13,186:INFO:SubProcess create_model() end ==================================
2023-03-19 10:58:13,186:INFO:Creating metrics dataframe
2023-03-19 10:58:13,195:INFO:Initializing Elastic Net
2023-03-19 10:58:13,196:INFO:Total runtime is 0.25799152851104734 minutes
2023-03-19 10:58:13,204:INFO:SubProcess create_model() called ==================================
2023-03-19 10:58:13,204:INFO:Initializing create_model()
2023-03-19 10:58:13,204:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:58:13,204:INFO:Checking exceptions
2023-03-19 10:58:13,204:INFO:Importing libraries
2023-03-19 10:58:13,204:INFO:Copying training dataset
2023-03-19 10:58:13,259:INFO:Defining folds
2023-03-19 10:58:13,259:INFO:Declaring metric variables
2023-03-19 10:58:13,266:INFO:Importing untrained model
2023-03-19 10:58:13,274:INFO:Elastic Net Imported succesfully
2023-03-19 10:58:13,289:INFO:Starting cross validation
2023-03-19 10:58:13,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:58:47,101:INFO:Calculating mean and std
2023-03-19 10:58:47,103:INFO:Creating metrics dataframe
2023-03-19 10:58:47,109:INFO:Uploading results into container
2023-03-19 10:58:47,110:INFO:Uploading model into container now
2023-03-19 10:58:47,110:INFO:create_model_container: 4
2023-03-19 10:58:47,110:INFO:master_model_container: 4
2023-03-19 10:58:47,110:INFO:display_container: 2
2023-03-19 10:58:47,110:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=1678, selection='cyclic', tol=0.0001, warm_start=False)
2023-03-19 10:58:47,110:INFO:create_model() succesfully completed......................................
2023-03-19 10:58:47,179:INFO:SubProcess create_model() end ==================================
2023-03-19 10:58:47,179:INFO:Creating metrics dataframe
2023-03-19 10:58:47,189:INFO:Initializing Least Angle Regression
2023-03-19 10:58:47,190:INFO:Total runtime is 0.8245628873507181 minutes
2023-03-19 10:58:47,197:INFO:SubProcess create_model() called ==================================
2023-03-19 10:58:47,198:INFO:Initializing create_model()
2023-03-19 10:58:47,198:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:58:47,198:INFO:Checking exceptions
2023-03-19 10:58:47,198:INFO:Importing libraries
2023-03-19 10:58:47,198:INFO:Copying training dataset
2023-03-19 10:58:47,255:INFO:Defining folds
2023-03-19 10:58:47,255:INFO:Declaring metric variables
2023-03-19 10:58:47,262:INFO:Importing untrained model
2023-03-19 10:58:47,269:INFO:Least Angle Regression Imported succesfully
2023-03-19 10:58:47,284:INFO:Starting cross validation
2023-03-19 10:58:47,285:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:58:49,179:INFO:Calculating mean and std
2023-03-19 10:58:49,180:INFO:Creating metrics dataframe
2023-03-19 10:58:49,184:INFO:Uploading results into container
2023-03-19 10:58:49,184:INFO:Uploading model into container now
2023-03-19 10:58:49,184:INFO:create_model_container: 5
2023-03-19 10:58:49,184:INFO:master_model_container: 5
2023-03-19 10:58:49,184:INFO:display_container: 2
2023-03-19 10:58:49,185:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=1678, verbose=False)
2023-03-19 10:58:49,185:INFO:create_model() succesfully completed......................................
2023-03-19 10:58:49,253:INFO:SubProcess create_model() end ==================================
2023-03-19 10:58:49,253:INFO:Creating metrics dataframe
2023-03-19 10:58:49,264:INFO:Initializing Lasso Least Angle Regression
2023-03-19 10:58:49,264:INFO:Total runtime is 0.8591201066970825 minutes
2023-03-19 10:58:49,272:INFO:SubProcess create_model() called ==================================
2023-03-19 10:58:49,272:INFO:Initializing create_model()
2023-03-19 10:58:49,272:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:58:49,272:INFO:Checking exceptions
2023-03-19 10:58:49,273:INFO:Importing libraries
2023-03-19 10:58:49,273:INFO:Copying training dataset
2023-03-19 10:58:49,327:INFO:Defining folds
2023-03-19 10:58:49,328:INFO:Declaring metric variables
2023-03-19 10:58:49,335:INFO:Importing untrained model
2023-03-19 10:58:49,341:INFO:Lasso Least Angle Regression Imported succesfully
2023-03-19 10:58:49,356:INFO:Starting cross validation
2023-03-19 10:58:49,356:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:58:51,038:INFO:Calculating mean and std
2023-03-19 10:58:51,039:INFO:Creating metrics dataframe
2023-03-19 10:58:51,048:INFO:Uploading results into container
2023-03-19 10:58:51,048:INFO:Uploading model into container now
2023-03-19 10:58:51,048:INFO:create_model_container: 6
2023-03-19 10:58:51,048:INFO:master_model_container: 6
2023-03-19 10:58:51,048:INFO:display_container: 2
2023-03-19 10:58:51,049:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=1678, verbose=False)
2023-03-19 10:58:51,049:INFO:create_model() succesfully completed......................................
2023-03-19 10:58:51,117:INFO:SubProcess create_model() end ==================================
2023-03-19 10:58:51,117:INFO:Creating metrics dataframe
2023-03-19 10:58:51,128:INFO:Initializing Orthogonal Matching Pursuit
2023-03-19 10:58:51,128:INFO:Total runtime is 0.890196414788564 minutes
2023-03-19 10:58:51,135:INFO:SubProcess create_model() called ==================================
2023-03-19 10:58:51,136:INFO:Initializing create_model()
2023-03-19 10:58:51,136:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:58:51,136:INFO:Checking exceptions
2023-03-19 10:58:51,136:INFO:Importing libraries
2023-03-19 10:58:51,136:INFO:Copying training dataset
2023-03-19 10:58:51,190:INFO:Defining folds
2023-03-19 10:58:51,190:INFO:Declaring metric variables
2023-03-19 10:58:51,197:INFO:Importing untrained model
2023-03-19 10:58:51,204:INFO:Orthogonal Matching Pursuit Imported succesfully
2023-03-19 10:58:51,219:INFO:Starting cross validation
2023-03-19 10:58:51,219:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:58:52,428:INFO:Calculating mean and std
2023-03-19 10:58:52,430:INFO:Creating metrics dataframe
2023-03-19 10:58:52,443:INFO:Uploading results into container
2023-03-19 10:58:52,443:INFO:Uploading model into container now
2023-03-19 10:58:52,444:INFO:create_model_container: 7
2023-03-19 10:58:52,444:INFO:master_model_container: 7
2023-03-19 10:58:52,444:INFO:display_container: 2
2023-03-19 10:58:52,445:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2023-03-19 10:58:52,445:INFO:create_model() succesfully completed......................................
2023-03-19 10:58:52,516:INFO:SubProcess create_model() end ==================================
2023-03-19 10:58:52,516:INFO:Creating metrics dataframe
2023-03-19 10:58:52,527:INFO:Initializing Bayesian Ridge
2023-03-19 10:58:52,527:INFO:Total runtime is 0.9135016798973083 minutes
2023-03-19 10:58:52,534:INFO:SubProcess create_model() called ==================================
2023-03-19 10:58:52,535:INFO:Initializing create_model()
2023-03-19 10:58:52,535:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:58:52,535:INFO:Checking exceptions
2023-03-19 10:58:52,535:INFO:Importing libraries
2023-03-19 10:58:52,535:INFO:Copying training dataset
2023-03-19 10:58:52,587:INFO:Defining folds
2023-03-19 10:58:52,587:INFO:Declaring metric variables
2023-03-19 10:58:52,594:INFO:Importing untrained model
2023-03-19 10:58:52,601:INFO:Bayesian Ridge Imported succesfully
2023-03-19 10:58:52,616:INFO:Starting cross validation
2023-03-19 10:58:52,617:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:59:10,473:INFO:Calculating mean and std
2023-03-19 10:59:10,476:INFO:Creating metrics dataframe
2023-03-19 10:59:10,491:INFO:Uploading results into container
2023-03-19 10:59:10,491:INFO:Uploading model into container now
2023-03-19 10:59:10,491:INFO:create_model_container: 8
2023-03-19 10:59:10,492:INFO:master_model_container: 8
2023-03-19 10:59:10,492:INFO:display_container: 2
2023-03-19 10:59:10,493:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2023-03-19 10:59:10,494:INFO:create_model() succesfully completed......................................
2023-03-19 10:59:10,567:INFO:SubProcess create_model() end ==================================
2023-03-19 10:59:10,567:INFO:Creating metrics dataframe
2023-03-19 10:59:10,578:INFO:Initializing Passive Aggressive Regressor
2023-03-19 10:59:10,578:INFO:Total runtime is 1.2143545468648274 minutes
2023-03-19 10:59:10,586:INFO:SubProcess create_model() called ==================================
2023-03-19 10:59:10,586:INFO:Initializing create_model()
2023-03-19 10:59:10,586:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:59:10,587:INFO:Checking exceptions
2023-03-19 10:59:10,587:INFO:Importing libraries
2023-03-19 10:59:10,587:INFO:Copying training dataset
2023-03-19 10:59:10,639:INFO:Defining folds
2023-03-19 10:59:10,640:INFO:Declaring metric variables
2023-03-19 10:59:10,647:INFO:Importing untrained model
2023-03-19 10:59:10,655:INFO:Passive Aggressive Regressor Imported succesfully
2023-03-19 10:59:10,669:INFO:Starting cross validation
2023-03-19 10:59:10,670:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 10:59:12,988:INFO:Calculating mean and std
2023-03-19 10:59:12,990:INFO:Creating metrics dataframe
2023-03-19 10:59:12,998:INFO:Uploading results into container
2023-03-19 10:59:12,998:INFO:Uploading model into container now
2023-03-19 10:59:12,998:INFO:create_model_container: 9
2023-03-19 10:59:12,998:INFO:master_model_container: 9
2023-03-19 10:59:12,998:INFO:display_container: 2
2023-03-19 10:59:12,999:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=1678, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-19 10:59:12,999:INFO:create_model() succesfully completed......................................
2023-03-19 10:59:13,064:INFO:SubProcess create_model() end ==================================
2023-03-19 10:59:13,064:INFO:Creating metrics dataframe
2023-03-19 10:59:13,075:INFO:Initializing Huber Regressor
2023-03-19 10:59:13,075:INFO:Total runtime is 1.255982764561971 minutes
2023-03-19 10:59:13,084:INFO:SubProcess create_model() called ==================================
2023-03-19 10:59:13,084:INFO:Initializing create_model()
2023-03-19 10:59:13,084:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 10:59:13,085:INFO:Checking exceptions
2023-03-19 10:59:13,085:INFO:Importing libraries
2023-03-19 10:59:13,085:INFO:Copying training dataset
2023-03-19 10:59:13,138:INFO:Defining folds
2023-03-19 10:59:13,138:INFO:Declaring metric variables
2023-03-19 10:59:13,145:INFO:Importing untrained model
2023-03-19 10:59:13,153:INFO:Huber Regressor Imported succesfully
2023-03-19 10:59:13,168:INFO:Starting cross validation
2023-03-19 10:59:13,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:00:44,323:INFO:Calculating mean and std
2023-03-19 11:00:44,326:INFO:Creating metrics dataframe
2023-03-19 11:00:44,336:INFO:Uploading results into container
2023-03-19 11:00:44,337:INFO:Uploading model into container now
2023-03-19 11:00:44,338:INFO:create_model_container: 10
2023-03-19 11:00:44,338:INFO:master_model_container: 10
2023-03-19 11:00:44,338:INFO:display_container: 2
2023-03-19 11:00:44,339:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-03-19 11:00:44,339:INFO:create_model() succesfully completed......................................
2023-03-19 11:00:44,419:INFO:SubProcess create_model() end ==================================
2023-03-19 11:00:44,419:INFO:Creating metrics dataframe
2023-03-19 11:00:44,431:INFO:Initializing K Neighbors Regressor
2023-03-19 11:00:44,431:INFO:Total runtime is 2.7785794417063396 minutes
2023-03-19 11:00:44,439:INFO:SubProcess create_model() called ==================================
2023-03-19 11:00:44,439:INFO:Initializing create_model()
2023-03-19 11:00:44,439:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 11:00:44,439:INFO:Checking exceptions
2023-03-19 11:00:44,440:INFO:Importing libraries
2023-03-19 11:00:44,440:INFO:Copying training dataset
2023-03-19 11:00:44,496:INFO:Defining folds
2023-03-19 11:00:44,497:INFO:Declaring metric variables
2023-03-19 11:00:44,504:INFO:Importing untrained model
2023-03-19 11:00:44,511:INFO:K Neighbors Regressor Imported succesfully
2023-03-19 11:00:44,525:INFO:Starting cross validation
2023-03-19 11:00:44,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:00:58,130:INFO:Calculating mean and std
2023-03-19 11:00:58,131:INFO:Creating metrics dataframe
2023-03-19 11:00:58,135:INFO:Uploading results into container
2023-03-19 11:00:58,136:INFO:Uploading model into container now
2023-03-19 11:00:58,136:INFO:create_model_container: 11
2023-03-19 11:00:58,136:INFO:master_model_container: 11
2023-03-19 11:00:58,136:INFO:display_container: 2
2023-03-19 11:00:58,136:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-03-19 11:00:58,136:INFO:create_model() succesfully completed......................................
2023-03-19 11:00:58,204:INFO:SubProcess create_model() end ==================================
2023-03-19 11:00:58,204:INFO:Creating metrics dataframe
2023-03-19 11:00:58,216:INFO:Initializing Decision Tree Regressor
2023-03-19 11:00:58,216:INFO:Total runtime is 3.0083240628242494 minutes
2023-03-19 11:00:58,225:INFO:SubProcess create_model() called ==================================
2023-03-19 11:00:58,225:INFO:Initializing create_model()
2023-03-19 11:00:58,226:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 11:00:58,226:INFO:Checking exceptions
2023-03-19 11:00:58,226:INFO:Importing libraries
2023-03-19 11:00:58,226:INFO:Copying training dataset
2023-03-19 11:00:58,276:INFO:Defining folds
2023-03-19 11:00:58,277:INFO:Declaring metric variables
2023-03-19 11:00:58,284:INFO:Importing untrained model
2023-03-19 11:00:58,290:INFO:Decision Tree Regressor Imported succesfully
2023-03-19 11:00:58,306:INFO:Starting cross validation
2023-03-19 11:00:58,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:01:07,067:INFO:Calculating mean and std
2023-03-19 11:01:07,067:INFO:Creating metrics dataframe
2023-03-19 11:01:07,071:INFO:Uploading results into container
2023-03-19 11:01:07,072:INFO:Uploading model into container now
2023-03-19 11:01:07,072:INFO:create_model_container: 12
2023-03-19 11:01:07,072:INFO:master_model_container: 12
2023-03-19 11:01:07,072:INFO:display_container: 2
2023-03-19 11:01:07,073:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=1678, splitter='best')
2023-03-19 11:01:07,073:INFO:create_model() succesfully completed......................................
2023-03-19 11:01:07,139:INFO:SubProcess create_model() end ==================================
2023-03-19 11:01:07,139:INFO:Creating metrics dataframe
2023-03-19 11:01:07,151:INFO:Initializing Random Forest Regressor
2023-03-19 11:01:07,151:INFO:Total runtime is 3.1572421193122864 minutes
2023-03-19 11:01:07,160:INFO:SubProcess create_model() called ==================================
2023-03-19 11:01:07,160:INFO:Initializing create_model()
2023-03-19 11:01:07,160:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 11:01:07,161:INFO:Checking exceptions
2023-03-19 11:01:07,161:INFO:Importing libraries
2023-03-19 11:01:07,161:INFO:Copying training dataset
2023-03-19 11:01:07,215:INFO:Defining folds
2023-03-19 11:01:07,215:INFO:Declaring metric variables
2023-03-19 11:01:07,222:INFO:Importing untrained model
2023-03-19 11:01:07,230:INFO:Random Forest Regressor Imported succesfully
2023-03-19 11:01:07,245:INFO:Starting cross validation
2023-03-19 11:01:07,245:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:06:01,187:WARNING:create_model() for rf raised an exception or returned all 0.0, trying without fit_kwargs:
2023-03-19 11:06:01,191:WARNING:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-03-19 11:06:01,192:INFO:Initializing create_model()
2023-03-19 11:06:01,192:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 11:06:01,192:INFO:Checking exceptions
2023-03-19 11:06:01,192:INFO:Importing libraries
2023-03-19 11:06:01,192:INFO:Copying training dataset
2023-03-19 11:06:01,256:INFO:Defining folds
2023-03-19 11:06:01,256:INFO:Declaring metric variables
2023-03-19 11:06:01,264:INFO:Importing untrained model
2023-03-19 11:06:01,271:INFO:Random Forest Regressor Imported succesfully
2023-03-19 11:06:01,286:INFO:Starting cross validation
2023-03-19 11:06:01,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:06:03,555:ERROR:create_model() for rf raised an exception or returned all 0.0:
2023-03-19 11:06:03,556:ERROR:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-03-19 11:06:03,556:INFO:Initializing Extra Trees Regressor
2023-03-19 11:06:03,556:INFO:Total runtime is 8.097316416104634 minutes
2023-03-19 11:06:03,563:INFO:SubProcess create_model() called ==================================
2023-03-19 11:06:03,563:INFO:Initializing create_model()
2023-03-19 11:06:03,563:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 11:06:03,563:INFO:Checking exceptions
2023-03-19 11:06:03,564:INFO:Importing libraries
2023-03-19 11:06:03,564:INFO:Copying training dataset
2023-03-19 11:06:03,624:INFO:Defining folds
2023-03-19 11:06:03,625:INFO:Declaring metric variables
2023-03-19 11:06:03,633:INFO:Importing untrained model
2023-03-19 11:06:03,641:INFO:Extra Trees Regressor Imported succesfully
2023-03-19 11:06:03,655:INFO:Starting cross validation
2023-03-19 11:06:03,656:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:06:09,274:WARNING:create_model() for et raised an exception or returned all 0.0, trying without fit_kwargs:
2023-03-19 11:06:09,275:WARNING:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-03-19 11:06:09,275:INFO:Initializing create_model()
2023-03-19 11:06:09,275:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 11:06:09,275:INFO:Checking exceptions
2023-03-19 11:06:09,275:INFO:Importing libraries
2023-03-19 11:06:09,276:INFO:Copying training dataset
2023-03-19 11:06:09,336:INFO:Defining folds
2023-03-19 11:06:09,336:INFO:Declaring metric variables
2023-03-19 11:06:09,343:INFO:Importing untrained model
2023-03-19 11:06:09,350:INFO:Extra Trees Regressor Imported succesfully
2023-03-19 11:06:09,365:INFO:Starting cross validation
2023-03-19 11:06:09,366:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:06:19,619:ERROR:create_model() for et raised an exception or returned all 0.0:
2023-03-19 11:06:19,620:ERROR:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-03-19 11:06:19,620:INFO:Initializing AdaBoost Regressor
2023-03-19 11:06:19,621:INFO:Total runtime is 8.365081159273783 minutes
2023-03-19 11:06:19,628:INFO:SubProcess create_model() called ==================================
2023-03-19 11:06:19,628:INFO:Initializing create_model()
2023-03-19 11:06:19,628:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 11:06:19,629:INFO:Checking exceptions
2023-03-19 11:06:19,629:INFO:Importing libraries
2023-03-19 11:06:19,629:INFO:Copying training dataset
2023-03-19 11:06:19,688:INFO:Defining folds
2023-03-19 11:06:19,689:INFO:Declaring metric variables
2023-03-19 11:06:19,697:INFO:Importing untrained model
2023-03-19 11:06:19,704:INFO:AdaBoost Regressor Imported succesfully
2023-03-19 11:06:19,721:INFO:Starting cross validation
2023-03-19 11:06:19,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:06:23,843:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2023-03-19 11:06:23,844:WARNING:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-03-19 11:06:23,844:INFO:Initializing create_model()
2023-03-19 11:06:23,844:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 11:06:23,844:INFO:Checking exceptions
2023-03-19 11:06:23,844:INFO:Importing libraries
2023-03-19 11:06:23,844:INFO:Copying training dataset
2023-03-19 11:06:23,906:INFO:Defining folds
2023-03-19 11:06:23,907:INFO:Declaring metric variables
2023-03-19 11:06:23,914:INFO:Importing untrained model
2023-03-19 11:06:23,922:INFO:AdaBoost Regressor Imported succesfully
2023-03-19 11:06:23,937:INFO:Starting cross validation
2023-03-19 11:06:23,938:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:06:36,869:ERROR:create_model() for ada raised an exception or returned all 0.0:
2023-03-19 11:06:36,870:ERROR:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 439, in result
    self._condition.wait(timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\threading.py", line 302, in wait
    waiter.acquire()
KeyboardInterrupt

2023-03-19 11:06:36,876:INFO:Initializing Gradient Boosting Regressor
2023-03-19 11:06:36,876:INFO:Total runtime is 8.652662583192189 minutes
2023-03-19 11:06:36,883:INFO:SubProcess create_model() called ==================================
2023-03-19 11:06:36,883:INFO:Initializing create_model()
2023-03-19 11:06:36,884:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE83B1A100>, return_train_score=False, kwargs={})
2023-03-19 11:06:36,885:INFO:Checking exceptions
2023-03-19 11:06:36,885:INFO:Importing libraries
2023-03-19 11:06:36,885:INFO:Copying training dataset
2023-03-19 11:06:36,942:INFO:Defining folds
2023-03-19 11:06:36,942:INFO:Declaring metric variables
2023-03-19 11:06:36,949:INFO:Importing untrained model
2023-03-19 11:06:36,956:INFO:Gradient Boosting Regressor Imported succesfully
2023-03-19 11:06:36,969:INFO:Starting cross validation
2023-03-19 11:06:36,970:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:08:20,114:INFO:PyCaret Supervised Module
2023-03-19 11:08:20,115:INFO:ML Usecase: regression
2023-03-19 11:08:20,115:INFO:version 2.3.10
2023-03-19 11:08:20,115:INFO:Initializing setup()
2023-03-19 11:08:20,115:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['locality'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['area', 'bathroom_num', 'bedroom_num'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 11:08:20,115:INFO:Checking environment
2023-03-19 11:08:20,115:INFO:python_version: 3.8.16
2023-03-19 11:08:20,115:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 11:08:20,115:INFO:machine: AMD64
2023-03-19 11:08:20,115:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 11:08:20,117:INFO:Memory: svmem(total=17092505600, available=10786119680, percent=36.9, used=6306385920, free=10786119680)
2023-03-19 11:08:20,117:INFO:Physical Core: 6
2023-03-19 11:08:20,118:INFO:Logical Core: 6
2023-03-19 11:08:20,118:INFO:Checking libraries
2023-03-19 11:08:20,118:INFO:pd==1.5.3
2023-03-19 11:08:20,118:INFO:numpy==1.20.3
2023-03-19 11:08:20,118:INFO:sklearn==0.23.2
2023-03-19 11:08:20,118:INFO:lightgbm==3.3.5
2023-03-19 11:08:20,119:WARNING:catboost not found
2023-03-19 11:08:20,120:WARNING:xgboost not found
2023-03-19 11:08:20,120:INFO:mlflow==2.1.1
2023-03-19 11:08:20,120:INFO:Checking Exceptions
2023-03-19 11:08:20,120:INFO:Declaring global variables
2023-03-19 11:08:20,120:INFO:USI: 76c6
2023-03-19 11:08:20,120:INFO:pycaret_globals: {'master_model_container', 'dashboard_logger', 'fix_imbalance_method_param', 'iterative_imputation_iters_param', 'display_container', 'logging_param', 'fold_groups_param', 'y_test', 'fix_imbalance_param', 'seed', 'fold_groups_param_full', 'n_jobs_param', '_gpu_n_jobs_param', 'transform_target_param', 'imputation_regressor', '_all_models_internal', 'stratify_param', 'fold_generator', 'transform_target_method_param', 'fold_shuffle_param', 'X_train', 'y', 'prep_pipe', 'imputation_classifier', 'exp_name_log', 'experiment__', '_all_models', '_ml_usecase', 'gpu_param', 'data_before_preprocess', 'target_param', 'create_model_container', 'fold_param', 'y_train', 'USI', 'pycaret_globals', '_internal_pipeline', 'X', '_available_plots', 'X_test', '_all_metrics', 'html_param', 'log_plots_param'}
2023-03-19 11:08:20,120:INFO:Preparing display monitor
2023-03-19 11:08:20,120:INFO:Preparing display monitor
2023-03-19 11:08:20,129:INFO:Importing libraries
2023-03-19 11:08:20,129:INFO:Copying data for preprocessing
2023-03-19 11:08:20,136:INFO:Declaring preprocessing parameters
2023-03-19 11:08:20,139:INFO:Creating preprocessing pipeline
2023-03-19 11:08:20,146:INFO:Preprocessing pipeline created successfully
2023-03-19 11:08:20,146:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-19 11:08:20,146:INFO:Creating global containers
2023-03-19 11:08:20,147:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-19 11:08:23,478:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 11:08:23,480:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 11:08:23,587:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 11:08:23,588:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 11:08:23,589:INFO:Creating grid variables
2023-03-19 11:08:23,601:INFO:create_model_container: 0
2023-03-19 11:08:23,601:INFO:master_model_container: 0
2023-03-19 11:08:23,601:INFO:display_container: 1
2023-03-19 11:08:23,607:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                                                  random_state_quantile=5439,
                                                  target='price')),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-19 11:08:23,607:INFO:setup() succesfully completed......................................
2023-03-19 11:10:14,625:INFO:Initializing compare_models()
2023-03-19 11:10:14,625:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 11:10:14,625:INFO:Checking exceptions
2023-03-19 11:10:14,625:INFO:Preparing display monitor
2023-03-19 11:10:14,626:INFO:Preparing display monitor
2023-03-19 11:10:14,649:INFO:Initializing Linear Regression
2023-03-19 11:10:14,649:INFO:Total runtime is 0.0 minutes
2023-03-19 11:10:14,657:INFO:SubProcess create_model() called ==================================
2023-03-19 11:10:14,658:INFO:Initializing create_model()
2023-03-19 11:10:14,658:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE0D048820>, return_train_score=False, kwargs={})
2023-03-19 11:10:14,658:INFO:Checking exceptions
2023-03-19 11:10:14,658:INFO:Importing libraries
2023-03-19 11:10:14,658:INFO:Copying training dataset
2023-03-19 11:10:14,711:INFO:Defining folds
2023-03-19 11:10:14,712:INFO:Declaring metric variables
2023-03-19 11:10:14,718:INFO:Importing untrained model
2023-03-19 11:10:14,727:INFO:Linear Regression Imported succesfully
2023-03-19 11:10:14,741:INFO:Starting cross validation
2023-03-19 11:10:14,745:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:10:21,680:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2023-03-19 11:10:21,684:WARNING:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 439, in result
    self._condition.wait(timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\threading.py", line 302, in wait
    waiter.acquire()
KeyboardInterrupt

2023-03-19 11:10:21,684:INFO:Initializing create_model()
2023-03-19 11:10:21,684:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE0D048820>, return_train_score=False, kwargs={})
2023-03-19 11:10:21,685:INFO:Checking exceptions
2023-03-19 11:10:21,685:INFO:Importing libraries
2023-03-19 11:10:21,685:INFO:Copying training dataset
2023-03-19 11:10:21,743:INFO:Defining folds
2023-03-19 11:10:21,743:INFO:Declaring metric variables
2023-03-19 11:10:21,751:INFO:Importing untrained model
2023-03-19 11:10:21,759:INFO:Linear Regression Imported succesfully
2023-03-19 11:10:21,774:INFO:Starting cross validation
2023-03-19 11:10:21,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:10:28,431:INFO:Calculating mean and std
2023-03-19 11:10:28,433:INFO:Creating metrics dataframe
2023-03-19 11:10:28,443:INFO:Uploading results into container
2023-03-19 11:10:28,443:INFO:Uploading model into container now
2023-03-19 11:10:28,444:INFO:create_model_container: 1
2023-03-19 11:10:28,444:INFO:master_model_container: 1
2023-03-19 11:10:28,444:INFO:display_container: 2
2023-03-19 11:10:28,445:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2023-03-19 11:10:28,445:INFO:create_model() succesfully completed......................................
2023-03-19 11:10:28,522:INFO:SubProcess create_model() end ==================================
2023-03-19 11:10:28,522:INFO:Creating metrics dataframe
2023-03-19 11:10:28,531:INFO:Initializing Lasso Regression
2023-03-19 11:10:28,531:INFO:Total runtime is 0.23136971394220987 minutes
2023-03-19 11:10:28,539:INFO:SubProcess create_model() called ==================================
2023-03-19 11:10:28,540:INFO:Initializing create_model()
2023-03-19 11:10:28,540:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE0D048820>, return_train_score=False, kwargs={})
2023-03-19 11:10:28,540:INFO:Checking exceptions
2023-03-19 11:10:28,540:INFO:Importing libraries
2023-03-19 11:10:28,540:INFO:Copying training dataset
2023-03-19 11:10:28,598:INFO:Defining folds
2023-03-19 11:10:28,598:INFO:Declaring metric variables
2023-03-19 11:10:28,605:INFO:Importing untrained model
2023-03-19 11:10:28,613:INFO:Lasso Regression Imported succesfully
2023-03-19 11:10:28,628:INFO:Starting cross validation
2023-03-19 11:10:28,629:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:10:35,976:INFO:Calculating mean and std
2023-03-19 11:10:35,977:INFO:Creating metrics dataframe
2023-03-19 11:10:35,981:INFO:Uploading results into container
2023-03-19 11:10:35,981:INFO:Uploading model into container now
2023-03-19 11:10:35,982:INFO:create_model_container: 2
2023-03-19 11:10:35,982:INFO:master_model_container: 2
2023-03-19 11:10:35,982:INFO:display_container: 2
2023-03-19 11:10:35,982:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=5439,
      selection='cyclic', tol=0.0001, warm_start=False)
2023-03-19 11:10:35,982:INFO:create_model() succesfully completed......................................
2023-03-19 11:10:36,056:INFO:SubProcess create_model() end ==================================
2023-03-19 11:10:36,056:INFO:Creating metrics dataframe
2023-03-19 11:10:36,066:INFO:Initializing Ridge Regression
2023-03-19 11:10:36,067:INFO:Total runtime is 0.3569785316785177 minutes
2023-03-19 11:10:36,075:INFO:SubProcess create_model() called ==================================
2023-03-19 11:10:36,075:INFO:Initializing create_model()
2023-03-19 11:10:36,075:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002BE0D048820>, return_train_score=False, kwargs={})
2023-03-19 11:10:36,075:INFO:Checking exceptions
2023-03-19 11:10:36,075:INFO:Importing libraries
2023-03-19 11:10:36,075:INFO:Copying training dataset
2023-03-19 11:10:36,127:INFO:Defining folds
2023-03-19 11:10:36,127:INFO:Declaring metric variables
2023-03-19 11:10:36,135:INFO:Importing untrained model
2023-03-19 11:10:36,144:INFO:Ridge Regression Imported succesfully
2023-03-19 11:10:36,159:INFO:Starting cross validation
2023-03-19 11:10:36,160:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:18:37,875:INFO:PyCaret Supervised Module
2023-03-19 11:18:37,876:INFO:ML Usecase: regression
2023-03-19 11:18:37,876:INFO:version 2.3.10
2023-03-19 11:18:37,876:INFO:Initializing setup()
2023-03-19 11:18:37,876:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['locality'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['area', 'bathroom_num', 'bedroom_num'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 11:18:37,877:INFO:Checking environment
2023-03-19 11:18:37,877:INFO:python_version: 3.8.16
2023-03-19 11:18:37,877:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 11:18:37,877:INFO:machine: AMD64
2023-03-19 11:18:37,877:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 11:18:37,879:INFO:Memory: svmem(total=17092505600, available=10584813568, percent=38.1, used=6507692032, free=10584813568)
2023-03-19 11:18:37,879:INFO:Physical Core: 6
2023-03-19 11:18:37,879:INFO:Logical Core: 6
2023-03-19 11:18:37,879:INFO:Checking libraries
2023-03-19 11:18:37,880:INFO:pd==1.5.3
2023-03-19 11:18:37,880:INFO:numpy==1.20.3
2023-03-19 11:18:37,880:INFO:sklearn==0.23.2
2023-03-19 11:18:37,880:INFO:lightgbm==3.3.5
2023-03-19 11:18:37,881:WARNING:catboost not found
2023-03-19 11:18:37,882:WARNING:xgboost not found
2023-03-19 11:18:37,882:INFO:mlflow==2.1.1
2023-03-19 11:18:37,882:INFO:Checking Exceptions
2023-03-19 11:18:37,882:INFO:Declaring global variables
2023-03-19 11:18:37,882:INFO:USI: 7e06
2023-03-19 11:18:37,882:INFO:pycaret_globals: {'target_param', 'y_test', 'X_train', 'master_model_container', 'USI', 'imputation_regressor', '_internal_pipeline', 'dashboard_logger', 'fold_param', 'pycaret_globals', 'data_before_preprocess', 'iterative_imputation_iters_param', 'X_test', 'fix_imbalance_method_param', 'y', 'create_model_container', 'fold_groups_param_full', 'html_param', 'X', '_gpu_n_jobs_param', '_all_models', 'display_container', 'logging_param', 'exp_name_log', '_all_models_internal', 'seed', 'prep_pipe', 'log_plots_param', 'experiment__', '_all_metrics', '_available_plots', 'y_train', 'gpu_param', 'fold_shuffle_param', 'n_jobs_param', 'fix_imbalance_param', 'fold_groups_param', 'imputation_classifier', '_ml_usecase', 'transform_target_method_param', 'stratify_param', 'transform_target_param', 'fold_generator'}
2023-03-19 11:18:37,882:INFO:Preparing display monitor
2023-03-19 11:18:37,883:INFO:Preparing display monitor
2023-03-19 11:18:37,893:INFO:Importing libraries
2023-03-19 11:18:37,893:INFO:Copying data for preprocessing
2023-03-19 11:18:37,902:INFO:Declaring preprocessing parameters
2023-03-19 11:18:37,905:INFO:Creating preprocessing pipeline
2023-03-19 11:18:37,913:INFO:Preprocessing pipeline created successfully
2023-03-19 11:18:37,913:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-19 11:18:37,914:INFO:Creating global containers
2023-03-19 11:18:37,915:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-19 11:18:51,339:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 11:18:51,340:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 11:18:51,454:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 11:18:51,455:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 11:18:51,455:INFO:Creating grid variables
2023-03-19 11:18:51,469:INFO:create_model_container: 0
2023-03-19 11:18:51,469:INFO:master_model_container: 0
2023-03-19 11:18:51,469:INFO:display_container: 1
2023-03-19 11:18:51,475:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                                                  random_state_quantile=6587,
                                                  target='price')),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-19 11:18:51,475:INFO:setup() succesfully completed......................................
2023-03-19 11:18:56,797:INFO:Initializing compare_models()
2023-03-19 11:18:56,797:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 11:18:56,797:INFO:Checking exceptions
2023-03-19 11:18:56,797:INFO:Preparing display monitor
2023-03-19 11:18:56,797:INFO:Preparing display monitor
2023-03-19 11:18:56,821:INFO:Initializing Linear Regression
2023-03-19 11:18:56,821:INFO:Total runtime is 0.0 minutes
2023-03-19 11:18:56,831:INFO:SubProcess create_model() called ==================================
2023-03-19 11:18:56,831:INFO:Initializing create_model()
2023-03-19 11:18:56,831:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:18:56,831:INFO:Checking exceptions
2023-03-19 11:18:56,831:INFO:Importing libraries
2023-03-19 11:18:56,832:INFO:Copying training dataset
2023-03-19 11:18:56,891:INFO:Defining folds
2023-03-19 11:18:56,891:INFO:Declaring metric variables
2023-03-19 11:18:56,900:INFO:Importing untrained model
2023-03-19 11:18:56,907:INFO:Linear Regression Imported succesfully
2023-03-19 11:18:56,921:INFO:Starting cross validation
2023-03-19 11:18:56,927:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:19:03,787:INFO:Calculating mean and std
2023-03-19 11:19:03,789:INFO:Creating metrics dataframe
2023-03-19 11:19:03,797:INFO:Uploading results into container
2023-03-19 11:19:03,798:INFO:Uploading model into container now
2023-03-19 11:19:03,798:INFO:create_model_container: 1
2023-03-19 11:19:03,798:INFO:master_model_container: 1
2023-03-19 11:19:03,798:INFO:display_container: 2
2023-03-19 11:19:03,798:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2023-03-19 11:19:03,798:INFO:create_model() succesfully completed......................................
2023-03-19 11:19:03,910:INFO:SubProcess create_model() end ==================================
2023-03-19 11:19:03,910:INFO:Creating metrics dataframe
2023-03-19 11:19:03,920:INFO:Initializing Lasso Regression
2023-03-19 11:19:03,920:INFO:Total runtime is 0.11831033229827881 minutes
2023-03-19 11:19:03,929:INFO:SubProcess create_model() called ==================================
2023-03-19 11:19:03,929:INFO:Initializing create_model()
2023-03-19 11:19:03,929:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:19:03,929:INFO:Checking exceptions
2023-03-19 11:19:03,929:INFO:Importing libraries
2023-03-19 11:19:03,929:INFO:Copying training dataset
2023-03-19 11:19:03,992:INFO:Defining folds
2023-03-19 11:19:03,993:INFO:Declaring metric variables
2023-03-19 11:19:04,000:INFO:Importing untrained model
2023-03-19 11:19:04,008:INFO:Lasso Regression Imported succesfully
2023-03-19 11:19:04,023:INFO:Starting cross validation
2023-03-19 11:19:04,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:19:12,459:INFO:Calculating mean and std
2023-03-19 11:19:12,462:INFO:Creating metrics dataframe
2023-03-19 11:19:12,472:INFO:Uploading results into container
2023-03-19 11:19:12,472:INFO:Uploading model into container now
2023-03-19 11:19:12,472:INFO:create_model_container: 2
2023-03-19 11:19:12,472:INFO:master_model_container: 2
2023-03-19 11:19:12,472:INFO:display_container: 2
2023-03-19 11:19:12,473:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=6587,
      selection='cyclic', tol=0.0001, warm_start=False)
2023-03-19 11:19:12,473:INFO:create_model() succesfully completed......................................
2023-03-19 11:19:12,578:INFO:SubProcess create_model() end ==================================
2023-03-19 11:19:12,578:INFO:Creating metrics dataframe
2023-03-19 11:19:12,588:INFO:Initializing Ridge Regression
2023-03-19 11:19:12,588:INFO:Total runtime is 0.26277915239334104 minutes
2023-03-19 11:19:12,596:INFO:SubProcess create_model() called ==================================
2023-03-19 11:19:12,596:INFO:Initializing create_model()
2023-03-19 11:19:12,596:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:19:12,597:INFO:Checking exceptions
2023-03-19 11:19:12,597:INFO:Importing libraries
2023-03-19 11:19:12,597:INFO:Copying training dataset
2023-03-19 11:19:12,653:INFO:Defining folds
2023-03-19 11:19:12,653:INFO:Declaring metric variables
2023-03-19 11:19:12,660:INFO:Importing untrained model
2023-03-19 11:19:12,668:INFO:Ridge Regression Imported succesfully
2023-03-19 11:19:12,684:INFO:Starting cross validation
2023-03-19 11:19:12,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:19:13,879:INFO:Calculating mean and std
2023-03-19 11:19:13,883:INFO:Creating metrics dataframe
2023-03-19 11:19:13,900:INFO:Uploading results into container
2023-03-19 11:19:13,900:INFO:Uploading model into container now
2023-03-19 11:19:13,900:INFO:create_model_container: 3
2023-03-19 11:19:13,900:INFO:master_model_container: 3
2023-03-19 11:19:13,901:INFO:display_container: 2
2023-03-19 11:19:13,902:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=6587, solver='auto', tol=0.001)
2023-03-19 11:19:13,902:INFO:create_model() succesfully completed......................................
2023-03-19 11:19:14,017:INFO:SubProcess create_model() end ==================================
2023-03-19 11:19:14,017:INFO:Creating metrics dataframe
2023-03-19 11:19:14,028:INFO:Initializing Elastic Net
2023-03-19 11:19:14,028:INFO:Total runtime is 0.28677503267923987 minutes
2023-03-19 11:19:14,037:INFO:SubProcess create_model() called ==================================
2023-03-19 11:19:14,038:INFO:Initializing create_model()
2023-03-19 11:19:14,038:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:19:14,038:INFO:Checking exceptions
2023-03-19 11:19:14,038:INFO:Importing libraries
2023-03-19 11:19:14,038:INFO:Copying training dataset
2023-03-19 11:19:14,096:INFO:Defining folds
2023-03-19 11:19:14,096:INFO:Declaring metric variables
2023-03-19 11:19:14,104:INFO:Importing untrained model
2023-03-19 11:19:14,112:INFO:Elastic Net Imported succesfully
2023-03-19 11:19:14,127:INFO:Starting cross validation
2023-03-19 11:19:14,127:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:19:15,614:INFO:Calculating mean and std
2023-03-19 11:19:15,617:INFO:Creating metrics dataframe
2023-03-19 11:19:15,629:INFO:Uploading results into container
2023-03-19 11:19:15,629:INFO:Uploading model into container now
2023-03-19 11:19:15,629:INFO:create_model_container: 4
2023-03-19 11:19:15,629:INFO:master_model_container: 4
2023-03-19 11:19:15,629:INFO:display_container: 2
2023-03-19 11:19:15,630:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=6587, selection='cyclic', tol=0.0001, warm_start=False)
2023-03-19 11:19:15,630:INFO:create_model() succesfully completed......................................
2023-03-19 11:19:15,730:INFO:SubProcess create_model() end ==================================
2023-03-19 11:19:15,730:INFO:Creating metrics dataframe
2023-03-19 11:19:15,742:INFO:Initializing Least Angle Regression
2023-03-19 11:19:15,742:INFO:Total runtime is 0.3153466939926147 minutes
2023-03-19 11:19:15,755:INFO:SubProcess create_model() called ==================================
2023-03-19 11:19:15,755:INFO:Initializing create_model()
2023-03-19 11:19:15,755:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:19:15,756:INFO:Checking exceptions
2023-03-19 11:19:15,756:INFO:Importing libraries
2023-03-19 11:19:15,756:INFO:Copying training dataset
2023-03-19 11:19:15,813:INFO:Defining folds
2023-03-19 11:19:15,813:INFO:Declaring metric variables
2023-03-19 11:19:15,821:INFO:Importing untrained model
2023-03-19 11:19:15,831:INFO:Least Angle Regression Imported succesfully
2023-03-19 11:19:15,849:INFO:Starting cross validation
2023-03-19 11:19:15,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:19:18,084:INFO:Calculating mean and std
2023-03-19 11:19:18,086:INFO:Creating metrics dataframe
2023-03-19 11:19:18,091:INFO:Uploading results into container
2023-03-19 11:19:18,091:INFO:Uploading model into container now
2023-03-19 11:19:18,091:INFO:create_model_container: 5
2023-03-19 11:19:18,091:INFO:master_model_container: 5
2023-03-19 11:19:18,091:INFO:display_container: 2
2023-03-19 11:19:18,092:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=6587, verbose=False)
2023-03-19 11:19:18,092:INFO:create_model() succesfully completed......................................
2023-03-19 11:19:18,195:INFO:SubProcess create_model() end ==================================
2023-03-19 11:19:18,195:INFO:Creating metrics dataframe
2023-03-19 11:19:18,206:INFO:Initializing Lasso Least Angle Regression
2023-03-19 11:19:18,206:INFO:Total runtime is 0.35640838543574016 minutes
2023-03-19 11:19:18,214:INFO:SubProcess create_model() called ==================================
2023-03-19 11:19:18,214:INFO:Initializing create_model()
2023-03-19 11:19:18,215:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:19:18,215:INFO:Checking exceptions
2023-03-19 11:19:18,215:INFO:Importing libraries
2023-03-19 11:19:18,215:INFO:Copying training dataset
2023-03-19 11:19:18,269:INFO:Defining folds
2023-03-19 11:19:18,269:INFO:Declaring metric variables
2023-03-19 11:19:18,277:INFO:Importing untrained model
2023-03-19 11:19:18,284:INFO:Lasso Least Angle Regression Imported succesfully
2023-03-19 11:19:18,299:INFO:Starting cross validation
2023-03-19 11:19:18,300:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:19:20,412:INFO:Calculating mean and std
2023-03-19 11:19:20,415:INFO:Creating metrics dataframe
2023-03-19 11:19:20,424:INFO:Uploading results into container
2023-03-19 11:19:20,424:INFO:Uploading model into container now
2023-03-19 11:19:20,425:INFO:create_model_container: 6
2023-03-19 11:19:20,425:INFO:master_model_container: 6
2023-03-19 11:19:20,425:INFO:display_container: 2
2023-03-19 11:19:20,425:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=6587, verbose=False)
2023-03-19 11:19:20,425:INFO:create_model() succesfully completed......................................
2023-03-19 11:19:20,526:INFO:SubProcess create_model() end ==================================
2023-03-19 11:19:20,526:INFO:Creating metrics dataframe
2023-03-19 11:19:20,536:INFO:Initializing Orthogonal Matching Pursuit
2023-03-19 11:19:20,537:INFO:Total runtime is 0.39525533517201744 minutes
2023-03-19 11:19:20,544:INFO:SubProcess create_model() called ==================================
2023-03-19 11:19:20,545:INFO:Initializing create_model()
2023-03-19 11:19:20,545:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:19:20,545:INFO:Checking exceptions
2023-03-19 11:19:20,545:INFO:Importing libraries
2023-03-19 11:19:20,545:INFO:Copying training dataset
2023-03-19 11:19:20,598:INFO:Defining folds
2023-03-19 11:19:20,598:INFO:Declaring metric variables
2023-03-19 11:19:20,605:INFO:Importing untrained model
2023-03-19 11:19:20,613:INFO:Orthogonal Matching Pursuit Imported succesfully
2023-03-19 11:19:20,629:INFO:Starting cross validation
2023-03-19 11:19:20,629:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:19:21,835:INFO:Calculating mean and std
2023-03-19 11:19:21,837:INFO:Creating metrics dataframe
2023-03-19 11:19:21,847:INFO:Uploading results into container
2023-03-19 11:19:21,847:INFO:Uploading model into container now
2023-03-19 11:19:21,848:INFO:create_model_container: 7
2023-03-19 11:19:21,848:INFO:master_model_container: 7
2023-03-19 11:19:21,848:INFO:display_container: 2
2023-03-19 11:19:21,848:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2023-03-19 11:19:21,849:INFO:create_model() succesfully completed......................................
2023-03-19 11:19:21,952:INFO:SubProcess create_model() end ==================================
2023-03-19 11:19:21,952:INFO:Creating metrics dataframe
2023-03-19 11:19:21,963:INFO:Initializing Bayesian Ridge
2023-03-19 11:19:21,963:INFO:Total runtime is 0.4190308332443238 minutes
2023-03-19 11:19:21,970:INFO:SubProcess create_model() called ==================================
2023-03-19 11:19:21,971:INFO:Initializing create_model()
2023-03-19 11:19:21,971:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:19:21,971:INFO:Checking exceptions
2023-03-19 11:19:21,971:INFO:Importing libraries
2023-03-19 11:19:21,971:INFO:Copying training dataset
2023-03-19 11:19:22,027:INFO:Defining folds
2023-03-19 11:19:22,027:INFO:Declaring metric variables
2023-03-19 11:19:22,034:INFO:Importing untrained model
2023-03-19 11:19:22,042:INFO:Bayesian Ridge Imported succesfully
2023-03-19 11:19:22,056:INFO:Starting cross validation
2023-03-19 11:19:22,057:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:19:40,130:INFO:Calculating mean and std
2023-03-19 11:19:40,131:INFO:Creating metrics dataframe
2023-03-19 11:19:40,135:INFO:Uploading results into container
2023-03-19 11:19:40,135:INFO:Uploading model into container now
2023-03-19 11:19:40,135:INFO:create_model_container: 8
2023-03-19 11:19:40,135:INFO:master_model_container: 8
2023-03-19 11:19:40,135:INFO:display_container: 2
2023-03-19 11:19:40,135:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2023-03-19 11:19:40,135:INFO:create_model() succesfully completed......................................
2023-03-19 11:19:40,237:INFO:SubProcess create_model() end ==================================
2023-03-19 11:19:40,237:INFO:Creating metrics dataframe
2023-03-19 11:19:40,250:INFO:Initializing Passive Aggressive Regressor
2023-03-19 11:19:40,251:INFO:Total runtime is 0.7238302111625672 minutes
2023-03-19 11:19:40,259:INFO:SubProcess create_model() called ==================================
2023-03-19 11:19:40,259:INFO:Initializing create_model()
2023-03-19 11:19:40,259:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:19:40,259:INFO:Checking exceptions
2023-03-19 11:19:40,259:INFO:Importing libraries
2023-03-19 11:19:40,259:INFO:Copying training dataset
2023-03-19 11:19:40,315:INFO:Defining folds
2023-03-19 11:19:40,315:INFO:Declaring metric variables
2023-03-19 11:19:40,323:INFO:Importing untrained model
2023-03-19 11:19:40,330:INFO:Passive Aggressive Regressor Imported succesfully
2023-03-19 11:19:40,344:INFO:Starting cross validation
2023-03-19 11:19:40,345:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:21:39,397:INFO:Calculating mean and std
2023-03-19 11:21:39,399:INFO:Creating metrics dataframe
2023-03-19 11:21:39,406:INFO:Uploading results into container
2023-03-19 11:21:39,406:INFO:Uploading model into container now
2023-03-19 11:21:39,407:INFO:create_model_container: 9
2023-03-19 11:21:39,407:INFO:master_model_container: 9
2023-03-19 11:21:39,407:INFO:display_container: 2
2023-03-19 11:21:39,407:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=6587, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-19 11:21:39,407:INFO:create_model() succesfully completed......................................
2023-03-19 11:21:39,511:INFO:SubProcess create_model() end ==================================
2023-03-19 11:21:39,511:INFO:Creating metrics dataframe
2023-03-19 11:21:39,523:INFO:Initializing Huber Regressor
2023-03-19 11:21:39,523:INFO:Total runtime is 2.711694904168447 minutes
2023-03-19 11:21:39,531:INFO:SubProcess create_model() called ==================================
2023-03-19 11:21:39,531:INFO:Initializing create_model()
2023-03-19 11:21:39,531:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:21:39,531:INFO:Checking exceptions
2023-03-19 11:21:39,532:INFO:Importing libraries
2023-03-19 11:21:39,532:INFO:Copying training dataset
2023-03-19 11:21:39,588:INFO:Defining folds
2023-03-19 11:21:39,589:INFO:Declaring metric variables
2023-03-19 11:21:39,596:INFO:Importing untrained model
2023-03-19 11:21:39,603:INFO:Huber Regressor Imported succesfully
2023-03-19 11:21:39,619:INFO:Starting cross validation
2023-03-19 11:21:39,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:23:11,229:INFO:Calculating mean and std
2023-03-19 11:23:11,231:INFO:Creating metrics dataframe
2023-03-19 11:23:11,240:INFO:Uploading results into container
2023-03-19 11:23:11,240:INFO:Uploading model into container now
2023-03-19 11:23:11,241:INFO:create_model_container: 10
2023-03-19 11:23:11,241:INFO:master_model_container: 10
2023-03-19 11:23:11,241:INFO:display_container: 2
2023-03-19 11:23:11,241:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-03-19 11:23:11,241:INFO:create_model() succesfully completed......................................
2023-03-19 11:23:11,341:INFO:SubProcess create_model() end ==================================
2023-03-19 11:23:11,341:INFO:Creating metrics dataframe
2023-03-19 11:23:11,353:INFO:Initializing K Neighbors Regressor
2023-03-19 11:23:11,353:INFO:Total runtime is 4.242200593153636 minutes
2023-03-19 11:23:11,360:INFO:SubProcess create_model() called ==================================
2023-03-19 11:23:11,361:INFO:Initializing create_model()
2023-03-19 11:23:11,361:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:23:11,361:INFO:Checking exceptions
2023-03-19 11:23:11,361:INFO:Importing libraries
2023-03-19 11:23:11,361:INFO:Copying training dataset
2023-03-19 11:23:11,416:INFO:Defining folds
2023-03-19 11:23:11,417:INFO:Declaring metric variables
2023-03-19 11:23:11,424:INFO:Importing untrained model
2023-03-19 11:23:11,432:INFO:K Neighbors Regressor Imported succesfully
2023-03-19 11:23:11,448:INFO:Starting cross validation
2023-03-19 11:23:11,449:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:23:37,619:INFO:Calculating mean and std
2023-03-19 11:23:37,624:INFO:Creating metrics dataframe
2023-03-19 11:23:37,642:INFO:Uploading results into container
2023-03-19 11:23:37,642:INFO:Uploading model into container now
2023-03-19 11:23:37,642:INFO:create_model_container: 11
2023-03-19 11:23:37,642:INFO:master_model_container: 11
2023-03-19 11:23:37,643:INFO:display_container: 2
2023-03-19 11:23:37,643:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-03-19 11:23:37,643:INFO:create_model() succesfully completed......................................
2023-03-19 11:23:37,754:INFO:SubProcess create_model() end ==================================
2023-03-19 11:23:37,755:INFO:Creating metrics dataframe
2023-03-19 11:23:37,767:INFO:Initializing Decision Tree Regressor
2023-03-19 11:23:37,767:INFO:Total runtime is 4.682432619730632 minutes
2023-03-19 11:23:37,775:INFO:SubProcess create_model() called ==================================
2023-03-19 11:23:37,775:INFO:Initializing create_model()
2023-03-19 11:23:37,775:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:23:37,775:INFO:Checking exceptions
2023-03-19 11:23:37,776:INFO:Importing libraries
2023-03-19 11:23:37,776:INFO:Copying training dataset
2023-03-19 11:23:37,831:INFO:Defining folds
2023-03-19 11:23:37,832:INFO:Declaring metric variables
2023-03-19 11:23:37,839:INFO:Importing untrained model
2023-03-19 11:23:37,846:INFO:Decision Tree Regressor Imported succesfully
2023-03-19 11:23:37,864:INFO:Starting cross validation
2023-03-19 11:23:37,865:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:23:42,621:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2023-03-19 11:23:42,626:WARNING:Traceback (most recent call last):
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "f:\UtsavStudy\Conda\envs\utsav\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\concurrent\futures\_base.py", line 439, in result
    self._condition.wait(timeout)
  File "f:\UtsavStudy\Conda\envs\utsav\lib\threading.py", line 302, in wait
    waiter.acquire()
KeyboardInterrupt

2023-03-19 11:23:42,626:INFO:Initializing create_model()
2023-03-19 11:23:42,626:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:23:42,626:INFO:Checking exceptions
2023-03-19 11:23:42,626:INFO:Importing libraries
2023-03-19 11:23:42,626:INFO:Copying training dataset
2023-03-19 11:23:42,689:INFO:Defining folds
2023-03-19 11:23:42,689:INFO:Declaring metric variables
2023-03-19 11:23:42,696:INFO:Importing untrained model
2023-03-19 11:23:42,705:INFO:Decision Tree Regressor Imported succesfully
2023-03-19 11:23:42,724:INFO:Starting cross validation
2023-03-19 11:23:42,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:23:55,927:INFO:Calculating mean and std
2023-03-19 11:23:55,928:INFO:Creating metrics dataframe
2023-03-19 11:23:55,933:INFO:Uploading results into container
2023-03-19 11:23:55,933:INFO:Uploading model into container now
2023-03-19 11:23:55,933:INFO:create_model_container: 12
2023-03-19 11:23:55,933:INFO:master_model_container: 12
2023-03-19 11:23:55,934:INFO:display_container: 2
2023-03-19 11:23:55,934:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=6587, splitter='best')
2023-03-19 11:23:55,934:INFO:create_model() succesfully completed......................................
2023-03-19 11:23:56,042:INFO:SubProcess create_model() end ==================================
2023-03-19 11:23:56,042:INFO:Creating metrics dataframe
2023-03-19 11:23:56,056:INFO:Initializing Random Forest Regressor
2023-03-19 11:23:56,056:INFO:Total runtime is 4.987251742680868 minutes
2023-03-19 11:23:56,064:INFO:SubProcess create_model() called ==================================
2023-03-19 11:23:56,064:INFO:Initializing create_model()
2023-03-19 11:23:56,064:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002A74ECAAEE0>, return_train_score=False, kwargs={})
2023-03-19 11:23:56,064:INFO:Checking exceptions
2023-03-19 11:23:56,065:INFO:Importing libraries
2023-03-19 11:23:56,065:INFO:Copying training dataset
2023-03-19 11:23:56,123:INFO:Defining folds
2023-03-19 11:23:56,123:INFO:Declaring metric variables
2023-03-19 11:23:56,132:INFO:Importing untrained model
2023-03-19 11:23:56,140:INFO:Random Forest Regressor Imported succesfully
2023-03-19 11:23:56,157:INFO:Starting cross validation
2023-03-19 11:23:56,157:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:28:04,362:INFO:PyCaret Supervised Module
2023-03-19 11:28:04,363:INFO:ML Usecase: regression
2023-03-19 11:28:04,363:INFO:version 2.3.10
2023-03-19 11:28:04,363:INFO:Initializing setup()
2023-03-19 11:28:04,363:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['locality'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['area', 'bathroom_num', 'bedroom_num'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 11:28:04,363:INFO:Checking environment
2023-03-19 11:28:04,363:INFO:python_version: 3.8.16
2023-03-19 11:28:04,363:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 11:28:04,363:INFO:machine: AMD64
2023-03-19 11:28:04,363:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 11:28:04,365:INFO:Memory: svmem(total=17092505600, available=10624532480, percent=37.8, used=6467973120, free=10624532480)
2023-03-19 11:28:04,365:INFO:Physical Core: 6
2023-03-19 11:28:04,365:INFO:Logical Core: 6
2023-03-19 11:28:04,366:INFO:Checking libraries
2023-03-19 11:28:04,366:INFO:pd==1.5.3
2023-03-19 11:28:04,366:INFO:numpy==1.20.3
2023-03-19 11:28:04,366:INFO:sklearn==0.23.2
2023-03-19 11:28:04,366:INFO:lightgbm==3.3.5
2023-03-19 11:28:04,367:WARNING:catboost not found
2023-03-19 11:28:04,368:WARNING:xgboost not found
2023-03-19 11:28:04,368:INFO:mlflow==2.1.1
2023-03-19 11:28:04,368:INFO:Checking Exceptions
2023-03-19 11:28:04,368:INFO:Declaring global variables
2023-03-19 11:28:04,368:INFO:USI: 4651
2023-03-19 11:28:04,368:INFO:pycaret_globals: {'master_model_container', 'create_model_container', 'seed', 'display_container', '_ml_usecase', 'y_test', 'USI', 'logging_param', 'pycaret_globals', 'html_param', 'data_before_preprocess', 'stratify_param', 'target_param', 'fold_param', 'log_plots_param', '_all_models', 'fold_shuffle_param', 'X_train', '_internal_pipeline', 'imputation_classifier', 'gpu_param', 'prep_pipe', 'fix_imbalance_param', '_available_plots', 'iterative_imputation_iters_param', 'fold_generator', '_gpu_n_jobs_param', 'imputation_regressor', 'transform_target_method_param', 'X_test', 'fold_groups_param_full', 'fix_imbalance_method_param', 'exp_name_log', 'X', '_all_metrics', 'y_train', 'experiment__', 'y', 'fold_groups_param', '_all_models_internal', 'dashboard_logger', 'transform_target_param', 'n_jobs_param'}
2023-03-19 11:28:04,368:INFO:Preparing display monitor
2023-03-19 11:28:04,368:INFO:Preparing display monitor
2023-03-19 11:28:04,377:INFO:Importing libraries
2023-03-19 11:28:04,378:INFO:Copying data for preprocessing
2023-03-19 11:28:04,385:INFO:Declaring preprocessing parameters
2023-03-19 11:28:04,388:INFO:Creating preprocessing pipeline
2023-03-19 11:28:04,394:INFO:Preprocessing pipeline created successfully
2023-03-19 11:28:04,395:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-19 11:28:04,395:INFO:Creating global containers
2023-03-19 11:28:04,396:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-19 11:28:07,947:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 11:28:07,948:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 11:28:08,058:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 11:28:08,059:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 11:28:08,059:INFO:Creating grid variables
2023-03-19 11:28:08,074:INFO:create_model_container: 0
2023-03-19 11:28:08,074:INFO:master_model_container: 0
2023-03-19 11:28:08,074:INFO:display_container: 1
2023-03-19 11:28:08,079:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                                                  random_state_quantile=3314,
                                                  target='price')),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-19 11:28:08,079:INFO:setup() succesfully completed......................................
2023-03-19 11:29:16,361:INFO:Initializing compare_models()
2023-03-19 11:29:16,361:INFO:compare_models(include=['lr', 'dt', 'gbr'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 11:29:16,362:INFO:Checking exceptions
2023-03-19 11:29:16,362:INFO:Preparing display monitor
2023-03-19 11:29:16,362:INFO:Preparing display monitor
2023-03-19 11:29:16,388:INFO:Initializing Linear Regression
2023-03-19 11:29:16,388:INFO:Total runtime is 0.0 minutes
2023-03-19 11:29:16,397:INFO:SubProcess create_model() called ==================================
2023-03-19 11:29:16,397:INFO:Initializing create_model()
2023-03-19 11:29:16,397:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000020548EA2520>, return_train_score=False, kwargs={})
2023-03-19 11:29:16,398:INFO:Checking exceptions
2023-03-19 11:29:16,398:INFO:Importing libraries
2023-03-19 11:29:16,398:INFO:Copying training dataset
2023-03-19 11:29:16,460:INFO:Defining folds
2023-03-19 11:29:16,461:INFO:Declaring metric variables
2023-03-19 11:29:16,470:INFO:Importing untrained model
2023-03-19 11:29:16,477:INFO:Linear Regression Imported succesfully
2023-03-19 11:29:16,491:INFO:Starting cross validation
2023-03-19 11:29:16,496:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:29:23,525:INFO:Calculating mean and std
2023-03-19 11:29:23,527:INFO:Creating metrics dataframe
2023-03-19 11:29:23,535:INFO:Uploading results into container
2023-03-19 11:29:23,536:INFO:Uploading model into container now
2023-03-19 11:29:23,536:INFO:create_model_container: 1
2023-03-19 11:29:23,536:INFO:master_model_container: 1
2023-03-19 11:29:23,536:INFO:display_container: 2
2023-03-19 11:29:23,536:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2023-03-19 11:29:23,536:INFO:create_model() succesfully completed......................................
2023-03-19 11:29:23,607:INFO:SubProcess create_model() end ==================================
2023-03-19 11:29:23,608:INFO:Creating metrics dataframe
2023-03-19 11:29:23,617:INFO:Initializing Decision Tree Regressor
2023-03-19 11:29:23,618:INFO:Total runtime is 0.12050687472025554 minutes
2023-03-19 11:29:23,626:INFO:SubProcess create_model() called ==================================
2023-03-19 11:29:23,626:INFO:Initializing create_model()
2023-03-19 11:29:23,626:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000020548EA2520>, return_train_score=False, kwargs={})
2023-03-19 11:29:23,626:INFO:Checking exceptions
2023-03-19 11:29:23,626:INFO:Importing libraries
2023-03-19 11:29:23,626:INFO:Copying training dataset
2023-03-19 11:29:23,687:INFO:Defining folds
2023-03-19 11:29:23,687:INFO:Declaring metric variables
2023-03-19 11:29:23,695:INFO:Importing untrained model
2023-03-19 11:29:23,703:INFO:Decision Tree Regressor Imported succesfully
2023-03-19 11:29:23,718:INFO:Starting cross validation
2023-03-19 11:29:23,718:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:29:32,537:INFO:Calculating mean and std
2023-03-19 11:29:32,540:INFO:Creating metrics dataframe
2023-03-19 11:29:32,554:INFO:Uploading results into container
2023-03-19 11:29:32,555:INFO:Uploading model into container now
2023-03-19 11:29:32,555:INFO:create_model_container: 2
2023-03-19 11:29:32,555:INFO:master_model_container: 2
2023-03-19 11:29:32,555:INFO:display_container: 2
2023-03-19 11:29:32,556:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=3314, splitter='best')
2023-03-19 11:29:32,556:INFO:create_model() succesfully completed......................................
2023-03-19 11:29:32,629:INFO:SubProcess create_model() end ==================================
2023-03-19 11:29:32,629:INFO:Creating metrics dataframe
2023-03-19 11:29:32,641:INFO:Initializing Gradient Boosting Regressor
2023-03-19 11:29:32,642:INFO:Total runtime is 0.2709021965662638 minutes
2023-03-19 11:29:32,651:INFO:SubProcess create_model() called ==================================
2023-03-19 11:29:32,651:INFO:Initializing create_model()
2023-03-19 11:29:32,652:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000020548EA2520>, return_train_score=False, kwargs={})
2023-03-19 11:29:32,652:INFO:Checking exceptions
2023-03-19 11:29:32,652:INFO:Importing libraries
2023-03-19 11:29:32,652:INFO:Copying training dataset
2023-03-19 11:29:32,715:INFO:Defining folds
2023-03-19 11:29:32,715:INFO:Declaring metric variables
2023-03-19 11:29:32,722:INFO:Importing untrained model
2023-03-19 11:29:32,730:INFO:Gradient Boosting Regressor Imported succesfully
2023-03-19 11:29:32,746:INFO:Starting cross validation
2023-03-19 11:29:32,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:30:13,288:INFO:Calculating mean and std
2023-03-19 11:30:13,290:INFO:Creating metrics dataframe
2023-03-19 11:30:13,298:INFO:Uploading results into container
2023-03-19 11:30:13,298:INFO:Uploading model into container now
2023-03-19 11:30:13,298:INFO:create_model_container: 3
2023-03-19 11:30:13,298:INFO:master_model_container: 3
2023-03-19 11:30:13,298:INFO:display_container: 2
2023-03-19 11:30:13,300:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-19 11:30:13,300:INFO:create_model() succesfully completed......................................
2023-03-19 11:30:13,368:INFO:SubProcess create_model() end ==================================
2023-03-19 11:30:13,368:INFO:Creating metrics dataframe
2023-03-19 11:30:13,396:INFO:Initializing create_model()
2023-03-19 11:30:13,396:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-03-19 11:30:13,396:INFO:Checking exceptions
2023-03-19 11:30:13,396:INFO:Importing libraries
2023-03-19 11:30:13,396:INFO:Copying training dataset
2023-03-19 11:30:13,450:INFO:Defining folds
2023-03-19 11:30:13,451:INFO:Declaring metric variables
2023-03-19 11:30:13,451:INFO:Importing untrained model
2023-03-19 11:30:13,451:INFO:Declaring custom model
2023-03-19 11:30:13,452:INFO:Gradient Boosting Regressor Imported succesfully
2023-03-19 11:30:13,452:INFO:Cross validation set to False
2023-03-19 11:30:13,452:INFO:Fitting Model
2023-03-19 11:30:34,834:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-19 11:30:34,834:INFO:create_models() succesfully completed......................................
2023-03-19 11:30:34,915:INFO:create_model_container: 3
2023-03-19 11:30:34,916:INFO:master_model_container: 3
2023-03-19 11:30:34,916:INFO:display_container: 2
2023-03-19 11:30:34,916:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-19 11:30:34,916:INFO:compare_models() succesfully completed......................................
2023-03-19 11:33:58,966:INFO:Initializing evaluate_model()
2023-03-19 11:33:58,966:INFO:evaluate_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-19 11:33:59,109:INFO:Initializing plot_model()
2023-03-19 11:33:59,110:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 11:33:59,110:INFO:Checking exceptions
2023-03-19 11:33:59,111:INFO:Preparing display monitor
2023-03-19 11:33:59,116:INFO:Preloading libraries
2023-03-19 11:33:59,130:INFO:Copying training dataset
2023-03-19 11:33:59,217:INFO:Copying test dataset
2023-03-19 11:33:59,243:INFO:Plot type: parameter
2023-03-19 11:33:59,251:INFO:Visual Rendered Successfully
2023-03-19 11:33:59,319:INFO:plot_model() succesfully completed......................................
2023-03-19 11:34:35,048:INFO:Initializing plot_model()
2023-03-19 11:34:35,048:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 11:34:35,049:INFO:Checking exceptions
2023-03-19 11:34:35,050:INFO:Preparing display monitor
2023-03-19 11:34:35,053:INFO:Preloading libraries
2023-03-19 11:34:35,064:INFO:Copying training dataset
2023-03-19 11:34:35,119:INFO:Copying test dataset
2023-03-19 11:34:35,143:INFO:Plot type: error
2023-03-19 11:34:35,269:INFO:Fitting Model
2023-03-19 11:34:35,270:INFO:Scoring test/hold-out set
2023-03-19 11:34:36,267:INFO:Visual Rendered Successfully
2023-03-19 11:34:36,331:INFO:plot_model() succesfully completed......................................
2023-03-19 11:34:58,354:INFO:Initializing plot_model()
2023-03-19 11:34:58,355:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=learning, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 11:34:58,355:INFO:Checking exceptions
2023-03-19 11:34:58,356:INFO:Preparing display monitor
2023-03-19 11:34:58,360:INFO:Preloading libraries
2023-03-19 11:34:58,369:INFO:Copying training dataset
2023-03-19 11:34:58,425:INFO:Copying test dataset
2023-03-19 11:34:58,448:INFO:Plot type: learning
2023-03-19 11:34:58,502:INFO:Fitting Model
2023-03-19 11:36:01,524:INFO:Initializing evaluate_model()
2023-03-19 11:36:01,524:INFO:evaluate_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-19 11:36:01,533:INFO:Initializing plot_model()
2023-03-19 11:36:01,533:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 11:36:01,533:INFO:Checking exceptions
2023-03-19 11:36:01,534:INFO:Preparing display monitor
2023-03-19 11:36:01,538:INFO:Preloading libraries
2023-03-19 11:36:01,546:INFO:Copying training dataset
2023-03-19 11:36:01,617:INFO:Copying test dataset
2023-03-19 11:36:01,647:INFO:Plot type: parameter
2023-03-19 11:36:01,654:INFO:Visual Rendered Successfully
2023-03-19 11:36:01,738:INFO:plot_model() succesfully completed......................................
2023-03-19 11:36:01,767:INFO:Initializing plot_model()
2023-03-19 11:36:01,767:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 11:36:01,767:INFO:Checking exceptions
2023-03-19 11:36:01,769:INFO:Preparing display monitor
2023-03-19 11:36:01,772:INFO:Preloading libraries
2023-03-19 11:36:01,781:INFO:Copying training dataset
2023-03-19 11:36:01,832:INFO:Copying test dataset
2023-03-19 11:36:01,853:INFO:Plot type: error
2023-03-19 11:36:01,856:INFO:Fitting Model
2023-03-19 11:36:01,857:INFO:Scoring test/hold-out set
2023-03-19 11:36:02,259:INFO:Visual Rendered Successfully
2023-03-19 11:36:02,343:INFO:plot_model() succesfully completed......................................
2023-03-19 11:36:28,658:INFO:Initializing evaluate_model()
2023-03-19 11:36:28,658:INFO:evaluate_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-19 11:36:28,667:INFO:Initializing plot_model()
2023-03-19 11:36:28,668:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 11:36:28,668:INFO:Checking exceptions
2023-03-19 11:36:28,669:INFO:Preparing display monitor
2023-03-19 11:36:28,674:INFO:Preloading libraries
2023-03-19 11:36:28,683:INFO:Copying training dataset
2023-03-19 11:36:28,748:INFO:Copying test dataset
2023-03-19 11:36:28,792:INFO:Plot type: parameter
2023-03-19 11:36:28,806:INFO:Visual Rendered Successfully
2023-03-19 11:36:28,907:INFO:plot_model() succesfully completed......................................
2023-03-19 11:37:32,339:INFO:Initializing plot_model()
2023-03-19 11:37:32,340:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2023-03-19 11:37:32,340:INFO:Checking exceptions
2023-03-19 11:37:32,340:INFO:Preparing display monitor
2023-03-19 11:37:32,344:INFO:Preloading libraries
2023-03-19 11:37:32,353:INFO:Copying training dataset
2023-03-19 11:37:32,407:INFO:Copying test dataset
2023-03-19 11:37:32,431:INFO:Plot type: feature
2023-03-19 11:37:32,435:WARNING:No coef_ found. Trying feature_importances_
2023-03-19 11:37:32,606:INFO:Visual Rendered Successfully
2023-03-19 11:37:32,700:INFO:plot_model() succesfully completed......................................
2023-03-19 11:37:51,454:INFO:Initializing plot_model()
2023-03-19 11:37:51,454:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=feature_all, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 11:37:51,454:INFO:Checking exceptions
2023-03-19 11:37:51,455:INFO:Preparing display monitor
2023-03-19 11:37:51,460:INFO:Preloading libraries
2023-03-19 11:37:51,469:INFO:Copying training dataset
2023-03-19 11:37:51,525:INFO:Copying test dataset
2023-03-19 11:37:51,551:INFO:Plot type: feature_all
2023-03-19 11:37:51,554:WARNING:No coef_ found. Trying feature_importances_
2023-03-19 11:37:57,722:INFO:Visual Rendered Successfully
2023-03-19 11:37:57,889:INFO:plot_model() succesfully completed......................................
2023-03-19 11:38:14,945:INFO:Initializing plot_model()
2023-03-19 11:38:14,945:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 11:38:14,945:INFO:Checking exceptions
2023-03-19 11:38:14,947:INFO:Preparing display monitor
2023-03-19 11:38:14,950:INFO:Preloading libraries
2023-03-19 11:38:14,958:INFO:Copying training dataset
2023-03-19 11:38:15,018:INFO:Copying test dataset
2023-03-19 11:38:15,046:INFO:Plot type: error
2023-03-19 11:38:15,050:INFO:Fitting Model
2023-03-19 11:38:15,050:INFO:Scoring test/hold-out set
2023-03-19 11:38:15,481:INFO:Visual Rendered Successfully
2023-03-19 11:38:15,578:INFO:plot_model() succesfully completed......................................
2023-03-19 11:38:37,594:INFO:Initializing predict_model()
2023-03-19 11:38:37,594:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=3314, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-19 11:38:37,595:INFO:Checking exceptions
2023-03-19 11:38:37,595:INFO:Preloading libraries
2023-03-19 11:38:37,595:INFO:Preparing display monitor
2023-03-19 11:43:19,912:INFO:Initializing compare_models()
2023-03-19 11:43:19,912:INFO:compare_models(include=['rf', 'dt', 'gbr'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 11:43:19,912:INFO:Checking exceptions
2023-03-19 11:43:19,912:INFO:Preparing display monitor
2023-03-19 11:43:19,912:INFO:Preparing display monitor
2023-03-19 11:43:19,937:INFO:Initializing Random Forest Regressor
2023-03-19 11:43:19,937:INFO:Total runtime is 0.0 minutes
2023-03-19 11:43:19,945:INFO:SubProcess create_model() called ==================================
2023-03-19 11:43:19,945:INFO:Initializing create_model()
2023-03-19 11:43:19,946:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002054C893BB0>, return_train_score=False, kwargs={})
2023-03-19 11:43:19,946:INFO:Checking exceptions
2023-03-19 11:43:19,946:INFO:Importing libraries
2023-03-19 11:43:19,946:INFO:Copying training dataset
2023-03-19 11:43:20,003:INFO:Defining folds
2023-03-19 11:43:20,003:INFO:Declaring metric variables
2023-03-19 11:43:20,015:INFO:Importing untrained model
2023-03-19 11:43:20,023:INFO:Random Forest Regressor Imported succesfully
2023-03-19 11:43:20,039:INFO:Starting cross validation
2023-03-19 11:43:20,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:47:32,234:INFO:PyCaret Supervised Module
2023-03-19 11:47:32,234:INFO:ML Usecase: regression
2023-03-19 11:47:32,234:INFO:version 2.3.10
2023-03-19 11:47:32,234:INFO:Initializing setup()
2023-03-19 11:47:32,234:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['locality'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['area', 'bathroom_num', 'bedroom_num'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 11:47:32,235:INFO:Checking environment
2023-03-19 11:47:32,235:INFO:python_version: 3.8.16
2023-03-19 11:47:32,235:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 11:47:32,235:INFO:machine: AMD64
2023-03-19 11:47:32,235:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 11:47:32,237:INFO:Memory: svmem(total=17092505600, available=10664869888, percent=37.6, used=6427635712, free=10664869888)
2023-03-19 11:47:32,237:INFO:Physical Core: 6
2023-03-19 11:47:32,237:INFO:Logical Core: 6
2023-03-19 11:47:32,238:INFO:Checking libraries
2023-03-19 11:47:32,238:INFO:pd==1.5.3
2023-03-19 11:47:32,238:INFO:numpy==1.20.3
2023-03-19 11:47:32,238:INFO:sklearn==0.23.2
2023-03-19 11:47:32,238:INFO:lightgbm==3.3.5
2023-03-19 11:47:32,239:WARNING:catboost not found
2023-03-19 11:47:32,240:WARNING:xgboost not found
2023-03-19 11:47:32,240:INFO:mlflow==2.1.1
2023-03-19 11:47:32,240:INFO:Checking Exceptions
2023-03-19 11:47:32,240:INFO:Declaring global variables
2023-03-19 11:47:32,240:INFO:USI: a559
2023-03-19 11:47:32,240:INFO:pycaret_globals: {'_gpu_n_jobs_param', 'fold_param', 'exp_name_log', 'fix_imbalance_method_param', '_all_models', 'y_test', '_internal_pipeline', 'target_param', 'fold_shuffle_param', '_all_models_internal', 'X_test', 'USI', 'dashboard_logger', 'master_model_container', 'fold_groups_param', 'data_before_preprocess', '_all_metrics', 'y_train', 'gpu_param', 'transform_target_method_param', 'experiment__', 'n_jobs_param', 'display_container', 'iterative_imputation_iters_param', 'X_train', 'seed', 'create_model_container', 'fix_imbalance_param', '_ml_usecase', 'imputation_classifier', 'logging_param', 'html_param', 'X', '_available_plots', 'imputation_regressor', 'y', 'stratify_param', 'fold_generator', 'log_plots_param', 'transform_target_param', 'pycaret_globals', 'prep_pipe', 'fold_groups_param_full'}
2023-03-19 11:47:32,240:INFO:Preparing display monitor
2023-03-19 11:47:32,240:INFO:Preparing display monitor
2023-03-19 11:47:32,249:INFO:Importing libraries
2023-03-19 11:47:32,250:INFO:Copying data for preprocessing
2023-03-19 11:47:32,257:INFO:Declaring preprocessing parameters
2023-03-19 11:47:32,260:INFO:Creating preprocessing pipeline
2023-03-19 11:47:32,267:INFO:Preprocessing pipeline created successfully
2023-03-19 11:47:32,267:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-19 11:47:32,267:INFO:Creating global containers
2023-03-19 11:47:32,268:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-19 11:47:35,526:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 11:47:35,527:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 11:47:35,637:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 11:47:35,638:WARNING:Couldn't import catboost.CatBoostRegressor
2023-03-19 11:47:35,638:INFO:Creating grid variables
2023-03-19 11:47:35,652:INFO:create_model_container: 0
2023-03-19 11:47:35,652:INFO:master_model_container: 0
2023-03-19 11:47:35,652:INFO:display_container: 1
2023-03-19 11:47:35,658:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                                                  random_state_quantile=4278,
                                                  target='price')),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-19 11:47:35,658:INFO:setup() succesfully completed......................................
2023-03-19 11:47:45,973:INFO:Initializing compare_models()
2023-03-19 11:47:45,973:INFO:compare_models(include=['huber', 'dt', 'gbr'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 11:47:45,973:INFO:Checking exceptions
2023-03-19 11:47:45,973:INFO:Preparing display monitor
2023-03-19 11:47:45,973:INFO:Preparing display monitor
2023-03-19 11:47:46,000:INFO:Initializing Huber Regressor
2023-03-19 11:47:46,000:INFO:Total runtime is 0.0 minutes
2023-03-19 11:47:46,009:INFO:SubProcess create_model() called ==================================
2023-03-19 11:47:46,010:INFO:Initializing create_model()
2023-03-19 11:47:46,010:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001BB14DFA0A0>, return_train_score=False, kwargs={})
2023-03-19 11:47:46,010:INFO:Checking exceptions
2023-03-19 11:47:46,010:INFO:Importing libraries
2023-03-19 11:47:46,010:INFO:Copying training dataset
2023-03-19 11:47:46,089:INFO:Defining folds
2023-03-19 11:47:46,089:INFO:Declaring metric variables
2023-03-19 11:47:46,098:INFO:Importing untrained model
2023-03-19 11:47:46,108:INFO:Huber Regressor Imported succesfully
2023-03-19 11:47:46,129:INFO:Starting cross validation
2023-03-19 11:47:46,134:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:49:21,616:INFO:Calculating mean and std
2023-03-19 11:49:21,619:INFO:Creating metrics dataframe
2023-03-19 11:49:21,642:INFO:Uploading results into container
2023-03-19 11:49:21,642:INFO:Uploading model into container now
2023-03-19 11:49:21,642:INFO:create_model_container: 1
2023-03-19 11:49:21,642:INFO:master_model_container: 1
2023-03-19 11:49:21,642:INFO:display_container: 2
2023-03-19 11:49:21,643:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-03-19 11:49:21,643:INFO:create_model() succesfully completed......................................
2023-03-19 11:49:21,723:INFO:SubProcess create_model() end ==================================
2023-03-19 11:49:21,723:INFO:Creating metrics dataframe
2023-03-19 11:49:21,732:INFO:Initializing Decision Tree Regressor
2023-03-19 11:49:21,732:INFO:Total runtime is 1.5955269614855447 minutes
2023-03-19 11:49:21,739:INFO:SubProcess create_model() called ==================================
2023-03-19 11:49:21,739:INFO:Initializing create_model()
2023-03-19 11:49:21,739:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001BB14DFA0A0>, return_train_score=False, kwargs={})
2023-03-19 11:49:21,740:INFO:Checking exceptions
2023-03-19 11:49:21,740:INFO:Importing libraries
2023-03-19 11:49:21,740:INFO:Copying training dataset
2023-03-19 11:49:21,794:INFO:Defining folds
2023-03-19 11:49:21,795:INFO:Declaring metric variables
2023-03-19 11:49:21,801:INFO:Importing untrained model
2023-03-19 11:49:21,808:INFO:Decision Tree Regressor Imported succesfully
2023-03-19 11:49:21,824:INFO:Starting cross validation
2023-03-19 11:49:21,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:49:30,432:INFO:Calculating mean and std
2023-03-19 11:49:30,434:INFO:Creating metrics dataframe
2023-03-19 11:49:30,442:INFO:Uploading results into container
2023-03-19 11:49:30,443:INFO:Uploading model into container now
2023-03-19 11:49:30,443:INFO:create_model_container: 2
2023-03-19 11:49:30,443:INFO:master_model_container: 2
2023-03-19 11:49:30,443:INFO:display_container: 2
2023-03-19 11:49:30,444:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=4278, splitter='best')
2023-03-19 11:49:30,444:INFO:create_model() succesfully completed......................................
2023-03-19 11:49:30,514:INFO:SubProcess create_model() end ==================================
2023-03-19 11:49:30,514:INFO:Creating metrics dataframe
2023-03-19 11:49:30,524:INFO:Initializing Gradient Boosting Regressor
2023-03-19 11:49:30,524:INFO:Total runtime is 1.7420590837796528 minutes
2023-03-19 11:49:30,532:INFO:SubProcess create_model() called ==================================
2023-03-19 11:49:30,533:INFO:Initializing create_model()
2023-03-19 11:49:30,533:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001BB14DFA0A0>, return_train_score=False, kwargs={})
2023-03-19 11:49:30,533:INFO:Checking exceptions
2023-03-19 11:49:30,533:INFO:Importing libraries
2023-03-19 11:49:30,533:INFO:Copying training dataset
2023-03-19 11:49:30,587:INFO:Defining folds
2023-03-19 11:49:30,587:INFO:Declaring metric variables
2023-03-19 11:49:30,595:INFO:Importing untrained model
2023-03-19 11:49:30,602:INFO:Gradient Boosting Regressor Imported succesfully
2023-03-19 11:49:30,617:INFO:Starting cross validation
2023-03-19 11:49:30,618:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:50:10,171:INFO:Calculating mean and std
2023-03-19 11:50:10,173:INFO:Creating metrics dataframe
2023-03-19 11:50:10,181:INFO:Uploading results into container
2023-03-19 11:50:10,182:INFO:Uploading model into container now
2023-03-19 11:50:10,182:INFO:create_model_container: 3
2023-03-19 11:50:10,182:INFO:master_model_container: 3
2023-03-19 11:50:10,182:INFO:display_container: 2
2023-03-19 11:50:10,183:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=4278, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-19 11:50:10,183:INFO:create_model() succesfully completed......................................
2023-03-19 11:50:10,254:INFO:SubProcess create_model() end ==================================
2023-03-19 11:50:10,254:INFO:Creating metrics dataframe
2023-03-19 11:50:10,281:INFO:Initializing create_model()
2023-03-19 11:50:10,281:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=4278, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-03-19 11:50:10,281:INFO:Checking exceptions
2023-03-19 11:50:10,281:INFO:Importing libraries
2023-03-19 11:50:10,281:INFO:Copying training dataset
2023-03-19 11:50:10,335:INFO:Defining folds
2023-03-19 11:50:10,335:INFO:Declaring metric variables
2023-03-19 11:50:10,335:INFO:Importing untrained model
2023-03-19 11:50:10,335:INFO:Declaring custom model
2023-03-19 11:50:10,336:INFO:Gradient Boosting Regressor Imported succesfully
2023-03-19 11:50:10,336:INFO:Cross validation set to False
2023-03-19 11:50:10,336:INFO:Fitting Model
2023-03-19 11:50:31,045:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=4278, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-19 11:50:31,045:INFO:create_models() succesfully completed......................................
2023-03-19 11:50:31,126:INFO:create_model_container: 3
2023-03-19 11:50:31,126:INFO:master_model_container: 3
2023-03-19 11:50:31,127:INFO:display_container: 2
2023-03-19 11:50:31,127:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=4278, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-19 11:50:31,127:INFO:compare_models() succesfully completed......................................
2023-03-19 11:53:52,536:INFO:Initializing compare_models()
2023-03-19 11:53:52,536:INFO:compare_models(include=['xgboost', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 11:53:52,536:INFO:Checking exceptions
2023-03-19 11:54:35,607:INFO:Initializing compare_models()
2023-03-19 11:54:35,607:INFO:compare_models(include=['lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 11:54:35,608:INFO:Checking exceptions
2023-03-19 11:55:31,377:INFO:Initializing compare_models()
2023-03-19 11:55:31,377:INFO:compare_models(include=['lightgbm', 'dt', 'gbr'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 11:55:31,377:INFO:Checking exceptions
2023-03-19 11:55:31,377:INFO:Preparing display monitor
2023-03-19 11:55:31,378:INFO:Preparing display monitor
2023-03-19 11:55:31,402:INFO:Initializing Light Gradient Boosting Machine
2023-03-19 11:55:31,403:INFO:Total runtime is 1.663366953531901e-05 minutes
2023-03-19 11:55:31,412:INFO:SubProcess create_model() called ==================================
2023-03-19 11:55:31,412:INFO:Initializing create_model()
2023-03-19 11:55:31,413:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001BB14E35160>, return_train_score=False, kwargs={})
2023-03-19 11:55:31,413:INFO:Checking exceptions
2023-03-19 11:55:31,413:INFO:Importing libraries
2023-03-19 11:55:31,413:INFO:Copying training dataset
2023-03-19 11:55:31,474:INFO:Defining folds
2023-03-19 11:55:31,474:INFO:Declaring metric variables
2023-03-19 11:55:31,483:INFO:Importing untrained model
2023-03-19 11:55:31,490:INFO:Light Gradient Boosting Machine Imported succesfully
2023-03-19 11:55:31,505:INFO:Starting cross validation
2023-03-19 11:55:31,506:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:55:36,148:INFO:Calculating mean and std
2023-03-19 11:55:36,151:INFO:Creating metrics dataframe
2023-03-19 11:55:36,163:INFO:Uploading results into container
2023-03-19 11:55:36,163:INFO:Uploading model into container now
2023-03-19 11:55:36,164:INFO:create_model_container: 4
2023-03-19 11:55:36,164:INFO:master_model_container: 4
2023-03-19 11:55:36,164:INFO:display_container: 3
2023-03-19 11:55:36,165:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=4278, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-19 11:55:36,165:INFO:create_model() succesfully completed......................................
2023-03-19 11:55:36,258:INFO:SubProcess create_model() end ==================================
2023-03-19 11:55:36,258:INFO:Creating metrics dataframe
2023-03-19 11:55:36,267:INFO:Initializing Decision Tree Regressor
2023-03-19 11:55:36,267:INFO:Total runtime is 0.08108447790145874 minutes
2023-03-19 11:55:36,274:INFO:SubProcess create_model() called ==================================
2023-03-19 11:55:36,275:INFO:Initializing create_model()
2023-03-19 11:55:36,275:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001BB14E35160>, return_train_score=False, kwargs={})
2023-03-19 11:55:36,275:INFO:Checking exceptions
2023-03-19 11:55:36,275:INFO:Importing libraries
2023-03-19 11:55:36,275:INFO:Copying training dataset
2023-03-19 11:55:36,330:INFO:Defining folds
2023-03-19 11:55:36,330:INFO:Declaring metric variables
2023-03-19 11:55:36,337:INFO:Importing untrained model
2023-03-19 11:55:36,345:INFO:Decision Tree Regressor Imported succesfully
2023-03-19 11:55:36,361:INFO:Starting cross validation
2023-03-19 11:55:36,362:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:55:45,194:INFO:Calculating mean and std
2023-03-19 11:55:45,196:INFO:Creating metrics dataframe
2023-03-19 11:55:45,210:INFO:Uploading results into container
2023-03-19 11:55:45,211:INFO:Uploading model into container now
2023-03-19 11:55:45,212:INFO:create_model_container: 5
2023-03-19 11:55:45,212:INFO:master_model_container: 5
2023-03-19 11:55:45,212:INFO:display_container: 3
2023-03-19 11:55:45,213:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=4278, splitter='best')
2023-03-19 11:55:45,214:INFO:create_model() succesfully completed......................................
2023-03-19 11:55:45,307:INFO:SubProcess create_model() end ==================================
2023-03-19 11:55:45,307:INFO:Creating metrics dataframe
2023-03-19 11:55:45,317:INFO:Initializing Gradient Boosting Regressor
2023-03-19 11:55:45,317:INFO:Total runtime is 0.23191958665847778 minutes
2023-03-19 11:55:45,325:INFO:SubProcess create_model() called ==================================
2023-03-19 11:55:45,325:INFO:Initializing create_model()
2023-03-19 11:55:45,325:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001BB14E35160>, return_train_score=False, kwargs={})
2023-03-19 11:55:45,325:INFO:Checking exceptions
2023-03-19 11:55:45,325:INFO:Importing libraries
2023-03-19 11:55:45,325:INFO:Copying training dataset
2023-03-19 11:55:45,380:INFO:Defining folds
2023-03-19 11:55:45,380:INFO:Declaring metric variables
2023-03-19 11:55:45,387:INFO:Importing untrained model
2023-03-19 11:55:45,395:INFO:Gradient Boosting Regressor Imported succesfully
2023-03-19 11:55:45,410:INFO:Starting cross validation
2023-03-19 11:55:45,411:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 11:56:24,816:INFO:Calculating mean and std
2023-03-19 11:56:24,817:INFO:Creating metrics dataframe
2023-03-19 11:56:24,822:INFO:Uploading results into container
2023-03-19 11:56:24,822:INFO:Uploading model into container now
2023-03-19 11:56:24,822:INFO:create_model_container: 6
2023-03-19 11:56:24,822:INFO:master_model_container: 6
2023-03-19 11:56:24,822:INFO:display_container: 3
2023-03-19 11:56:24,823:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=4278, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-19 11:56:24,823:INFO:create_model() succesfully completed......................................
2023-03-19 11:56:24,913:INFO:SubProcess create_model() end ==================================
2023-03-19 11:56:24,913:INFO:Creating metrics dataframe
2023-03-19 11:56:24,940:INFO:Initializing create_model()
2023-03-19 11:56:24,940:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=4278, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-03-19 11:56:24,941:INFO:Checking exceptions
2023-03-19 11:56:24,941:INFO:Importing libraries
2023-03-19 11:56:24,941:INFO:Copying training dataset
2023-03-19 11:56:24,995:INFO:Defining folds
2023-03-19 11:56:24,996:INFO:Declaring metric variables
2023-03-19 11:56:24,996:INFO:Importing untrained model
2023-03-19 11:56:24,996:INFO:Declaring custom model
2023-03-19 11:56:24,996:INFO:Light Gradient Boosting Machine Imported succesfully
2023-03-19 11:56:24,997:INFO:Cross validation set to False
2023-03-19 11:56:24,997:INFO:Fitting Model
2023-03-19 11:56:25,253:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=4278, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-19 11:56:25,253:INFO:create_models() succesfully completed......................................
2023-03-19 11:56:25,353:INFO:create_model_container: 6
2023-03-19 11:56:25,353:INFO:master_model_container: 6
2023-03-19 11:56:25,353:INFO:display_container: 3
2023-03-19 11:56:25,354:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=4278, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-19 11:56:25,354:INFO:compare_models() succesfully completed......................................
2023-03-19 11:57:20,490:INFO:Initializing compare_models()
2023-03-19 11:57:20,490:INFO:compare_models(include=['lightgbm', 'dt', 'gbr', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 11:57:20,490:INFO:Checking exceptions
2023-03-19 12:00:45,041:INFO:PyCaret Supervised Module
2023-03-19 12:00:45,042:INFO:ML Usecase: regression
2023-03-19 12:00:45,042:INFO:version 2.3.10
2023-03-19 12:00:45,042:INFO:Initializing setup()
2023-03-19 12:00:45,042:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['locality'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['area', 'bathroom_num', 'bedroom_num'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-03-19 12:00:45,042:INFO:Checking environment
2023-03-19 12:00:45,042:INFO:python_version: 3.8.16
2023-03-19 12:00:45,042:INFO:python_build: ('default', 'Jan 17 2023 22:25:28')
2023-03-19 12:00:45,043:INFO:machine: AMD64
2023-03-19 12:00:45,043:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-19 12:00:45,045:INFO:Memory: svmem(total=17092505600, available=10487627776, percent=38.6, used=6604877824, free=10487627776)
2023-03-19 12:00:45,045:INFO:Physical Core: 6
2023-03-19 12:00:45,045:INFO:Logical Core: 6
2023-03-19 12:00:45,045:INFO:Checking libraries
2023-03-19 12:00:45,045:INFO:pd==1.5.3
2023-03-19 12:00:45,045:INFO:numpy==1.20.3
2023-03-19 12:00:45,045:INFO:sklearn==0.23.2
2023-03-19 12:00:45,046:INFO:lightgbm==3.3.5
2023-03-19 12:00:45,089:INFO:catboost==1.1.1
2023-03-19 12:00:45,090:WARNING:xgboost not found
2023-03-19 12:00:45,090:INFO:mlflow==2.1.1
2023-03-19 12:00:45,090:INFO:Checking Exceptions
2023-03-19 12:00:45,090:INFO:Declaring global variables
2023-03-19 12:00:45,090:INFO:USI: 0446
2023-03-19 12:00:45,091:INFO:pycaret_globals: {'logging_param', 'dashboard_logger', 'prep_pipe', '_ml_usecase', 'fold_groups_param', 'create_model_container', 'data_before_preprocess', 'pycaret_globals', '_all_models', '_all_metrics', 'display_container', 'imputation_classifier', 'target_param', 'fold_shuffle_param', 'fold_groups_param_full', 'stratify_param', 'exp_name_log', 'html_param', '_all_models_internal', 'iterative_imputation_iters_param', 'log_plots_param', '_internal_pipeline', 'fix_imbalance_param', '_available_plots', 'X_train', 'gpu_param', 'n_jobs_param', 'seed', 'y_test', 'fold_generator', 'experiment__', 'y', 'X', 'transform_target_param', 'imputation_regressor', 'y_train', 'USI', '_gpu_n_jobs_param', 'fold_param', 'transform_target_method_param', 'fix_imbalance_method_param', 'master_model_container', 'X_test'}
2023-03-19 12:00:45,091:INFO:Preparing display monitor
2023-03-19 12:00:45,091:INFO:Preparing display monitor
2023-03-19 12:00:45,099:INFO:Importing libraries
2023-03-19 12:00:45,099:INFO:Copying data for preprocessing
2023-03-19 12:00:45,126:INFO:Declaring preprocessing parameters
2023-03-19 12:00:45,129:INFO:Creating preprocessing pipeline
2023-03-19 12:00:45,140:INFO:Preprocessing pipeline created successfully
2023-03-19 12:00:45,140:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-03-19 12:00:45,140:INFO:Creating global containers
2023-03-19 12:00:45,141:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-03-19 12:00:47,181:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 12:00:47,302:WARNING:Couldn't import xgboost.XGBRegressor
2023-03-19 12:00:47,303:INFO:Creating grid variables
2023-03-19 12:00:47,317:INFO:create_model_container: 0
2023-03-19 12:00:47,318:INFO:master_model_container: 0
2023-03-19 12:00:47,318:INFO:display_container: 1
2023-03-19 12:00:47,324:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                                                  random_state_quantile=2808,
                                                  target='price')),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-03-19 12:00:47,324:INFO:setup() succesfully completed......................................
2023-03-19 12:00:56,667:INFO:Initializing compare_models()
2023-03-19 12:00:56,667:INFO:compare_models(include=['lightgbm', 'dt', 'gbr', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-03-19 12:00:56,667:INFO:Checking exceptions
2023-03-19 12:00:56,668:INFO:Preparing display monitor
2023-03-19 12:00:56,668:INFO:Preparing display monitor
2023-03-19 12:00:56,692:INFO:Initializing Light Gradient Boosting Machine
2023-03-19 12:00:56,692:INFO:Total runtime is 0.0 minutes
2023-03-19 12:00:56,701:INFO:SubProcess create_model() called ==================================
2023-03-19 12:00:56,702:INFO:Initializing create_model()
2023-03-19 12:00:56,702:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000017FFF7E3070>, return_train_score=False, kwargs={})
2023-03-19 12:00:56,702:INFO:Checking exceptions
2023-03-19 12:00:56,702:INFO:Importing libraries
2023-03-19 12:00:56,702:INFO:Copying training dataset
2023-03-19 12:00:56,767:INFO:Defining folds
2023-03-19 12:00:56,768:INFO:Declaring metric variables
2023-03-19 12:00:56,777:INFO:Importing untrained model
2023-03-19 12:00:56,786:INFO:Light Gradient Boosting Machine Imported succesfully
2023-03-19 12:00:56,802:INFO:Starting cross validation
2023-03-19 12:00:56,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 12:01:01,633:INFO:Calculating mean and std
2023-03-19 12:01:01,633:INFO:Creating metrics dataframe
2023-03-19 12:01:01,638:INFO:Uploading results into container
2023-03-19 12:01:01,639:INFO:Uploading model into container now
2023-03-19 12:01:01,639:INFO:create_model_container: 1
2023-03-19 12:01:01,639:INFO:master_model_container: 1
2023-03-19 12:01:01,640:INFO:display_container: 2
2023-03-19 12:01:01,641:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-19 12:01:01,641:INFO:create_model() succesfully completed......................................
2023-03-19 12:01:01,718:INFO:SubProcess create_model() end ==================================
2023-03-19 12:01:01,718:INFO:Creating metrics dataframe
2023-03-19 12:01:01,729:INFO:Initializing Decision Tree Regressor
2023-03-19 12:01:01,729:INFO:Total runtime is 0.08395199775695801 minutes
2023-03-19 12:01:01,739:INFO:SubProcess create_model() called ==================================
2023-03-19 12:01:01,739:INFO:Initializing create_model()
2023-03-19 12:01:01,739:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000017FFF7E3070>, return_train_score=False, kwargs={})
2023-03-19 12:01:01,739:INFO:Checking exceptions
2023-03-19 12:01:01,739:INFO:Importing libraries
2023-03-19 12:01:01,739:INFO:Copying training dataset
2023-03-19 12:01:01,795:INFO:Defining folds
2023-03-19 12:01:01,795:INFO:Declaring metric variables
2023-03-19 12:01:01,803:INFO:Importing untrained model
2023-03-19 12:01:01,811:INFO:Decision Tree Regressor Imported succesfully
2023-03-19 12:01:01,826:INFO:Starting cross validation
2023-03-19 12:01:01,827:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 12:01:10,901:INFO:Calculating mean and std
2023-03-19 12:01:10,903:INFO:Creating metrics dataframe
2023-03-19 12:01:10,912:INFO:Uploading results into container
2023-03-19 12:01:10,913:INFO:Uploading model into container now
2023-03-19 12:01:10,913:INFO:create_model_container: 2
2023-03-19 12:01:10,913:INFO:master_model_container: 2
2023-03-19 12:01:10,913:INFO:display_container: 2
2023-03-19 12:01:10,914:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=2808, splitter='best')
2023-03-19 12:01:10,914:INFO:create_model() succesfully completed......................................
2023-03-19 12:01:10,985:INFO:SubProcess create_model() end ==================================
2023-03-19 12:01:10,985:INFO:Creating metrics dataframe
2023-03-19 12:01:10,995:INFO:Initializing Gradient Boosting Regressor
2023-03-19 12:01:10,995:INFO:Total runtime is 0.23837995926539102 minutes
2023-03-19 12:01:11,003:INFO:SubProcess create_model() called ==================================
2023-03-19 12:01:11,003:INFO:Initializing create_model()
2023-03-19 12:01:11,003:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000017FFF7E3070>, return_train_score=False, kwargs={})
2023-03-19 12:01:11,003:INFO:Checking exceptions
2023-03-19 12:01:11,004:INFO:Importing libraries
2023-03-19 12:01:11,004:INFO:Copying training dataset
2023-03-19 12:01:11,057:INFO:Defining folds
2023-03-19 12:01:11,058:INFO:Declaring metric variables
2023-03-19 12:01:11,065:INFO:Importing untrained model
2023-03-19 12:01:11,072:INFO:Gradient Boosting Regressor Imported succesfully
2023-03-19 12:01:11,089:INFO:Starting cross validation
2023-03-19 12:01:11,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 12:01:51,069:INFO:Calculating mean and std
2023-03-19 12:01:51,071:INFO:Creating metrics dataframe
2023-03-19 12:01:51,082:INFO:Uploading results into container
2023-03-19 12:01:51,082:INFO:Uploading model into container now
2023-03-19 12:01:51,083:INFO:create_model_container: 3
2023-03-19 12:01:51,083:INFO:master_model_container: 3
2023-03-19 12:01:51,084:INFO:display_container: 2
2023-03-19 12:01:51,085:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=2808, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-19 12:01:51,085:INFO:create_model() succesfully completed......................................
2023-03-19 12:01:51,160:INFO:SubProcess create_model() end ==================================
2023-03-19 12:01:51,160:INFO:Creating metrics dataframe
2023-03-19 12:01:51,170:INFO:Initializing CatBoost Regressor
2023-03-19 12:01:51,170:INFO:Total runtime is 0.9079627950986227 minutes
2023-03-19 12:01:51,177:INFO:SubProcess create_model() called ==================================
2023-03-19 12:01:51,178:INFO:Initializing create_model()
2023-03-19 12:01:51,178:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000017FFF7E3070>, return_train_score=False, kwargs={})
2023-03-19 12:01:51,178:INFO:Checking exceptions
2023-03-19 12:01:51,178:INFO:Importing libraries
2023-03-19 12:01:51,178:INFO:Copying training dataset
2023-03-19 12:01:51,232:INFO:Defining folds
2023-03-19 12:01:51,233:INFO:Declaring metric variables
2023-03-19 12:01:51,240:INFO:Importing untrained model
2023-03-19 12:01:51,247:INFO:CatBoost Regressor Imported succesfully
2023-03-19 12:01:51,261:INFO:Starting cross validation
2023-03-19 12:01:51,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 12:02:09,521:INFO:Calculating mean and std
2023-03-19 12:02:09,522:INFO:Creating metrics dataframe
2023-03-19 12:02:09,528:INFO:Uploading results into container
2023-03-19 12:02:09,528:INFO:Uploading model into container now
2023-03-19 12:02:09,528:INFO:create_model_container: 4
2023-03-19 12:02:09,528:INFO:master_model_container: 4
2023-03-19 12:02:09,528:INFO:display_container: 2
2023-03-19 12:02:09,528:INFO:<catboost.core.CatBoostRegressor object at 0x0000017F817C4880>
2023-03-19 12:02:09,528:INFO:create_model() succesfully completed......................................
2023-03-19 12:02:09,599:INFO:SubProcess create_model() end ==================================
2023-03-19 12:02:09,599:INFO:Creating metrics dataframe
2023-03-19 12:02:09,626:INFO:Initializing create_model()
2023-03-19 12:02:09,626:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-03-19 12:02:09,627:INFO:Checking exceptions
2023-03-19 12:02:09,627:INFO:Importing libraries
2023-03-19 12:02:09,627:INFO:Copying training dataset
2023-03-19 12:02:09,681:INFO:Defining folds
2023-03-19 12:02:09,682:INFO:Declaring metric variables
2023-03-19 12:02:09,682:INFO:Importing untrained model
2023-03-19 12:02:09,682:INFO:Declaring custom model
2023-03-19 12:02:09,682:INFO:Light Gradient Boosting Machine Imported succesfully
2023-03-19 12:02:09,683:INFO:Cross validation set to False
2023-03-19 12:02:09,683:INFO:Fitting Model
2023-03-19 12:02:09,893:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-19 12:02:09,893:INFO:create_models() succesfully completed......................................
2023-03-19 12:02:09,976:INFO:create_model_container: 4
2023-03-19 12:02:09,976:INFO:master_model_container: 4
2023-03-19 12:02:09,976:INFO:display_container: 2
2023-03-19 12:02:09,977:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-19 12:02:09,977:INFO:compare_models() succesfully completed......................................
2023-03-19 12:04:34,196:INFO:Initializing evaluate_model()
2023-03-19 12:04:34,196:INFO:evaluate_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-19 12:04:34,215:INFO:Initializing plot_model()
2023-03-19 12:04:34,215:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:04:34,215:INFO:Checking exceptions
2023-03-19 12:04:34,215:INFO:Preparing display monitor
2023-03-19 12:04:34,220:INFO:Preloading libraries
2023-03-19 12:04:34,236:INFO:Copying training dataset
2023-03-19 12:04:34,345:INFO:Copying test dataset
2023-03-19 12:04:34,376:INFO:Plot type: parameter
2023-03-19 12:04:34,388:INFO:Visual Rendered Successfully
2023-03-19 12:04:34,495:INFO:plot_model() succesfully completed......................................
2023-03-19 12:04:40,099:INFO:Initializing plot_model()
2023-03-19 12:04:40,099:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:04:40,099:INFO:Checking exceptions
2023-03-19 12:04:40,100:INFO:Preparing display monitor
2023-03-19 12:04:40,104:INFO:Preloading libraries
2023-03-19 12:04:40,110:INFO:Copying training dataset
2023-03-19 12:04:40,166:INFO:Copying test dataset
2023-03-19 12:04:40,189:INFO:Plot type: error
2023-03-19 12:04:40,213:INFO:Fitting Model
2023-03-19 12:04:40,213:INFO:Scoring test/hold-out set
2023-03-19 12:04:40,749:INFO:Visual Rendered Successfully
2023-03-19 12:04:40,815:INFO:plot_model() succesfully completed......................................
2023-03-19 12:06:12,581:INFO:Initializing predict_model()
2023-03-19 12:06:12,581:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-19 12:06:12,581:INFO:Checking exceptions
2023-03-19 12:06:12,581:INFO:Preloading libraries
2023-03-19 12:06:12,582:INFO:Preparing display monitor
2023-03-19 12:10:17,812:INFO:Initializing create_model()
2023-03-19 12:10:17,812:INFO:create_model(estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-03-19 12:10:17,812:INFO:Checking exceptions
2023-03-19 12:10:17,812:INFO:Preparing display monitor
2023-03-19 12:10:17,827:INFO:Importing libraries
2023-03-19 12:10:17,828:INFO:Copying training dataset
2023-03-19 12:10:17,908:INFO:Defining folds
2023-03-19 12:10:17,909:INFO:Declaring metric variables
2023-03-19 12:10:17,919:INFO:Importing untrained model
2023-03-19 12:10:17,932:INFO:Light Gradient Boosting Machine Imported succesfully
2023-03-19 12:10:17,961:INFO:Starting cross validation
2023-03-19 12:10:17,962:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 12:10:22,540:INFO:Calculating mean and std
2023-03-19 12:10:22,541:INFO:Creating metrics dataframe
2023-03-19 12:10:22,555:INFO:Finalizing model
2023-03-19 12:10:22,778:INFO:Uploading results into container
2023-03-19 12:10:22,778:INFO:Uploading model into container now
2023-03-19 12:10:22,788:INFO:create_model_container: 5
2023-03-19 12:10:22,788:INFO:master_model_container: 5
2023-03-19 12:10:22,788:INFO:display_container: 4
2023-03-19 12:10:22,789:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-19 12:10:22,789:INFO:create_model() succesfully completed......................................
2023-03-19 12:10:49,335:INFO:Initializing tune_model()
2023-03-19 12:10:49,335:INFO:tune_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2023-03-19 12:10:49,335:INFO:Checking exceptions
2023-03-19 12:10:49,335:INFO:Preparing display monitor
2023-03-19 12:10:49,349:INFO:Copying training dataset
2023-03-19 12:10:49,410:INFO:Checking base model
2023-03-19 12:10:49,411:INFO:Base model : Light Gradient Boosting Machine
2023-03-19 12:10:49,420:INFO:Declaring metric variables
2023-03-19 12:10:49,429:INFO:Defining Hyperparameters
2023-03-19 12:10:49,505:INFO:Tuning with n_jobs=-1
2023-03-19 12:10:49,505:INFO:Initializing RandomizedSearchCV
2023-03-19 12:11:02,492:INFO:best_params: {'actual_estimator__reg_lambda': 0.15, 'actual_estimator__reg_alpha': 1e-06, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_split_gain': 0, 'actual_estimator__min_child_samples': 31, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.7, 'actual_estimator__bagging_freq': 5, 'actual_estimator__bagging_fraction': 1.0}
2023-03-19 12:11:02,493:INFO:Hyperparameter search completed
2023-03-19 12:11:02,494:INFO:SubProcess create_model() called ==================================
2023-03-19 12:11:02,497:INFO:Initializing create_model()
2023-03-19 12:11:02,498:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000017F817B4130>, return_train_score=False, kwargs={'reg_lambda': 0.15, 'reg_alpha': 1e-06, 'num_leaves': 10, 'n_estimators': 270, 'min_split_gain': 0, 'min_child_samples': 31, 'learning_rate': 0.05, 'feature_fraction': 0.7, 'bagging_freq': 5, 'bagging_fraction': 1.0})
2023-03-19 12:11:02,498:INFO:Checking exceptions
2023-03-19 12:11:02,499:INFO:Importing libraries
2023-03-19 12:11:02,499:INFO:Copying training dataset
2023-03-19 12:11:02,561:INFO:Defining folds
2023-03-19 12:11:02,562:INFO:Declaring metric variables
2023-03-19 12:11:02,568:INFO:Importing untrained model
2023-03-19 12:11:02,568:INFO:Declaring custom model
2023-03-19 12:11:02,576:INFO:Light Gradient Boosting Machine Imported succesfully
2023-03-19 12:11:02,591:INFO:Starting cross validation
2023-03-19 12:11:02,592:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 12:11:03,899:INFO:Calculating mean and std
2023-03-19 12:11:03,902:INFO:Creating metrics dataframe
2023-03-19 12:11:03,928:INFO:Finalizing model
2023-03-19 12:11:04,161:INFO:Uploading results into container
2023-03-19 12:11:04,161:INFO:Uploading model into container now
2023-03-19 12:11:04,161:INFO:create_model_container: 6
2023-03-19 12:11:04,161:INFO:master_model_container: 6
2023-03-19 12:11:04,161:INFO:display_container: 5
2023-03-19 12:11:04,162:INFO:LGBMRegressor(bagging_fraction=1.0, bagging_freq=5, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.7,
              importance_type='split', learning_rate=0.05, max_depth=-1,
              min_child_samples=31, min_child_weight=0.001, min_split_gain=0,
              n_estimators=270, n_jobs=-1, num_leaves=10, objective=None,
              random_state=2808, reg_alpha=1e-06, reg_lambda=0.15,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2023-03-19 12:11:04,162:INFO:create_model() succesfully completed......................................
2023-03-19 12:11:04,232:INFO:SubProcess create_model() end ==================================
2023-03-19 12:11:04,240:INFO:create_model_container: 6
2023-03-19 12:11:04,241:INFO:master_model_container: 6
2023-03-19 12:11:04,241:INFO:display_container: 5
2023-03-19 12:11:04,241:INFO:LGBMRegressor(bagging_fraction=1.0, bagging_freq=5, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.7,
              importance_type='split', learning_rate=0.05, max_depth=-1,
              min_child_samples=31, min_child_weight=0.001, min_split_gain=0,
              n_estimators=270, n_jobs=-1, num_leaves=10, objective=None,
              random_state=2808, reg_alpha=1e-06, reg_lambda=0.15,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2023-03-19 12:11:04,241:INFO:tune_model() succesfully completed......................................
2023-03-19 12:11:25,440:INFO:Initializing evaluate_model()
2023-03-19 12:11:25,440:INFO:evaluate_model(estimator=LGBMRegressor(bagging_fraction=1.0, bagging_freq=5, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.7,
              importance_type='split', learning_rate=0.05, max_depth=-1,
              min_child_samples=31, min_child_weight=0.001, min_split_gain=0,
              n_estimators=270, n_jobs=-1, num_leaves=10, objective=None,
              random_state=2808, reg_alpha=1e-06, reg_lambda=0.15,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-19 12:11:25,448:INFO:Initializing plot_model()
2023-03-19 12:11:25,448:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=1.0, bagging_freq=5, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.7,
              importance_type='split', learning_rate=0.05, max_depth=-1,
              min_child_samples=31, min_child_weight=0.001, min_split_gain=0,
              n_estimators=270, n_jobs=-1, num_leaves=10, objective=None,
              random_state=2808, reg_alpha=1e-06, reg_lambda=0.15,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:11:25,448:INFO:Checking exceptions
2023-03-19 12:11:25,449:INFO:Preparing display monitor
2023-03-19 12:11:25,454:INFO:Preloading libraries
2023-03-19 12:11:25,462:INFO:Copying training dataset
2023-03-19 12:11:25,520:INFO:Copying test dataset
2023-03-19 12:11:25,543:INFO:Plot type: parameter
2023-03-19 12:11:25,552:INFO:Visual Rendered Successfully
2023-03-19 12:11:25,622:INFO:plot_model() succesfully completed......................................
2023-03-19 12:11:28,854:INFO:Initializing plot_model()
2023-03-19 12:11:28,854:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=1.0, bagging_freq=5, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, feature_fraction=0.7,
              importance_type='split', learning_rate=0.05, max_depth=-1,
              min_child_samples=31, min_child_weight=0.001, min_split_gain=0,
              n_estimators=270, n_jobs=-1, num_leaves=10, objective=None,
              random_state=2808, reg_alpha=1e-06, reg_lambda=0.15,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:11:28,854:INFO:Checking exceptions
2023-03-19 12:11:28,854:INFO:Preparing display monitor
2023-03-19 12:11:28,858:INFO:Preloading libraries
2023-03-19 12:11:28,867:INFO:Copying training dataset
2023-03-19 12:11:28,946:INFO:Copying test dataset
2023-03-19 12:11:28,970:INFO:Plot type: error
2023-03-19 12:11:28,974:INFO:Fitting Model
2023-03-19 12:11:28,975:INFO:Scoring test/hold-out set
2023-03-19 12:11:29,401:INFO:Visual Rendered Successfully
2023-03-19 12:11:29,468:INFO:plot_model() succesfully completed......................................
2023-03-19 12:12:49,093:INFO:Initializing create_model()
2023-03-19 12:12:49,093:INFO:create_model(estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-03-19 12:12:49,093:INFO:Checking exceptions
2023-03-19 12:12:49,093:INFO:Preparing display monitor
2023-03-19 12:12:49,109:INFO:Importing libraries
2023-03-19 12:12:49,110:INFO:Copying training dataset
2023-03-19 12:12:49,174:INFO:Defining folds
2023-03-19 12:12:49,175:INFO:Declaring metric variables
2023-03-19 12:12:49,183:INFO:Importing untrained model
2023-03-19 12:12:49,193:INFO:CatBoost Regressor Imported succesfully
2023-03-19 12:12:49,212:INFO:Starting cross validation
2023-03-19 12:12:49,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 12:13:09,803:INFO:Calculating mean and std
2023-03-19 12:13:09,804:INFO:Creating metrics dataframe
2023-03-19 12:13:09,814:INFO:Finalizing model
2023-03-19 12:13:15,525:INFO:Uploading results into container
2023-03-19 12:13:15,525:INFO:Uploading model into container now
2023-03-19 12:13:15,534:INFO:create_model_container: 7
2023-03-19 12:13:15,534:INFO:master_model_container: 7
2023-03-19 12:13:15,534:INFO:display_container: 6
2023-03-19 12:13:15,534:INFO:<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>
2023-03-19 12:13:15,534:INFO:create_model() succesfully completed......................................
2023-03-19 12:13:34,542:INFO:Initializing tune_model()
2023-03-19 12:13:34,542:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2023-03-19 12:13:34,542:INFO:Checking exceptions
2023-03-19 12:13:34,542:INFO:Preparing display monitor
2023-03-19 12:13:34,556:INFO:Copying training dataset
2023-03-19 12:13:34,618:INFO:Checking base model
2023-03-19 12:13:34,618:INFO:Base model : CatBoost Regressor
2023-03-19 12:13:34,628:INFO:Declaring metric variables
2023-03-19 12:13:34,637:INFO:Defining Hyperparameters
2023-03-19 12:13:34,716:INFO:Tuning with n_jobs=-1
2023-03-19 12:13:34,716:INFO:Initializing RandomizedSearchCV
2023-03-19 12:14:45,193:INFO:best_params: {'actual_estimator__random_strength': 0.4, 'actual_estimator__n_estimators': 60, 'actual_estimator__l2_leaf_reg': 6, 'actual_estimator__eta': 0.5, 'actual_estimator__depth': 11}
2023-03-19 12:14:45,194:INFO:Hyperparameter search completed
2023-03-19 12:14:45,194:INFO:SubProcess create_model() called ==================================
2023-03-19 12:14:45,194:INFO:Initializing create_model()
2023-03-19 12:14:45,194:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F81AC43D0>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000017F81AC4610>, return_train_score=False, kwargs={'random_strength': 0.4, 'n_estimators': 60, 'l2_leaf_reg': 6, 'eta': 0.5, 'depth': 11})
2023-03-19 12:14:45,194:INFO:Checking exceptions
2023-03-19 12:14:45,194:INFO:Importing libraries
2023-03-19 12:14:45,194:INFO:Copying training dataset
2023-03-19 12:14:45,252:INFO:Defining folds
2023-03-19 12:14:45,252:INFO:Declaring metric variables
2023-03-19 12:14:45,260:INFO:Importing untrained model
2023-03-19 12:14:45,260:INFO:Declaring custom model
2023-03-19 12:14:45,268:INFO:CatBoost Regressor Imported succesfully
2023-03-19 12:14:45,283:INFO:Starting cross validation
2023-03-19 12:14:45,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 12:14:58,651:INFO:Calculating mean and std
2023-03-19 12:14:58,653:INFO:Creating metrics dataframe
2023-03-19 12:14:58,666:INFO:Finalizing model
2023-03-19 12:15:02,881:INFO:Uploading results into container
2023-03-19 12:15:02,882:INFO:Uploading model into container now
2023-03-19 12:15:02,882:INFO:create_model_container: 8
2023-03-19 12:15:02,882:INFO:master_model_container: 8
2023-03-19 12:15:02,882:INFO:display_container: 7
2023-03-19 12:15:02,882:INFO:<catboost.core.CatBoostRegressor object at 0x0000017F819BCA00>
2023-03-19 12:15:02,882:INFO:create_model() succesfully completed......................................
2023-03-19 12:15:02,955:INFO:SubProcess create_model() end ==================================
2023-03-19 12:15:02,963:INFO:create_model_container: 8
2023-03-19 12:15:02,963:INFO:master_model_container: 8
2023-03-19 12:15:02,963:INFO:display_container: 7
2023-03-19 12:15:02,963:INFO:<catboost.core.CatBoostRegressor object at 0x0000017F819BCA00>
2023-03-19 12:15:02,963:INFO:tune_model() succesfully completed......................................
2023-03-19 12:15:30,137:INFO:Initializing evaluate_model()
2023-03-19 12:15:30,137:INFO:evaluate_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-19 12:15:30,145:INFO:Initializing plot_model()
2023-03-19 12:15:30,145:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:15:30,145:INFO:Checking exceptions
2023-03-19 12:15:30,146:INFO:Preparing display monitor
2023-03-19 12:15:30,150:INFO:Preloading libraries
2023-03-19 12:15:30,153:INFO:Copying training dataset
2023-03-19 12:15:30,235:INFO:Copying test dataset
2023-03-19 12:15:30,268:INFO:Plot type: parameter
2023-03-19 12:15:30,278:INFO:Visual Rendered Successfully
2023-03-19 12:15:30,352:INFO:plot_model() succesfully completed......................................
2023-03-19 12:15:32,613:INFO:Initializing plot_model()
2023-03-19 12:15:32,613:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:15:32,613:INFO:Checking exceptions
2023-03-19 12:15:32,614:INFO:Preparing display monitor
2023-03-19 12:15:32,617:INFO:Preloading libraries
2023-03-19 12:15:32,620:INFO:Copying training dataset
2023-03-19 12:15:32,679:INFO:Copying test dataset
2023-03-19 12:15:32,703:INFO:Plot type: error
2023-03-19 12:15:32,705:INFO:Fitting Model
2023-03-19 12:15:32,706:INFO:Scoring test/hold-out set
2023-03-19 12:15:33,073:INFO:Visual Rendered Successfully
2023-03-19 12:15:33,139:INFO:plot_model() succesfully completed......................................
2023-03-19 12:15:41,711:INFO:Initializing plot_model()
2023-03-19 12:15:41,711:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=feature_all, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:15:41,712:INFO:Checking exceptions
2023-03-19 12:15:41,712:INFO:Preparing display monitor
2023-03-19 12:15:41,716:INFO:Preloading libraries
2023-03-19 12:15:41,719:INFO:Copying training dataset
2023-03-19 12:15:41,777:INFO:Copying test dataset
2023-03-19 12:15:41,801:INFO:Plot type: feature_all
2023-03-19 12:15:41,803:WARNING:No coef_ found. Trying feature_importances_
2023-03-19 12:15:47,946:INFO:Visual Rendered Successfully
2023-03-19 12:15:48,040:INFO:plot_model() succesfully completed......................................
2023-03-19 12:16:01,517:INFO:Initializing plot_model()
2023-03-19 12:16:01,517:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=learning, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:16:01,517:INFO:Checking exceptions
2023-03-19 12:16:01,518:INFO:Preparing display monitor
2023-03-19 12:16:01,521:INFO:Preloading libraries
2023-03-19 12:16:01,523:INFO:Copying training dataset
2023-03-19 12:16:01,584:INFO:Copying test dataset
2023-03-19 12:16:01,608:INFO:Plot type: learning
2023-03-19 12:16:01,625:INFO:Fitting Model
2023-03-19 12:16:20,930:INFO:Initializing evaluate_model()
2023-03-19 12:16:20,930:INFO:evaluate_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-19 12:16:20,940:INFO:Initializing plot_model()
2023-03-19 12:16:20,940:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:16:20,940:INFO:Checking exceptions
2023-03-19 12:16:20,940:INFO:Preparing display monitor
2023-03-19 12:16:20,945:INFO:Preloading libraries
2023-03-19 12:16:20,948:INFO:Copying training dataset
2023-03-19 12:16:21,032:INFO:Copying test dataset
2023-03-19 12:16:21,056:INFO:Plot type: parameter
2023-03-19 12:16:21,064:INFO:Visual Rendered Successfully
2023-03-19 12:16:21,159:INFO:plot_model() succesfully completed......................................
2023-03-19 12:16:35,505:INFO:Initializing plot_model()
2023-03-19 12:16:35,505:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=learning, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:16:35,505:INFO:Checking exceptions
2023-03-19 12:16:35,506:INFO:Preparing display monitor
2023-03-19 12:16:35,510:INFO:Preloading libraries
2023-03-19 12:16:35,513:INFO:Copying training dataset
2023-03-19 12:16:35,565:INFO:Copying test dataset
2023-03-19 12:16:35,591:INFO:Plot type: learning
2023-03-19 12:16:35,606:INFO:Fitting Model
2023-03-19 12:17:02,772:INFO:Initializing plot_model()
2023-03-19 12:17:02,772:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:17:02,773:INFO:Checking exceptions
2023-03-19 12:17:02,773:INFO:Preparing display monitor
2023-03-19 12:17:02,778:INFO:Preloading libraries
2023-03-19 12:17:02,781:INFO:Copying training dataset
2023-03-19 12:17:02,837:INFO:Copying test dataset
2023-03-19 12:17:02,868:INFO:Plot type: error
2023-03-19 12:17:02,872:INFO:Fitting Model
2023-03-19 12:17:02,875:INFO:Scoring test/hold-out set
2023-03-19 12:17:03,249:INFO:Visual Rendered Successfully
2023-03-19 12:17:03,342:INFO:plot_model() succesfully completed......................................
2023-03-19 12:17:13,995:INFO:Initializing evaluate_model()
2023-03-19 12:17:13,996:INFO:evaluate_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-19 12:17:14,005:INFO:Initializing plot_model()
2023-03-19 12:17:14,005:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:17:14,006:INFO:Checking exceptions
2023-03-19 12:17:14,006:INFO:Preparing display monitor
2023-03-19 12:17:14,010:INFO:Preloading libraries
2023-03-19 12:17:14,013:INFO:Copying training dataset
2023-03-19 12:17:14,067:INFO:Copying test dataset
2023-03-19 12:17:14,092:INFO:Plot type: parameter
2023-03-19 12:17:14,101:INFO:Visual Rendered Successfully
2023-03-19 12:17:14,211:INFO:plot_model() succesfully completed......................................
2023-03-19 12:17:15,855:INFO:Initializing plot_model()
2023-03-19 12:17:15,856:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, plot_kwargs={}, save=False, scale=1, system=True)
2023-03-19 12:17:15,856:INFO:Checking exceptions
2023-03-19 12:17:15,856:INFO:Preparing display monitor
2023-03-19 12:17:15,860:INFO:Preloading libraries
2023-03-19 12:17:15,862:INFO:Copying training dataset
2023-03-19 12:17:15,917:INFO:Copying test dataset
2023-03-19 12:17:15,939:INFO:Plot type: error
2023-03-19 12:17:15,942:INFO:Fitting Model
2023-03-19 12:17:15,943:INFO:Scoring test/hold-out set
2023-03-19 12:17:16,311:INFO:Visual Rendered Successfully
2023-03-19 12:17:16,406:INFO:plot_model() succesfully completed......................................
2023-03-19 12:17:29,352:INFO:Initializing predict_model()
2023-03-19 12:17:29,352:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-19 12:17:29,352:INFO:Checking exceptions
2023-03-19 12:17:29,352:INFO:Preloading libraries
2023-03-19 12:17:29,352:INFO:Preparing display monitor
2023-03-19 12:19:27,067:INFO:Initializing predict_model()
2023-03-19 12:19:27,068:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-19 12:19:27,068:INFO:Checking exceptions
2023-03-19 12:19:27,068:INFO:Preloading libraries
2023-03-19 12:19:27,068:INFO:Preparing display monitor
2023-03-19 12:21:06,426:INFO:Initializing predict_model()
2023-03-19 12:21:06,426:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=2808, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-19 12:21:06,426:INFO:Checking exceptions
2023-03-19 12:21:06,426:INFO:Preloading libraries
2023-03-19 12:21:06,426:INFO:Preparing display monitor
2023-03-19 12:22:20,059:INFO:Initializing interpret_model()
2023-03-19 12:22:20,060:INFO:interpret_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False)
2023-03-19 12:22:20,060:INFO:Checking exceptions
2023-03-19 12:22:20,560:INFO:plot type: summary
2023-03-19 12:22:20,560:INFO:Creating TreeExplainer
2023-03-19 12:22:20,560:INFO:Compiling shap values
2023-03-19 12:22:24,870:INFO:Visual Rendered Successfully
2023-03-19 12:22:24,870:INFO:interpret_model() succesfully completed......................................
2023-03-19 12:24:41,641:INFO:Initializing tune_model()
2023-03-19 12:24:41,641:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2023-03-19 12:24:41,642:INFO:Checking exceptions
2023-03-19 12:24:41,642:INFO:Preparing display monitor
2023-03-19 12:24:41,656:INFO:Copying training dataset
2023-03-19 12:24:41,721:INFO:Checking base model
2023-03-19 12:24:41,722:INFO:Base model : CatBoost Regressor
2023-03-19 12:24:41,731:INFO:Declaring metric variables
2023-03-19 12:24:41,741:INFO:Defining Hyperparameters
2023-03-19 12:24:41,853:INFO:Tuning with n_jobs=-1
2023-03-19 12:24:41,854:INFO:Initializing RandomizedSearchCV
2023-03-19 12:25:58,027:INFO:best_params: {'actual_estimator__random_strength': 0.4, 'actual_estimator__n_estimators': 60, 'actual_estimator__l2_leaf_reg': 6, 'actual_estimator__eta': 0.5, 'actual_estimator__depth': 11}
2023-03-19 12:25:58,030:INFO:Hyperparameter search completed
2023-03-19 12:25:58,031:INFO:SubProcess create_model() called ==================================
2023-03-19 12:25:58,032:INFO:Initializing create_model()
2023-03-19 12:25:58,033:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F84E47AF0>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000017F84E47DF0>, return_train_score=False, kwargs={'random_strength': 0.4, 'n_estimators': 60, 'l2_leaf_reg': 6, 'eta': 0.5, 'depth': 11})
2023-03-19 12:25:58,033:INFO:Checking exceptions
2023-03-19 12:25:58,033:INFO:Importing libraries
2023-03-19 12:25:58,033:INFO:Copying training dataset
2023-03-19 12:25:58,105:INFO:Defining folds
2023-03-19 12:25:58,105:INFO:Declaring metric variables
2023-03-19 12:25:58,113:INFO:Importing untrained model
2023-03-19 12:25:58,113:INFO:Declaring custom model
2023-03-19 12:25:58,121:INFO:CatBoost Regressor Imported succesfully
2023-03-19 12:25:58,137:INFO:Starting cross validation
2023-03-19 12:25:58,138:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-19 12:26:11,521:INFO:Calculating mean and std
2023-03-19 12:26:11,522:INFO:Creating metrics dataframe
2023-03-19 12:26:11,540:INFO:Finalizing model
2023-03-19 12:26:15,728:INFO:Uploading results into container
2023-03-19 12:26:15,729:INFO:Uploading model into container now
2023-03-19 12:26:15,729:INFO:create_model_container: 9
2023-03-19 12:26:15,729:INFO:master_model_container: 9
2023-03-19 12:26:15,729:INFO:display_container: 11
2023-03-19 12:26:15,729:INFO:<catboost.core.CatBoostRegressor object at 0x0000017F84DC2940>
2023-03-19 12:26:15,729:INFO:create_model() succesfully completed......................................
2023-03-19 12:26:15,830:INFO:SubProcess create_model() end ==================================
2023-03-19 12:26:15,838:INFO:create_model_container: 9
2023-03-19 12:26:15,838:INFO:master_model_container: 9
2023-03-19 12:26:15,839:INFO:display_container: 11
2023-03-19 12:26:15,839:INFO:<catboost.core.CatBoostRegressor object at 0x0000017F84DC2940>
2023-03-19 12:26:15,839:INFO:tune_model() succesfully completed......................................
2023-03-19 12:26:47,213:INFO:Initializing predict_model()
2023-03-19 12:26:47,213:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000017F84DC2940>, probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-03-19 12:26:47,213:INFO:Checking exceptions
2023-03-19 12:26:47,214:INFO:Preloading libraries
2023-03-19 12:26:47,214:INFO:Preparing display monitor
2023-03-19 12:28:06,159:INFO:Initializing save_model()
2023-03-19 12:28:06,159:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                                                  random_state_quantile=2808,
                                                  target='price')),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2023-03-19 12:28:06,159:INFO:Adding model into prep_pipe
2023-03-19 12:28:06,214:INFO:my_best_pipeline.pkl saved in current working directory
2023-03-19 12:28:06,219:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>]],
         verbose=False)
2023-03-19 12:28:06,219:INFO:save_model() successfully completed......................................
2023-03-19 12:29:22,949:INFO:Initializing save_model()
2023-03-19 12:29:22,949:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>, model_name=my_best_catboost, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                                                  random_state_quantile=2808,
                                                  target='price')),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2023-03-19 12:29:22,949:INFO:Adding model into prep_pipe
2023-03-19 12:29:22,995:INFO:my_best_catboost.pkl saved in current working directory
2023-03-19 12:29:23,000:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000017F83CAC940>]],
         verbose=False)
2023-03-19 12:29:23,000:INFO:save_model() successfully completed......................................
2023-03-19 12:34:36,867:INFO:Initializing load_model()
2023-03-19 12:34:36,880:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:34:41,797:INFO:Initializing load_model()
2023-03-19 12:34:41,798:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:34:42,946:INFO:Initializing load_model()
2023-03-19 12:34:42,948:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:34:43,869:INFO:Initializing load_model()
2023-03-19 12:34:43,869:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:34:49,041:INFO:Initializing load_model()
2023-03-19 12:34:49,042:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:34:49,135:INFO:Initializing predict_model()
2023-03-19 12:34:49,137:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='quality')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    tar...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='quality')),
                ('fix_perfect', Remove_100(target='quality')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=123)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-19 12:34:49,139:INFO:Checking exceptions
2023-03-19 12:34:49,140:INFO:Preloading libraries
2023-03-19 12:45:26,747:INFO:Initializing load_model()
2023-03-19 12:45:26,747:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:53:20,809:INFO:Initializing load_model()
2023-03-19 12:53:20,809:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:53:27,602:INFO:Initializing load_model()
2023-03-19 12:53:27,602:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:53:28,601:INFO:Initializing load_model()
2023-03-19 12:53:28,602:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:53:28,951:INFO:Initializing load_model()
2023-03-19 12:53:28,953:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:53:29,949:INFO:Initializing load_model()
2023-03-19 12:53:29,951:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:53:31,368:INFO:Initializing load_model()
2023-03-19 12:53:31,370:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:53:31,595:INFO:Initializing load_model()
2023-03-19 12:53:31,596:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:53:32,771:INFO:Initializing load_model()
2023-03-19 12:53:32,772:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:55:04,588:INFO:Initializing load_model()
2023-03-19 12:55:04,589:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:55:08,551:INFO:Initializing load_model()
2023-03-19 12:55:08,551:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:55:09,223:INFO:Initializing load_model()
2023-03-19 12:55:09,223:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:55:09,830:INFO:Initializing load_model()
2023-03-19 12:55:09,831:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:55:12,904:INFO:Initializing load_model()
2023-03-19 12:55:12,905:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:55:30,848:INFO:Initializing load_model()
2023-03-19 12:55:30,849:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:56:00,196:INFO:Initializing load_model()
2023-03-19 12:56:00,197:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:56:04,852:INFO:Initializing load_model()
2023-03-19 12:56:04,853:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:56:06,034:INFO:Initializing load_model()
2023-03-19 12:56:06,035:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:56:07,326:INFO:Initializing load_model()
2023-03-19 12:56:07,327:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:56:08,007:INFO:Initializing load_model()
2023-03-19 12:56:08,009:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:56:08,670:INFO:Initializing load_model()
2023-03-19 12:56:08,671:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:57:01,860:INFO:Initializing load_model()
2023-03-19 12:57:01,861:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:57:04,284:INFO:Initializing load_model()
2023-03-19 12:57:04,285:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:57:04,949:INFO:Initializing load_model()
2023-03-19 12:57:04,949:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:57:05,281:INFO:Initializing load_model()
2023-03-19 12:57:05,282:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:57:05,771:INFO:Initializing load_model()
2023-03-19 12:57:05,772:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:57:06,013:INFO:Initializing load_model()
2023-03-19 12:57:06,014:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:57:08,751:INFO:Initializing load_model()
2023-03-19 12:57:08,751:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-19 12:57:10,646:INFO:Initializing load_model()
2023-03-19 12:57:10,647:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-20 08:44:40,254:INFO:Initializing load_model()
2023-03-20 08:44:40,269:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-20 08:49:07,301:INFO:Initializing load_model()
2023-03-20 08:49:07,302:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-20 08:50:40,666:INFO:Initializing load_model()
2023-03-20 08:50:40,667:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-20 08:51:00,485:INFO:Initializing load_model()
2023-03-20 08:51:00,486:INFO:load_model(model_name=extra_tree_model, platform=None, authentication=None, verbose=True)
2023-03-20 08:56:54,555:INFO:Initializing load_model()
2023-03-20 08:56:54,556:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 08:57:00,202:INFO:Initializing load_model()
2023-03-20 08:57:00,203:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 08:57:00,821:INFO:Initializing load_model()
2023-03-20 08:57:00,821:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 08:57:01,711:INFO:Initializing load_model()
2023-03-20 08:57:01,712:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 08:57:02,169:INFO:Initializing load_model()
2023-03-20 08:57:02,172:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 08:57:09,365:INFO:Initializing load_model()
2023-03-20 08:57:09,366:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 08:57:13,070:INFO:Initializing load_model()
2023-03-20 08:57:13,070:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 08:57:15,995:INFO:Initializing load_model()
2023-03-20 08:57:15,996:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 08:57:16,089:INFO:Initializing predict_model()
2023-03-20 08:57:16,089:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275E1A2130>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 08:57:16,093:INFO:Checking exceptions
2023-03-20 08:57:16,093:INFO:Preloading libraries
2023-03-20 08:59:58,454:INFO:Initializing load_model()
2023-03-20 08:59:58,455:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:00:00,994:INFO:Initializing load_model()
2023-03-20 09:00:00,995:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:00:01,074:INFO:Initializing predict_model()
2023-03-20 09:00:01,075:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275BA48A00>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:00:01,079:INFO:Checking exceptions
2023-03-20 09:00:01,079:INFO:Preloading libraries
2023-03-20 09:00:47,602:INFO:Initializing load_model()
2023-03-20 09:00:47,603:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:00:55,461:INFO:Initializing load_model()
2023-03-20 09:00:55,461:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:00,461:INFO:Initializing load_model()
2023-03-20 09:01:00,462:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:00,747:INFO:Initializing load_model()
2023-03-20 09:01:00,749:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:01,377:INFO:Initializing load_model()
2023-03-20 09:01:01,377:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:01,895:INFO:Initializing load_model()
2023-03-20 09:01:01,896:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:02,347:INFO:Initializing load_model()
2023-03-20 09:01:02,349:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:03,036:INFO:Initializing load_model()
2023-03-20 09:01:03,036:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:03,664:INFO:Initializing load_model()
2023-03-20 09:01:03,664:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:04,408:INFO:Initializing load_model()
2023-03-20 09:01:04,408:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:05,819:INFO:Initializing load_model()
2023-03-20 09:01:05,820:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:09,195:INFO:Initializing load_model()
2023-03-20 09:01:09,195:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:01:09,258:INFO:Initializing predict_model()
2023-03-20 09:01:09,259:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275E068940>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:01:09,263:INFO:Checking exceptions
2023-03-20 09:01:09,263:INFO:Preloading libraries
2023-03-20 09:02:50,025:INFO:Initializing load_model()
2023-03-20 09:02:50,026:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:02:51,856:INFO:Initializing load_model()
2023-03-20 09:02:51,857:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:02:51,921:INFO:Initializing predict_model()
2023-03-20 09:02:51,921:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275CD04250>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:02:51,924:INFO:Checking exceptions
2023-03-20 09:02:51,924:INFO:Preloading libraries
2023-03-20 09:03:16,684:INFO:Initializing load_model()
2023-03-20 09:03:16,685:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:04:03,777:INFO:Initializing load_model()
2023-03-20 09:04:03,778:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:04:04,791:INFO:Initializing load_model()
2023-03-20 09:04:04,792:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:04:16,928:INFO:Initializing load_model()
2023-03-20 09:04:16,929:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:04:17,800:INFO:Initializing load_model()
2023-03-20 09:04:17,801:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:04:36,239:INFO:Initializing load_model()
2023-03-20 09:04:36,240:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:00,923:INFO:Initializing load_model()
2023-03-20 09:05:00,925:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:09,606:INFO:Initializing load_model()
2023-03-20 09:05:09,606:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:09,677:INFO:Initializing predict_model()
2023-03-20 09:05:09,678:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275BA5D340>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:05:09,681:INFO:Checking exceptions
2023-03-20 09:05:09,681:INFO:Preloading libraries
2023-03-20 09:05:31,681:INFO:Initializing load_model()
2023-03-20 09:05:31,681:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:41,708:INFO:Initializing load_model()
2023-03-20 09:05:41,708:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:42,615:INFO:Initializing load_model()
2023-03-20 09:05:42,616:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:51,426:INFO:Initializing load_model()
2023-03-20 09:05:51,426:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:52,205:INFO:Initializing load_model()
2023-03-20 09:05:52,205:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:52,656:INFO:Initializing load_model()
2023-03-20 09:05:52,656:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:55,786:INFO:Initializing load_model()
2023-03-20 09:05:55,786:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:05:56,224:INFO:Initializing load_model()
2023-03-20 09:05:56,227:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:06:04,895:INFO:Initializing load_model()
2023-03-20 09:06:04,896:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:06:05,600:INFO:Initializing load_model()
2023-03-20 09:06:05,600:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:06:10,433:INFO:Initializing load_model()
2023-03-20 09:06:10,434:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:06:11,253:INFO:Initializing load_model()
2023-03-20 09:06:11,254:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:06:17,880:INFO:Initializing load_model()
2023-03-20 09:06:17,882:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:06:25,517:INFO:Initializing load_model()
2023-03-20 09:06:25,518:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:06:31,779:INFO:Initializing load_model()
2023-03-20 09:06:31,779:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:06:31,843:INFO:Initializing predict_model()
2023-03-20 09:06:31,844:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275CC93E50>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:06:31,848:INFO:Checking exceptions
2023-03-20 09:06:31,848:INFO:Preloading libraries
2023-03-20 09:07:06,007:INFO:Initializing load_model()
2023-03-20 09:07:06,007:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:07:09,627:INFO:Initializing load_model()
2023-03-20 09:07:09,628:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:07:09,696:INFO:Initializing predict_model()
2023-03-20 09:07:09,698:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275E066730>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:07:09,701:INFO:Checking exceptions
2023-03-20 09:07:09,701:INFO:Preloading libraries
2023-03-20 09:07:48,261:INFO:Initializing load_model()
2023-03-20 09:07:48,262:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:07:50,561:INFO:Initializing load_model()
2023-03-20 09:07:50,562:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:07:50,622:INFO:Initializing predict_model()
2023-03-20 09:07:50,623:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275E6A3B80>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:07:50,626:INFO:Checking exceptions
2023-03-20 09:07:50,626:INFO:Preloading libraries
2023-03-20 09:08:49,706:INFO:Initializing load_model()
2023-03-20 09:08:49,706:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:08:52,541:INFO:Initializing load_model()
2023-03-20 09:08:52,542:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:08:54,171:INFO:Initializing load_model()
2023-03-20 09:08:54,172:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:08:54,539:INFO:Initializing load_model()
2023-03-20 09:08:54,541:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:08:59,080:INFO:Initializing load_model()
2023-03-20 09:08:59,081:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:09:00,957:INFO:Initializing load_model()
2023-03-20 09:09:00,958:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:09:02,047:INFO:Initializing load_model()
2023-03-20 09:09:02,048:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:09:02,374:INFO:Initializing load_model()
2023-03-20 09:09:02,377:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:09:11,208:INFO:Initializing load_model()
2023-03-20 09:09:11,208:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:09:13,648:INFO:Initializing load_model()
2023-03-20 09:09:13,648:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:09:14,001:INFO:Initializing load_model()
2023-03-20 09:09:14,001:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:09:14,656:INFO:Initializing load_model()
2023-03-20 09:09:14,657:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:10:58,637:INFO:Initializing load_model()
2023-03-20 09:10:58,638:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:03,270:INFO:Initializing load_model()
2023-03-20 09:11:03,271:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:07,994:INFO:Initializing load_model()
2023-03-20 09:11:07,995:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:09,030:INFO:Initializing load_model()
2023-03-20 09:11:09,030:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:10,718:INFO:Initializing load_model()
2023-03-20 09:11:10,718:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:11,352:INFO:Initializing load_model()
2023-03-20 09:11:11,352:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:12,131:INFO:Initializing load_model()
2023-03-20 09:11:12,131:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:12,492:INFO:Initializing load_model()
2023-03-20 09:11:12,493:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:12,881:INFO:Initializing load_model()
2023-03-20 09:11:12,883:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:13,395:INFO:Initializing load_model()
2023-03-20 09:11:13,396:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:17,193:INFO:Initializing load_model()
2023-03-20 09:11:17,193:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:17,252:INFO:Initializing predict_model()
2023-03-20 09:11:17,254:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275E696370>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:11:17,256:INFO:Checking exceptions
2023-03-20 09:11:17,257:INFO:Preloading libraries
2023-03-20 09:11:24,723:INFO:Initializing load_model()
2023-03-20 09:11:24,724:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:25,867:INFO:Initializing load_model()
2023-03-20 09:11:25,868:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:27,057:INFO:Initializing load_model()
2023-03-20 09:11:27,058:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:27,117:INFO:Initializing predict_model()
2023-03-20 09:11:27,117:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275DDCE880>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:11:27,120:INFO:Checking exceptions
2023-03-20 09:11:27,120:INFO:Preloading libraries
2023-03-20 09:11:56,852:INFO:Initializing load_model()
2023-03-20 09:11:56,852:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:58,214:INFO:Initializing load_model()
2023-03-20 09:11:58,214:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:11:58,274:INFO:Initializing predict_model()
2023-03-20 09:11:58,275:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275CC93E20>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:11:58,277:INFO:Checking exceptions
2023-03-20 09:11:58,278:INFO:Preloading libraries
2023-03-20 09:12:14,332:INFO:Initializing load_model()
2023-03-20 09:12:14,333:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:12:15,871:INFO:Initializing load_model()
2023-03-20 09:12:15,872:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:12:15,932:INFO:Initializing predict_model()
2023-03-20 09:12:15,932:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275E0682E0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:12:15,934:INFO:Checking exceptions
2023-03-20 09:12:15,935:INFO:Preloading libraries
2023-03-20 09:12:26,144:INFO:Initializing load_model()
2023-03-20 09:12:26,144:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:12:27,913:INFO:Initializing load_model()
2023-03-20 09:12:27,914:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:12:27,972:INFO:Initializing predict_model()
2023-03-20 09:12:27,973:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275DDCE1C0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:12:27,975:INFO:Checking exceptions
2023-03-20 09:12:27,976:INFO:Preloading libraries
2023-03-20 09:17:33,980:INFO:Initializing load_model()
2023-03-20 09:17:33,981:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:19:00,861:INFO:Initializing load_model()
2023-03-20 09:19:00,861:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:19:05,861:INFO:Initializing load_model()
2023-03-20 09:19:05,861:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:19:11,519:INFO:Initializing load_model()
2023-03-20 09:19:11,519:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:19:30,395:INFO:Initializing load_model()
2023-03-20 09:19:30,396:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:19:33,876:INFO:Initializing load_model()
2023-03-20 09:19:33,877:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:19:33,936:INFO:Initializing predict_model()
2023-03-20 09:19:33,937:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275E696E20>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:19:33,938:INFO:Checking exceptions
2023-03-20 09:19:33,938:INFO:Preloading libraries
2023-03-20 09:19:52,058:INFO:Initializing load_model()
2023-03-20 09:19:52,059:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:19:53,175:INFO:Initializing load_model()
2023-03-20 09:19:53,175:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:19:53,231:INFO:Initializing predict_model()
2023-03-20 09:19:53,232:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275BAAC3D0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:19:53,234:INFO:Checking exceptions
2023-03-20 09:19:53,234:INFO:Preloading libraries
2023-03-20 09:20:00,664:INFO:Initializing load_model()
2023-03-20 09:20:00,665:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:20:02,802:INFO:Initializing load_model()
2023-03-20 09:20:02,802:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:20:05,006:INFO:Initializing load_model()
2023-03-20 09:20:05,007:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:20:07,228:INFO:Initializing load_model()
2023-03-20 09:20:07,228:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 09:20:07,289:INFO:Initializing predict_model()
2023-03-20 09:20:07,290:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002275E1700D0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 09:20:07,292:INFO:Checking exceptions
2023-03-20 09:20:07,293:INFO:Preloading libraries
2023-03-20 12:20:09,015:INFO:Initializing load_model()
2023-03-20 12:20:09,030:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:16,142:INFO:Initializing load_model()
2023-03-20 12:25:16,143:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:18,792:INFO:Initializing load_model()
2023-03-20 12:25:18,793:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:18,987:INFO:Initializing load_model()
2023-03-20 12:25:18,988:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:19,892:INFO:Initializing load_model()
2023-03-20 12:25:19,893:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:21,140:INFO:Initializing load_model()
2023-03-20 12:25:21,141:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:21,328:INFO:Initializing load_model()
2023-03-20 12:25:21,328:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:22,199:INFO:Initializing load_model()
2023-03-20 12:25:22,200:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:22,578:INFO:Initializing load_model()
2023-03-20 12:25:22,578:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:22,903:INFO:Initializing load_model()
2023-03-20 12:25:22,904:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:24,372:INFO:Initializing load_model()
2023-03-20 12:25:24,372:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:27,449:INFO:Initializing load_model()
2023-03-20 12:25:27,450:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:25:27,538:INFO:Initializing predict_model()
2023-03-20 12:25:27,539:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000253F2104AC0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 12:25:27,542:INFO:Checking exceptions
2023-03-20 12:25:27,543:INFO:Preloading libraries
2023-03-20 12:26:09,538:INFO:Initializing load_model()
2023-03-20 12:26:09,539:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:27:24,774:INFO:Initializing load_model()
2023-03-20 12:27:24,775:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:09,501:INFO:Initializing load_model()
2023-03-20 12:28:09,502:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:11,976:INFO:Initializing load_model()
2023-03-20 12:28:11,976:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:12,146:INFO:Initializing load_model()
2023-03-20 12:28:12,146:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:12,297:INFO:Initializing load_model()
2023-03-20 12:28:12,298:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:12,439:INFO:Initializing load_model()
2023-03-20 12:28:12,439:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:12,573:INFO:Initializing load_model()
2023-03-20 12:28:12,573:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:13,650:INFO:Initializing load_model()
2023-03-20 12:28:13,651:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:13,800:INFO:Initializing load_model()
2023-03-20 12:28:13,801:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:13,960:INFO:Initializing load_model()
2023-03-20 12:28:13,960:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:14,127:INFO:Initializing load_model()
2023-03-20 12:28:14,128:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:14,284:INFO:Initializing load_model()
2023-03-20 12:28:14,284:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:19,247:INFO:Initializing load_model()
2023-03-20 12:28:19,248:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:19,313:INFO:Initializing predict_model()
2023-03-20 12:28:19,314:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000253F198B130>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 12:28:19,316:INFO:Checking exceptions
2023-03-20 12:28:19,317:INFO:Preloading libraries
2023-03-20 12:28:26,863:INFO:Initializing load_model()
2023-03-20 12:28:26,864:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:28,527:INFO:Initializing load_model()
2023-03-20 12:28:28,527:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 12:28:28,590:INFO:Initializing predict_model()
2023-03-20 12:28:28,591:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000253F212DEE0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 12:28:28,593:INFO:Checking exceptions
2023-03-20 12:28:28,593:INFO:Preloading libraries
2023-03-20 13:03:23,353:INFO:Initializing load_model()
2023-03-20 13:03:23,354:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 13:03:25,769:INFO:Initializing load_model()
2023-03-20 13:03:25,769:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 13:03:25,829:INFO:Initializing predict_model()
2023-03-20 13:03:25,829:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000253F1F1BEE0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 13:03:25,831:INFO:Checking exceptions
2023-03-20 13:03:25,832:INFO:Preloading libraries
2023-03-20 13:04:12,870:INFO:Initializing load_model()
2023-03-20 13:04:12,877:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 13:04:14,509:INFO:Initializing load_model()
2023-03-20 13:04:14,510:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 13:04:14,569:INFO:Initializing predict_model()
2023-03-20 13:04:14,570:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000253F212DFD0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 13:04:14,572:INFO:Checking exceptions
2023-03-20 13:04:14,572:INFO:Preloading libraries
2023-03-20 13:10:57,118:INFO:Initializing load_model()
2023-03-20 13:10:57,119:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 13:10:58,843:INFO:Initializing load_model()
2023-03-20 13:10:58,844:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 13:10:58,906:INFO:Initializing predict_model()
2023-03-20 13:10:58,907:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000253F1F0FEB0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 13:10:58,910:INFO:Checking exceptions
2023-03-20 13:10:58,911:INFO:Preloading libraries
2023-03-20 13:11:24,016:INFO:Initializing load_model()
2023-03-20 13:11:24,016:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 13:11:25,366:INFO:Initializing load_model()
2023-03-20 13:11:25,367:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-20 13:11:25,425:INFO:Initializing predict_model()
2023-03-20 13:11:25,426:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000253F210F790>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-20 13:11:25,428:INFO:Checking exceptions
2023-03-20 13:11:25,429:INFO:Preloading libraries
2023-03-21 10:11:11,310:INFO:Initializing load_model()
2023-03-21 10:11:11,311:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:11:23,431:INFO:Initializing load_model()
2023-03-21 10:11:23,432:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:11:23,605:INFO:Initializing load_model()
2023-03-21 10:11:23,606:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:11:24,563:INFO:Initializing load_model()
2023-03-21 10:11:24,563:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:11:25,781:INFO:Initializing load_model()
2023-03-21 10:11:25,782:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:11:26,206:INFO:Initializing load_model()
2023-03-21 10:11:26,207:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:11:30,199:INFO:Initializing load_model()
2023-03-21 10:11:30,200:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:11:30,610:INFO:Initializing load_model()
2023-03-21 10:11:30,611:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:11:32,524:INFO:Initializing load_model()
2023-03-21 10:11:32,525:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:11:32,643:INFO:Initializing predict_model()
2023-03-21 10:11:32,644:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9E37ADF0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 10:11:32,647:INFO:Checking exceptions
2023-03-21 10:11:32,648:INFO:Preloading libraries
2023-03-21 10:19:46,586:INFO:Initializing load_model()
2023-03-21 10:19:46,587:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:20:56,102:INFO:Initializing load_model()
2023-03-21 10:20:56,102:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:24:36,486:INFO:Initializing load_model()
2023-03-21 10:24:36,487:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:33:47,411:INFO:Initializing load_model()
2023-03-21 10:33:47,412:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:33:54,105:INFO:Initializing load_model()
2023-03-21 10:33:54,106:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:33:54,515:INFO:Initializing predict_model()
2023-03-21 10:33:54,516:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9DDF2CD0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 10:33:54,518:INFO:Checking exceptions
2023-03-21 10:33:54,519:INFO:Preloading libraries
2023-03-21 10:36:58,881:INFO:Initializing load_model()
2023-03-21 10:36:58,881:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:37:02,781:INFO:Initializing load_model()
2023-03-21 10:37:02,781:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:37:03,236:INFO:Initializing load_model()
2023-03-21 10:37:03,237:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:37:03,926:INFO:Initializing load_model()
2023-03-21 10:37:03,927:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:37:04,423:INFO:Initializing load_model()
2023-03-21 10:37:04,424:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:37:07,828:INFO:Initializing load_model()
2023-03-21 10:37:07,829:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:37:09,278:INFO:Initializing load_model()
2023-03-21 10:37:09,278:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:37:09,692:INFO:Initializing predict_model()
2023-03-21 10:37:09,693:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9DE0F760>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 10:37:09,695:INFO:Checking exceptions
2023-03-21 10:37:09,695:INFO:Preloading libraries
2023-03-21 10:37:25,491:INFO:Initializing load_model()
2023-03-21 10:37:25,491:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:45:37,588:INFO:Initializing load_model()
2023-03-21 10:45:37,588:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:46:31,978:INFO:Initializing load_model()
2023-03-21 10:46:31,979:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:47:00,485:INFO:Initializing load_model()
2023-03-21 10:47:00,485:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:47:34,692:INFO:Initializing load_model()
2023-03-21 10:47:34,693:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:48:25,042:INFO:Initializing load_model()
2023-03-21 10:48:25,043:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:57:42,120:INFO:Initializing load_model()
2023-03-21 10:57:42,121:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:58:07,813:INFO:Initializing load_model()
2023-03-21 10:58:07,814:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:58:12,877:INFO:Initializing load_model()
2023-03-21 10:58:12,877:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:58:14,486:INFO:Initializing load_model()
2023-03-21 10:58:14,487:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 10:58:14,903:INFO:Initializing predict_model()
2023-03-21 10:58:14,904:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9E223E80>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 10:58:14,906:INFO:Checking exceptions
2023-03-21 10:58:14,907:INFO:Preloading libraries
2023-03-21 10:58:32,244:INFO:Initializing load_model()
2023-03-21 10:58:32,245:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:00:29,190:INFO:Initializing load_model()
2023-03-21 11:00:29,191:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:00:31,361:INFO:Initializing load_model()
2023-03-21 11:00:31,361:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:00:31,763:INFO:Initializing predict_model()
2023-03-21 11:00:31,763:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9DDF8A00>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:00:31,766:INFO:Checking exceptions
2023-03-21 11:00:31,766:INFO:Preloading libraries
2023-03-21 11:00:38,810:INFO:Initializing load_model()
2023-03-21 11:00:38,811:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:01:09,641:INFO:Initializing load_model()
2023-03-21 11:01:09,642:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:01:10,053:INFO:Initializing predict_model()
2023-03-21 11:01:10,054:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9DE0F730>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:01:10,057:INFO:Checking exceptions
2023-03-21 11:01:10,057:INFO:Preloading libraries
2023-03-21 11:01:11,089:INFO:Initializing load_model()
2023-03-21 11:01:11,090:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:01:15,990:INFO:Initializing load_model()
2023-03-21 11:01:15,991:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:01:16,388:INFO:Initializing predict_model()
2023-03-21 11:01:16,389:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9E216C70>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:01:16,391:INFO:Checking exceptions
2023-03-21 11:01:16,392:INFO:Preloading libraries
2023-03-21 11:01:21,650:INFO:Initializing load_model()
2023-03-21 11:01:21,650:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:02:28,166:INFO:Initializing load_model()
2023-03-21 11:02:28,167:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:02:28,560:INFO:Initializing predict_model()
2023-03-21 11:02:28,561:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9E39CF10>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:02:28,564:INFO:Checking exceptions
2023-03-21 11:02:28,564:INFO:Preloading libraries
2023-03-21 11:02:30,252:INFO:Initializing load_model()
2023-03-21 11:02:30,253:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:02:32,247:INFO:Initializing load_model()
2023-03-21 11:02:32,248:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:02:32,654:INFO:Initializing predict_model()
2023-03-21 11:02:32,655:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9E39C700>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:02:32,659:INFO:Checking exceptions
2023-03-21 11:02:32,659:INFO:Preloading libraries
2023-03-21 11:03:16,246:INFO:Initializing load_model()
2023-03-21 11:03:16,247:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:03:17,429:INFO:Initializing load_model()
2023-03-21 11:03:17,429:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:03:17,829:INFO:Initializing predict_model()
2023-03-21 11:03:17,830:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9E2169A0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:03:17,833:INFO:Checking exceptions
2023-03-21 11:03:17,834:INFO:Preloading libraries
2023-03-21 11:03:19,179:INFO:Initializing load_model()
2023-03-21 11:03:19,180:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:03:44,986:INFO:Initializing load_model()
2023-03-21 11:03:44,987:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:03:45,386:INFO:Initializing predict_model()
2023-03-21 11:03:45,386:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9DE0F670>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:03:45,389:INFO:Checking exceptions
2023-03-21 11:03:45,389:INFO:Preloading libraries
2023-03-21 11:09:35,669:INFO:Initializing load_model()
2023-03-21 11:09:35,669:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:09:41,112:INFO:Initializing load_model()
2023-03-21 11:09:41,113:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:09:44,896:INFO:Initializing load_model()
2023-03-21 11:09:44,897:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:09:45,294:INFO:Initializing predict_model()
2023-03-21 11:09:45,294:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9E37A100>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:09:45,296:INFO:Checking exceptions
2023-03-21 11:09:45,297:INFO:Preloading libraries
2023-03-21 11:09:50,302:INFO:Initializing load_model()
2023-03-21 11:09:50,302:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:10:24,237:INFO:Initializing load_model()
2023-03-21 11:10:24,237:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:10:24,642:INFO:Initializing predict_model()
2023-03-21 11:10:24,643:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9E37A2B0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:10:24,646:INFO:Checking exceptions
2023-03-21 11:10:24,646:INFO:Preloading libraries
2023-03-21 11:10:51,960:INFO:Initializing load_model()
2023-03-21 11:10:51,960:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:10:52,423:INFO:Initializing load_model()
2023-03-21 11:10:52,424:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:10:53,003:INFO:Initializing load_model()
2023-03-21 11:10:53,004:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:10:53,483:INFO:Initializing load_model()
2023-03-21 11:10:53,484:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:10:55,180:INFO:Initializing load_model()
2023-03-21 11:10:55,181:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:10:55,596:INFO:Initializing predict_model()
2023-03-21 11:10:55,596:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AF9E1C4940>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:10:55,600:INFO:Checking exceptions
2023-03-21 11:10:55,600:INFO:Preloading libraries
2023-03-21 11:16:41,367:INFO:Initializing load_model()
2023-03-21 11:16:41,368:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:17:08,677:INFO:Initializing load_model()
2023-03-21 11:17:08,677:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:18:23,876:INFO:Initializing load_model()
2023-03-21 11:18:23,877:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:20:20,500:INFO:Initializing load_model()
2023-03-21 11:20:20,501:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:20:22,541:INFO:Initializing load_model()
2023-03-21 11:20:22,542:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:20:23,023:INFO:Initializing load_model()
2023-03-21 11:20:23,023:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:20:24,109:INFO:Initializing load_model()
2023-03-21 11:20:24,109:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:20:43,523:INFO:Initializing load_model()
2023-03-21 11:20:43,524:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:20:43,949:INFO:Initializing predict_model()
2023-03-21 11:20:43,950:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AFA1AD4400>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:20:43,953:INFO:Checking exceptions
2023-03-21 11:20:43,954:INFO:Preloading libraries
2023-03-21 11:20:54,196:INFO:Initializing load_model()
2023-03-21 11:20:54,196:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:20:54,661:INFO:Initializing load_model()
2023-03-21 11:20:54,662:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:20:56,084:INFO:Initializing load_model()
2023-03-21 11:20:56,085:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:20:56,503:INFO:Initializing predict_model()
2023-03-21 11:20:56,504:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AFA182A460>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:20:56,508:INFO:Checking exceptions
2023-03-21 11:20:56,508:INFO:Preloading libraries
2023-03-21 11:24:15,845:INFO:Initializing load_model()
2023-03-21 11:24:15,845:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:24:33,071:INFO:Initializing load_model()
2023-03-21 11:24:33,071:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:24:33,493:INFO:Initializing predict_model()
2023-03-21 11:24:33,494:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001AFA07E0D30>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:24:33,497:INFO:Checking exceptions
2023-03-21 11:24:33,497:INFO:Preloading libraries
2023-03-21 11:52:53,751:INFO:Initializing load_model()
2023-03-21 11:52:53,752:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:53:30,086:INFO:Initializing load_model()
2023-03-21 11:53:30,087:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:54:11,325:INFO:Initializing load_model()
2023-03-21 11:54:11,325:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:54:51,299:INFO:Initializing load_model()
2023-03-21 11:54:51,300:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:57:49,212:INFO:Initializing load_model()
2023-03-21 11:57:49,213:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:57:50,783:INFO:Initializing load_model()
2023-03-21 11:57:50,784:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:57:51,213:INFO:Initializing predict_model()
2023-03-21 11:57:51,213:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C4015640>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 11:57:51,216:INFO:Checking exceptions
2023-03-21 11:57:51,217:INFO:Preloading libraries
2023-03-21 11:57:52,765:INFO:Initializing load_model()
2023-03-21 11:57:52,766:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:58:06,386:INFO:Initializing load_model()
2023-03-21 11:58:06,387:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:58:06,922:INFO:Initializing load_model()
2023-03-21 11:58:06,922:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:59:08,111:INFO:Initializing load_model()
2023-03-21 11:59:08,111:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:59:28,732:INFO:Initializing load_model()
2023-03-21 11:59:28,733:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 11:59:49,307:INFO:Initializing load_model()
2023-03-21 11:59:49,308:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:00:00,482:INFO:Initializing load_model()
2023-03-21 12:00:00,483:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:00:04,640:INFO:Initializing load_model()
2023-03-21 12:00:04,640:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:00:05,065:INFO:Initializing predict_model()
2023-03-21 12:00:05,065:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C83D3CA0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 12:00:05,068:INFO:Checking exceptions
2023-03-21 12:00:05,069:INFO:Preloading libraries
2023-03-21 12:02:54,111:INFO:Initializing load_model()
2023-03-21 12:02:54,112:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:02:56,027:INFO:Initializing load_model()
2023-03-21 12:02:56,028:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:02:56,468:INFO:Initializing predict_model()
2023-03-21 12:02:56,468:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C35CFB20>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 12:02:56,472:INFO:Checking exceptions
2023-03-21 12:02:56,472:INFO:Preloading libraries
2023-03-21 12:03:29,056:INFO:Initializing load_model()
2023-03-21 12:03:29,057:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:03:33,800:INFO:Initializing load_model()
2023-03-21 12:03:33,800:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:03:35,138:INFO:Initializing load_model()
2023-03-21 12:03:35,138:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:03:35,564:INFO:Initializing predict_model()
2023-03-21 12:03:35,565:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C83BC160>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 12:03:35,567:INFO:Checking exceptions
2023-03-21 12:03:35,567:INFO:Preloading libraries
2023-03-21 12:04:30,792:INFO:Initializing load_model()
2023-03-21 12:04:30,793:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:04:34,503:INFO:Initializing load_model()
2023-03-21 12:04:34,504:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:04:36,392:INFO:Initializing load_model()
2023-03-21 12:04:36,393:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:04:36,845:INFO:Initializing load_model()
2023-03-21 12:04:36,845:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:04:41,316:INFO:Initializing load_model()
2023-03-21 12:04:41,317:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:04:43,779:INFO:Initializing load_model()
2023-03-21 12:04:43,780:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:04:44,211:INFO:Initializing predict_model()
2023-03-21 12:04:44,212:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C61C1700>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 12:04:44,215:INFO:Checking exceptions
2023-03-21 12:04:44,215:INFO:Preloading libraries
2023-03-21 12:07:29,174:INFO:Initializing load_model()
2023-03-21 12:07:29,175:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:07:30,735:INFO:Initializing load_model()
2023-03-21 12:07:30,736:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:07:31,180:INFO:Initializing predict_model()
2023-03-21 12:07:31,181:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C81FA2E0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 12:07:31,184:INFO:Checking exceptions
2023-03-21 12:07:31,184:INFO:Preloading libraries
2023-03-21 12:08:28,722:INFO:Initializing load_model()
2023-03-21 12:08:28,722:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:08:54,981:INFO:Initializing load_model()
2023-03-21 12:08:54,982:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:08:56,385:INFO:Initializing load_model()
2023-03-21 12:08:56,386:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:08:56,852:INFO:Initializing load_model()
2023-03-21 12:08:56,853:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:08:57,320:INFO:Initializing load_model()
2023-03-21 12:08:57,321:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:08:58,203:INFO:Initializing load_model()
2023-03-21 12:08:58,204:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:08:58,680:INFO:Initializing load_model()
2023-03-21 12:08:58,681:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:08:59,153:INFO:Initializing load_model()
2023-03-21 12:08:59,154:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:08:59,631:INFO:Initializing load_model()
2023-03-21 12:08:59,632:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:01,505:INFO:Initializing load_model()
2023-03-21 12:09:01,506:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:03,750:INFO:Initializing load_model()
2023-03-21 12:09:03,751:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:04,485:INFO:Initializing load_model()
2023-03-21 12:09:04,489:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:04,983:INFO:Initializing load_model()
2023-03-21 12:09:04,984:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:05,456:INFO:Initializing load_model()
2023-03-21 12:09:05,456:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:06,685:INFO:Initializing load_model()
2023-03-21 12:09:06,685:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:07,332:INFO:Initializing load_model()
2023-03-21 12:09:07,333:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:08,759:INFO:Initializing load_model()
2023-03-21 12:09:08,759:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:10,224:INFO:Initializing load_model()
2023-03-21 12:09:10,225:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:12,438:INFO:Initializing load_model()
2023-03-21 12:09:12,439:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:12,857:INFO:Initializing predict_model()
2023-03-21 12:09:12,858:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C6A64C40>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 12:09:12,861:INFO:Checking exceptions
2023-03-21 12:09:12,861:INFO:Preloading libraries
2023-03-21 12:09:36,220:INFO:Initializing load_model()
2023-03-21 12:09:36,220:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:37,773:INFO:Initializing load_model()
2023-03-21 12:09:37,774:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:38,190:INFO:Initializing predict_model()
2023-03-21 12:09:38,190:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C61C1F10>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 12:09:38,194:INFO:Checking exceptions
2023-03-21 12:09:38,194:INFO:Preloading libraries
2023-03-21 12:09:45,852:INFO:Initializing load_model()
2023-03-21 12:09:45,853:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:47,220:INFO:Initializing load_model()
2023-03-21 12:09:47,221:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:09:47,654:INFO:Initializing predict_model()
2023-03-21 12:09:47,655:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C6A64730>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 12:09:47,658:INFO:Checking exceptions
2023-03-21 12:09:47,658:INFO:Preloading libraries
2023-03-21 12:09:59,478:INFO:Initializing load_model()
2023-03-21 12:09:59,478:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:00,372:INFO:Initializing load_model()
2023-03-21 12:10:00,372:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:00,834:INFO:Initializing load_model()
2023-03-21 12:10:00,835:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:01,299:INFO:Initializing load_model()
2023-03-21 12:10:01,299:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:02,107:INFO:Initializing load_model()
2023-03-21 12:10:02,108:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:02,798:INFO:Initializing load_model()
2023-03-21 12:10:02,799:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:03,336:INFO:Initializing load_model()
2023-03-21 12:10:03,337:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:03,807:INFO:Initializing load_model()
2023-03-21 12:10:03,807:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:04,275:INFO:Initializing load_model()
2023-03-21 12:10:04,276:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:04,779:INFO:Initializing load_model()
2023-03-21 12:10:04,780:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:05,300:INFO:Initializing load_model()
2023-03-21 12:10:05,301:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:06,150:INFO:Initializing load_model()
2023-03-21 12:10:06,151:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:07,429:INFO:Initializing load_model()
2023-03-21 12:10:07,430:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:07,897:INFO:Initializing load_model()
2023-03-21 12:10:07,898:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:08,397:INFO:Initializing load_model()
2023-03-21 12:10:08,398:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:09,024:INFO:Initializing load_model()
2023-03-21 12:10:09,026:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:11,078:INFO:Initializing load_model()
2023-03-21 12:10:11,078:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 12:10:11,501:INFO:Initializing predict_model()
2023-03-21 12:10:11,503:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001C5C6193160>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 12:10:11,506:INFO:Checking exceptions
2023-03-21 12:10:11,506:INFO:Preloading libraries
2023-03-21 15:51:48,431:INFO:Initializing load_model()
2023-03-21 15:51:48,432:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:00:28,065:INFO:Initializing load_model()
2023-03-21 16:00:28,066:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:01:58,217:INFO:Initializing load_model()
2023-03-21 16:01:58,217:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:02:09,260:INFO:Initializing load_model()
2023-03-21 16:02:09,261:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:04:15,693:INFO:Initializing load_model()
2023-03-21 16:04:15,694:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:04:38,434:INFO:Initializing load_model()
2023-03-21 16:04:38,434:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:05:09,799:INFO:Initializing load_model()
2023-03-21 16:05:09,800:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:07:38,975:INFO:Initializing load_model()
2023-03-21 16:07:38,976:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:08:16,357:INFO:Initializing load_model()
2023-03-21 16:08:16,359:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:10:21,702:INFO:Initializing load_model()
2023-03-21 16:10:21,703:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:10:28,597:INFO:Initializing load_model()
2023-03-21 16:10:28,598:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:10:44,975:INFO:Initializing load_model()
2023-03-21 16:10:44,976:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:11:02,279:INFO:Initializing load_model()
2023-03-21 16:11:02,280:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:11:18,898:INFO:Initializing load_model()
2023-03-21 16:11:18,899:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:11:27,194:INFO:Initializing load_model()
2023-03-21 16:11:27,195:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:11:27,645:INFO:Initializing predict_model()
2023-03-21 16:11:27,646:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001DDB4727A30>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 16:11:27,649:INFO:Checking exceptions
2023-03-21 16:11:27,650:INFO:Preloading libraries
2023-03-21 16:11:34,829:INFO:Initializing load_model()
2023-03-21 16:11:34,831:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:11:53,499:INFO:Initializing load_model()
2023-03-21 16:11:53,500:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:12:06,567:INFO:Initializing load_model()
2023-03-21 16:12:06,567:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:12:15,216:INFO:Initializing load_model()
2023-03-21 16:12:15,216:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:12:30,315:INFO:Initializing load_model()
2023-03-21 16:12:30,316:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:12:39,587:INFO:Initializing load_model()
2023-03-21 16:12:39,587:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:13:25,552:INFO:Initializing load_model()
2023-03-21 16:13:25,553:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:13:49,431:INFO:Initializing load_model()
2023-03-21 16:13:49,431:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:16:11,989:INFO:Initializing load_model()
2023-03-21 16:16:11,990:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:19:41,468:INFO:Initializing load_model()
2023-03-21 16:19:41,469:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:19:48,341:INFO:Initializing load_model()
2023-03-21 16:19:48,345:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:19:50,014:INFO:Initializing load_model()
2023-03-21 16:19:50,015:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:19:50,440:INFO:Initializing predict_model()
2023-03-21 16:19:50,448:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001DDB579BD90>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 16:19:50,451:INFO:Checking exceptions
2023-03-21 16:19:50,451:INFO:Preloading libraries
2023-03-21 16:20:56,074:INFO:Initializing load_model()
2023-03-21 16:20:56,075:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:21:01,648:INFO:Initializing load_model()
2023-03-21 16:21:01,649:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:21:25,427:INFO:Initializing load_model()
2023-03-21 16:21:25,427:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:22:25,374:INFO:Initializing load_model()
2023-03-21 16:22:25,374:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:22:32,446:INFO:Initializing load_model()
2023-03-21 16:22:32,446:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:22:43,972:INFO:Initializing load_model()
2023-03-21 16:22:43,972:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:42:50,263:INFO:Initializing load_model()
2023-03-21 16:42:50,264:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:01,608:INFO:Initializing load_model()
2023-03-21 16:43:01,609:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:02,108:INFO:Initializing load_model()
2023-03-21 16:43:02,109:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:03,690:INFO:Initializing load_model()
2023-03-21 16:43:03,691:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:04,130:INFO:Initializing predict_model()
2023-03-21 16:43:04,130:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000018C4CCA6B80>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 16:43:04,133:INFO:Checking exceptions
2023-03-21 16:43:04,134:INFO:Preloading libraries
2023-03-21 16:43:11,751:INFO:Initializing load_model()
2023-03-21 16:43:11,751:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:12,292:INFO:Initializing load_model()
2023-03-21 16:43:12,292:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:15,329:INFO:Initializing load_model()
2023-03-21 16:43:15,329:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:15,810:INFO:Initializing load_model()
2023-03-21 16:43:15,811:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:19,641:INFO:Initializing load_model()
2023-03-21 16:43:19,641:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:20,194:INFO:Initializing load_model()
2023-03-21 16:43:20,194:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:20,925:INFO:Initializing load_model()
2023-03-21 16:43:20,926:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:21,405:INFO:Initializing load_model()
2023-03-21 16:43:21,405:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:22,042:INFO:Initializing load_model()
2023-03-21 16:43:22,044:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:23,266:INFO:Initializing load_model()
2023-03-21 16:43:23,267:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:43:23,699:INFO:Initializing predict_model()
2023-03-21 16:43:23,699:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000018C507D5070>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 16:43:23,703:INFO:Checking exceptions
2023-03-21 16:43:23,703:INFO:Preloading libraries
2023-03-21 16:43:30,463:INFO:Initializing load_model()
2023-03-21 16:43:30,465:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:46:39,113:INFO:Initializing load_model()
2023-03-21 16:46:39,114:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:46:44,793:INFO:Initializing load_model()
2023-03-21 16:46:44,794:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:46:50,572:INFO:Initializing load_model()
2023-03-21 16:46:50,573:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 16:46:51,015:INFO:Initializing predict_model()
2023-03-21 16:46:51,016:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000018C4C1C82E0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 16:46:51,019:INFO:Checking exceptions
2023-03-21 16:46:51,020:INFO:Preloading libraries
2023-03-21 17:01:57,249:INFO:Initializing load_model()
2023-03-21 17:01:57,250:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:02:15,461:INFO:Initializing load_model()
2023-03-21 17:02:15,462:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:03:12,249:INFO:Initializing load_model()
2023-03-21 17:03:12,250:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:03:13,954:INFO:Initializing load_model()
2023-03-21 17:03:13,955:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:03:45,219:INFO:Initializing load_model()
2023-03-21 17:03:45,220:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:03:46,878:INFO:Initializing load_model()
2023-03-21 17:03:46,878:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:04:04,175:INFO:Initializing load_model()
2023-03-21 17:04:04,175:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:04:06,155:INFO:Initializing load_model()
2023-03-21 17:04:06,155:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:04:26,086:INFO:Initializing load_model()
2023-03-21 17:04:26,087:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:04:27,899:INFO:Initializing load_model()
2023-03-21 17:04:27,899:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:06:20,816:INFO:Initializing load_model()
2023-03-21 17:06:20,817:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:06:23,194:INFO:Initializing load_model()
2023-03-21 17:06:23,194:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:06:32,544:INFO:Initializing load_model()
2023-03-21 17:06:32,545:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-21 17:06:32,969:INFO:Initializing predict_model()
2023-03-21 17:06:32,970:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000018C4C1CA3A0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-21 17:06:32,973:INFO:Checking exceptions
2023-03-21 17:06:32,974:INFO:Preloading libraries
2023-03-24 09:26:59,597:INFO:Initializing load_model()
2023-03-24 09:26:59,597:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:32:32,489:INFO:Initializing load_model()
2023-03-24 09:32:32,490:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:32:35,475:INFO:Initializing load_model()
2023-03-24 09:32:35,476:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:33:20,096:INFO:Initializing load_model()
2023-03-24 09:33:20,097:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:33:22,109:INFO:Initializing load_model()
2023-03-24 09:33:22,109:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:33:46,162:INFO:Initializing load_model()
2023-03-24 09:33:46,163:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:33:46,621:INFO:Initializing predict_model()
2023-03-24 09:33:46,621:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94C807670>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 09:33:46,623:INFO:Checking exceptions
2023-03-24 09:33:46,624:INFO:Preloading libraries
2023-03-24 09:34:52,921:INFO:Initializing load_model()
2023-03-24 09:34:52,922:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:34:55,348:INFO:Initializing load_model()
2023-03-24 09:34:55,350:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:34:55,772:INFO:Initializing predict_model()
2023-03-24 09:34:55,773:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94C807670>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 09:34:55,775:INFO:Checking exceptions
2023-03-24 09:34:55,776:INFO:Preloading libraries
2023-03-24 09:35:32,952:INFO:Initializing load_model()
2023-03-24 09:35:32,953:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:35:33,939:INFO:Initializing load_model()
2023-03-24 09:35:33,941:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:35:34,423:INFO:Initializing load_model()
2023-03-24 09:35:34,424:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:35:34,902:INFO:Initializing load_model()
2023-03-24 09:35:34,903:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:35:38,079:INFO:Initializing load_model()
2023-03-24 09:35:38,080:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:35:38,796:INFO:Initializing load_model()
2023-03-24 09:35:38,797:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:35:39,739:INFO:Initializing load_model()
2023-03-24 09:35:39,740:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:35:40,469:INFO:Initializing load_model()
2023-03-24 09:35:40,470:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:35:42,278:INFO:Initializing load_model()
2023-03-24 09:35:42,278:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:35:42,689:INFO:Initializing predict_model()
2023-03-24 09:35:42,690:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C946B39A60>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 09:35:42,692:INFO:Checking exceptions
2023-03-24 09:35:42,692:INFO:Preloading libraries
2023-03-24 09:38:27,296:INFO:Initializing load_model()
2023-03-24 09:38:27,297:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:38:41,491:INFO:Initializing load_model()
2023-03-24 09:38:41,492:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:38:43,198:INFO:Initializing load_model()
2023-03-24 09:38:43,199:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:38:46,072:INFO:Initializing load_model()
2023-03-24 09:38:46,073:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:38:46,838:INFO:Initializing load_model()
2023-03-24 09:38:46,842:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:38:48,293:INFO:Initializing load_model()
2023-03-24 09:38:48,294:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:38:55,464:INFO:Initializing load_model()
2023-03-24 09:38:55,465:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:38:57,070:INFO:Initializing load_model()
2023-03-24 09:38:57,073:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:39:00,889:INFO:Initializing load_model()
2023-03-24 09:39:00,891:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:39:01,296:INFO:Initializing predict_model()
2023-03-24 09:39:01,298:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C935768130>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 09:39:01,301:INFO:Checking exceptions
2023-03-24 09:39:01,301:INFO:Preloading libraries
2023-03-24 09:39:05,804:INFO:Initializing load_model()
2023-03-24 09:39:05,805:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:54:20,783:INFO:Initializing load_model()
2023-03-24 09:54:20,783:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:54:44,444:INFO:Initializing load_model()
2023-03-24 09:54:44,445:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:54:51,139:INFO:Initializing load_model()
2023-03-24 09:54:51,141:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:54:58,907:INFO:Initializing load_model()
2023-03-24 09:54:58,907:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:54:59,647:INFO:Initializing load_model()
2023-03-24 09:54:59,648:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:55:00,400:INFO:Initializing load_model()
2023-03-24 09:55:00,401:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:55:00,870:INFO:Initializing load_model()
2023-03-24 09:55:00,871:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:55:01,361:INFO:Initializing load_model()
2023-03-24 09:55:01,361:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:55:02,714:INFO:Initializing load_model()
2023-03-24 09:55:02,715:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:56:06,171:INFO:Initializing load_model()
2023-03-24 09:56:06,172:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:58:17,984:INFO:Initializing load_model()
2023-03-24 09:58:17,985:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:59:05,740:INFO:Initializing load_model()
2023-03-24 09:59:05,741:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:59:19,819:INFO:Initializing load_model()
2023-03-24 09:59:19,819:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:59:21,652:INFO:Initializing load_model()
2023-03-24 09:59:21,653:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:59:22,818:INFO:Initializing load_model()
2023-03-24 09:59:22,819:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:59:23,735:INFO:Initializing load_model()
2023-03-24 09:59:23,736:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:59:24,359:INFO:Initializing load_model()
2023-03-24 09:59:24,360:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:59:31,182:INFO:Initializing load_model()
2023-03-24 09:59:31,183:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 09:59:31,648:INFO:Initializing load_model()
2023-03-24 09:59:31,649:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:00:12,609:INFO:Initializing load_model()
2023-03-24 10:00:12,609:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:01:15,221:INFO:Initializing load_model()
2023-03-24 10:01:15,222:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:31,643:INFO:Initializing load_model()
2023-03-24 10:04:31,643:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:38,102:INFO:Initializing load_model()
2023-03-24 10:04:38,103:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:41,613:INFO:Initializing load_model()
2023-03-24 10:04:41,614:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:45,360:INFO:Initializing load_model()
2023-03-24 10:04:45,361:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:48,392:INFO:Initializing load_model()
2023-03-24 10:04:48,393:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:48,859:INFO:Initializing load_model()
2023-03-24 10:04:48,860:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:49,330:INFO:Initializing load_model()
2023-03-24 10:04:49,331:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:52,950:INFO:Initializing load_model()
2023-03-24 10:04:52,951:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:53,445:INFO:Initializing load_model()
2023-03-24 10:04:53,446:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:53,915:INFO:Initializing load_model()
2023-03-24 10:04:53,916:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:04:54,384:INFO:Initializing load_model()
2023-03-24 10:04:54,385:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:06:19,479:INFO:Initializing load_model()
2023-03-24 10:06:19,479:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:06:19,973:INFO:Initializing load_model()
2023-03-24 10:06:19,974:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:06:33,154:INFO:Initializing load_model()
2023-03-24 10:06:33,154:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:06:42,275:INFO:Initializing load_model()
2023-03-24 10:06:42,275:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:06:43,449:INFO:Initializing load_model()
2023-03-24 10:06:43,450:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:06:43,860:INFO:Initializing predict_model()
2023-03-24 10:06:43,861:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C946B39100>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:06:43,863:INFO:Checking exceptions
2023-03-24 10:06:43,864:INFO:Preloading libraries
2023-03-24 10:08:06,986:INFO:Initializing load_model()
2023-03-24 10:08:06,987:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:08:08,722:INFO:Initializing load_model()
2023-03-24 10:08:08,723:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:08:09,149:INFO:Initializing predict_model()
2023-03-24 10:08:09,151:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C946B39670>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:08:09,154:INFO:Checking exceptions
2023-03-24 10:08:09,155:INFO:Preloading libraries
2023-03-24 10:08:45,242:INFO:Initializing load_model()
2023-03-24 10:08:45,243:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:08:49,028:INFO:Initializing load_model()
2023-03-24 10:08:49,030:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:08:49,451:INFO:Initializing predict_model()
2023-03-24 10:08:49,452:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C946F34340>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:08:49,455:INFO:Checking exceptions
2023-03-24 10:08:49,456:INFO:Preloading libraries
2023-03-24 10:08:53,439:INFO:Initializing load_model()
2023-03-24 10:08:53,440:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:09:15,571:INFO:Initializing load_model()
2023-03-24 10:09:15,572:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:09:22,732:INFO:Initializing load_model()
2023-03-24 10:09:22,733:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:09:23,159:INFO:Initializing predict_model()
2023-03-24 10:09:23,159:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C946B37070>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:09:23,162:INFO:Checking exceptions
2023-03-24 10:09:23,162:INFO:Preloading libraries
2023-03-24 10:09:37,706:INFO:Initializing load_model()
2023-03-24 10:09:37,707:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:15:01,952:INFO:Initializing load_model()
2023-03-24 10:15:01,953:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:16:39,756:INFO:Initializing load_model()
2023-03-24 10:16:39,757:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:17:35,622:INFO:Initializing load_model()
2023-03-24 10:17:35,623:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:17:42,106:INFO:Initializing load_model()
2023-03-24 10:17:42,107:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:17:58,888:INFO:Initializing load_model()
2023-03-24 10:17:58,888:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:18:24,971:INFO:Initializing load_model()
2023-03-24 10:18:24,972:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:18:25,385:INFO:Initializing predict_model()
2023-03-24 10:18:25,386:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94E270AF0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:18:25,389:INFO:Checking exceptions
2023-03-24 10:18:25,389:INFO:Preloading libraries
2023-03-24 10:19:46,084:INFO:Initializing load_model()
2023-03-24 10:19:46,085:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:19:46,564:INFO:Initializing load_model()
2023-03-24 10:19:46,565:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:19:47,029:INFO:Initializing load_model()
2023-03-24 10:19:47,031:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:19:47,575:INFO:Initializing load_model()
2023-03-24 10:19:47,576:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:19:48,070:INFO:Initializing load_model()
2023-03-24 10:19:48,070:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:19:48,554:INFO:Initializing load_model()
2023-03-24 10:19:48,554:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:19:50,647:INFO:Initializing load_model()
2023-03-24 10:19:50,648:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:19:52,112:INFO:Initializing load_model()
2023-03-24 10:19:52,112:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:20:17,764:INFO:Initializing load_model()
2023-03-24 10:20:17,764:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:20:18,198:INFO:Initializing predict_model()
2023-03-24 10:20:18,198:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C9505EBBB0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:20:18,201:INFO:Checking exceptions
2023-03-24 10:20:18,201:INFO:Preloading libraries
2023-03-24 10:21:11,851:INFO:Initializing load_model()
2023-03-24 10:21:11,851:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:16,298:INFO:Initializing load_model()
2023-03-24 10:21:16,299:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:26,797:INFO:Initializing load_model()
2023-03-24 10:21:26,798:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:29,889:INFO:Initializing load_model()
2023-03-24 10:21:29,890:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:32,083:INFO:Initializing load_model()
2023-03-24 10:21:32,083:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:32,969:INFO:Initializing load_model()
2023-03-24 10:21:32,971:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:33,452:INFO:Initializing load_model()
2023-03-24 10:21:33,454:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:36,086:INFO:Initializing load_model()
2023-03-24 10:21:36,087:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:36,497:INFO:Initializing predict_model()
2023-03-24 10:21:36,498:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94B48B490>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:21:36,500:INFO:Checking exceptions
2023-03-24 10:21:36,501:INFO:Preloading libraries
2023-03-24 10:21:55,627:INFO:Initializing load_model()
2023-03-24 10:21:55,628:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:57,205:INFO:Initializing load_model()
2023-03-24 10:21:57,206:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:21:57,634:INFO:Initializing predict_model()
2023-03-24 10:21:57,635:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94B497670>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:21:57,637:INFO:Checking exceptions
2023-03-24 10:21:57,638:INFO:Preloading libraries
2023-03-24 10:22:04,154:INFO:Initializing load_model()
2023-03-24 10:22:04,155:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:22:04,690:INFO:Initializing load_model()
2023-03-24 10:22:04,691:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:22:05,247:INFO:Initializing load_model()
2023-03-24 10:22:05,249:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:22:06,712:INFO:Initializing load_model()
2023-03-24 10:22:06,713:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:22:07,133:INFO:Initializing predict_model()
2023-03-24 10:22:07,134:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94B633DC0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:22:07,137:INFO:Checking exceptions
2023-03-24 10:22:07,137:INFO:Preloading libraries
2023-03-24 10:22:59,118:INFO:Initializing load_model()
2023-03-24 10:22:59,119:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:23:00,188:INFO:Initializing load_model()
2023-03-24 10:23:00,190:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:23:00,608:INFO:Initializing predict_model()
2023-03-24 10:23:00,609:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94768C5B0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:23:00,612:INFO:Checking exceptions
2023-03-24 10:23:00,612:INFO:Preloading libraries
2023-03-24 10:24:07,870:INFO:Initializing load_model()
2023-03-24 10:24:07,871:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:24:11,413:INFO:Initializing load_model()
2023-03-24 10:24:11,415:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:24:11,880:INFO:Initializing load_model()
2023-03-24 10:24:11,881:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:24:16,277:INFO:Initializing load_model()
2023-03-24 10:24:16,278:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:24:16,689:INFO:Initializing predict_model()
2023-03-24 10:24:16,689:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94B63D730>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:24:16,692:INFO:Checking exceptions
2023-03-24 10:24:16,692:INFO:Preloading libraries
2023-03-24 10:27:00,952:INFO:Initializing load_model()
2023-03-24 10:27:00,953:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:02,487:INFO:Initializing load_model()
2023-03-24 10:27:02,488:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:02,962:INFO:Initializing load_model()
2023-03-24 10:27:02,962:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:03,442:INFO:Initializing load_model()
2023-03-24 10:27:03,442:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:03,916:INFO:Initializing load_model()
2023-03-24 10:27:03,917:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:07,680:INFO:Initializing load_model()
2023-03-24 10:27:07,681:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:08,177:INFO:Initializing load_model()
2023-03-24 10:27:08,178:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:08,659:INFO:Initializing load_model()
2023-03-24 10:27:08,659:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:09,129:INFO:Initializing load_model()
2023-03-24 10:27:09,130:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:09,947:INFO:Initializing load_model()
2023-03-24 10:27:09,948:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:38,197:INFO:Initializing load_model()
2023-03-24 10:27:38,198:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:27:59,056:INFO:Initializing load_model()
2023-03-24 10:27:59,057:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:28:00,940:INFO:Initializing load_model()
2023-03-24 10:28:00,941:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:28:03,429:INFO:Initializing load_model()
2023-03-24 10:28:03,429:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:28:20,686:INFO:Initializing load_model()
2023-03-24 10:28:20,686:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:28:26,321:INFO:Initializing load_model()
2023-03-24 10:28:26,322:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:28:26,759:INFO:Initializing predict_model()
2023-03-24 10:28:26,760:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94B4973D0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:28:26,763:INFO:Checking exceptions
2023-03-24 10:28:26,764:INFO:Preloading libraries
2023-03-24 10:29:13,867:INFO:Initializing load_model()
2023-03-24 10:29:13,867:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:29:54,340:INFO:Initializing load_model()
2023-03-24 10:29:54,341:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:29:59,275:INFO:Initializing load_model()
2023-03-24 10:29:59,275:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:29:59,683:INFO:Initializing predict_model()
2023-03-24 10:29:59,684:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C946B38550>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:29:59,687:INFO:Checking exceptions
2023-03-24 10:29:59,687:INFO:Preloading libraries
2023-03-24 10:30:49,729:INFO:Initializing load_model()
2023-03-24 10:30:49,730:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:34:41,660:INFO:Initializing load_model()
2023-03-24 10:34:41,661:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:37:10,615:INFO:Initializing load_model()
2023-03-24 10:37:10,615:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:38:57,571:INFO:Initializing load_model()
2023-03-24 10:38:57,571:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:39:11,088:INFO:Initializing load_model()
2023-03-24 10:39:11,089:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:40:29,134:INFO:Initializing load_model()
2023-03-24 10:40:29,135:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:40:56,145:INFO:Initializing load_model()
2023-03-24 10:40:56,146:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:02,697:INFO:Initializing load_model()
2023-03-24 10:41:02,698:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:04,341:INFO:Initializing load_model()
2023-03-24 10:41:04,342:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:06,507:INFO:Initializing load_model()
2023-03-24 10:41:06,507:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:06,984:INFO:Initializing load_model()
2023-03-24 10:41:06,985:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:07,680:INFO:Initializing load_model()
2023-03-24 10:41:07,683:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:08,614:INFO:Initializing load_model()
2023-03-24 10:41:08,615:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:10,014:INFO:Initializing load_model()
2023-03-24 10:41:10,016:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:15,900:INFO:Initializing load_model()
2023-03-24 10:41:15,901:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:18,449:INFO:Initializing load_model()
2023-03-24 10:41:18,450:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:29,109:INFO:Initializing load_model()
2023-03-24 10:41:29,110:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:41:29,579:INFO:Initializing predict_model()
2023-03-24 10:41:29,580:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C949AB87C0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:41:29,583:INFO:Checking exceptions
2023-03-24 10:41:29,583:INFO:Preloading libraries
2023-03-24 10:42:03,012:INFO:Initializing load_model()
2023-03-24 10:42:03,012:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:42:20,435:INFO:Initializing load_model()
2023-03-24 10:42:20,436:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:42:22,219:INFO:Initializing load_model()
2023-03-24 10:42:22,220:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:42:22,905:INFO:Initializing load_model()
2023-03-24 10:42:22,907:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:42:26,331:INFO:Initializing load_model()
2023-03-24 10:42:26,332:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:42:31,774:INFO:Initializing load_model()
2023-03-24 10:42:31,779:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-24 10:42:32,242:INFO:Initializing predict_model()
2023-03-24 10:42:32,243:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002C94D5BBBE0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-24 10:42:32,247:INFO:Checking exceptions
2023-03-24 10:42:32,247:INFO:Preloading libraries
2023-03-24 10:42:39,467:INFO:Initializing load_model()
2023-03-24 10:42:39,468:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:24:54,414:INFO:Initializing load_model()
2023-03-26 12:24:54,415:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:25:21,651:INFO:Initializing load_model()
2023-03-26 12:25:21,652:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:25:32,071:INFO:Initializing load_model()
2023-03-26 12:25:32,075:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:25:34,551:INFO:Initializing load_model()
2023-03-26 12:25:34,552:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:25:40,012:INFO:Initializing load_model()
2023-03-26 12:25:40,013:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:25:50,196:INFO:Initializing load_model()
2023-03-26 12:25:50,197:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:25:50,672:INFO:Initializing predict_model()
2023-03-26 12:25:50,673:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000192AFC1F220>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-26 12:25:50,676:INFO:Checking exceptions
2023-03-26 12:25:50,676:INFO:Preloading libraries
2023-03-26 12:27:18,869:INFO:Initializing load_model()
2023-03-26 12:27:18,870:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:26,315:INFO:Initializing load_model()
2023-03-26 12:27:26,316:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:28,163:INFO:Initializing load_model()
2023-03-26 12:27:28,164:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:28,635:INFO:Initializing load_model()
2023-03-26 12:27:28,637:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:31,231:INFO:Initializing load_model()
2023-03-26 12:27:31,231:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:34,087:INFO:Initializing load_model()
2023-03-26 12:27:34,088:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:34,564:INFO:Initializing load_model()
2023-03-26 12:27:34,565:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:35,687:INFO:Initializing load_model()
2023-03-26 12:27:35,689:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:36,171:INFO:Initializing load_model()
2023-03-26 12:27:36,171:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:39,756:INFO:Initializing load_model()
2023-03-26 12:27:39,757:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:48,872:INFO:Initializing load_model()
2023-03-26 12:27:48,876:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:49,358:INFO:Initializing load_model()
2023-03-26 12:27:49,359:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:27:49,847:INFO:Initializing load_model()
2023-03-26 12:27:49,847:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:03,455:INFO:Initializing load_model()
2023-03-26 12:28:03,456:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:06,739:INFO:Initializing load_model()
2023-03-26 12:28:06,740:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:08,038:INFO:Initializing load_model()
2023-03-26 12:28:08,039:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:09,121:INFO:Initializing load_model()
2023-03-26 12:28:09,121:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:10,776:INFO:Initializing load_model()
2023-03-26 12:28:10,777:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:11,418:INFO:Initializing load_model()
2023-03-26 12:28:11,420:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:13,010:INFO:Initializing load_model()
2023-03-26 12:28:13,011:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:14,125:INFO:Initializing load_model()
2023-03-26 12:28:14,126:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:14,621:INFO:Initializing load_model()
2023-03-26 12:28:14,622:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:26,556:INFO:Initializing load_model()
2023-03-26 12:28:26,557:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:27,108:INFO:Initializing load_model()
2023-03-26 12:28:27,109:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:27,975:INFO:Initializing load_model()
2023-03-26 12:28:27,976:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:29,218:INFO:Initializing load_model()
2023-03-26 12:28:29,219:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:30,197:INFO:Initializing load_model()
2023-03-26 12:28:30,198:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:31,084:INFO:Initializing load_model()
2023-03-26 12:28:31,085:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:31,939:INFO:Initializing load_model()
2023-03-26 12:28:31,940:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:37,687:INFO:Initializing load_model()
2023-03-26 12:28:37,689:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:41,804:INFO:Initializing load_model()
2023-03-26 12:28:41,805:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:28:42,233:INFO:Initializing predict_model()
2023-03-26 12:28:42,234:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['locality'],
                                      ml_usecase='regression',
                                      numerical_features=['area',
                                                          'bathroom_num',
                                                          'bedroom_num'],
                                      target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_l...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000192AE9CC4F0>]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-03-26 12:28:42,236:INFO:Checking exceptions
2023-03-26 12:28:42,236:INFO:Preloading libraries
2023-03-26 12:28:51,284:INFO:Initializing load_model()
2023-03-26 12:28:51,284:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:51:24,573:INFO:Initializing load_model()
2023-03-26 12:51:24,574:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:51:31,335:INFO:Initializing load_model()
2023-03-26 12:51:31,336:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:52:33,000:INFO:Initializing load_model()
2023-03-26 12:52:33,001:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
2023-03-26 12:52:46,228:INFO:Initializing load_model()
2023-03-26 12:52:46,229:INFO:load_model(model_name=my_best_catboost, platform=None, authentication=None, verbose=True)
